/docker-entrypoint.sh: Creating directories and symlinks to hold GoCD configuration, data, and logs
$ mkdir /go-working-dir
'/go-working-dir/artifacts' -> '/godata/artifacts'
$ chown go:go /go-working-dir
$ ln -sv /godata/artifacts /go-working-dir/artifacts
$ chown go:go /go-working-dir/artifacts
$ ln -sv /godata/config /go-working-dir/config
'/go-working-dir/config' -> '/godata/config'
$ chown go:go /go-working-dir/config
$ ln -sv /godata/db /go-working-dir/db
'/go-working-dir/db' -> '/godata/db'
$ chown go:go /go-working-dir/db
$ ln -sv /godata/logs /go-working-dir/logs
'/go-working-dir/logs' -> '/godata/logs'
$ chown go:go /go-working-dir/logs
$ ln -sv /godata/plugins /go-working-dir/plugins
'/go-working-dir/plugins' -> '/godata/plugins'
$ chown go:go /go-working-dir/plugins
$ ln -sv /godata/addons /go-working-dir/addons
'/go-working-dir/addons' -> '/godata/addons'
$ chown go:go /go-working-dir/addons
$ install-gocd-plugins
/usr/local/sbin/install-gocd-plugins: Overwriting the plugin '/godata/plugins/external/docker-registry-artifact-plugin.jar' with new jar.
$ rm /godata/plugins/external/docker-registry-artifact-plugin.jar
$ curl --silent --location --fail --retry 3 https://github.com/gocd/docker-registry-artifact-plugin/releases/download/1.0.0/docker-registry-artifact-plugin-1.0.0-3.jar --output /godata/plugins/external/docker-registry-artifact-plugin.jar
$ chown go:go /godata/plugins/external/docker-registry-artifact-plugin.jar
/usr/local/sbin/install-gocd-plugins: Overwriting the plugin '/godata/plugins/external/kubernetes-elastic-agents.jar' with new jar.
$ rm /godata/plugins/external/kubernetes-elastic-agents.jar
$ curl --silent --location --fail --retry 3 https://github.com/gocd/kubernetes-elastic-agents/releases/download/v2.0.0/kubernetes-elastic-agent-2.0.0-113.jar --output /godata/plugins/external/kubernetes-elastic-agents.jar
$ chown go:go /godata/plugins/external/kubernetes-elastic-agents.jar
$ git-clone-config
$ cd /godata/config
/docker-entrypoint.sh: Running custom scripts in /docker-entrypoint.d/ ...
$ /docker-entrypoint.d/addon_config.sh
$ exec /sbin/tini -- su-exec go /docker-entrypoint.sh /go-server/server.sh
$ exec /go-server/server.sh
[Tue Dec 18 11:15:17 GMT 2018] Starting process: 
[Tue Dec 18 11:15:17 GMT 2018]   Working directory    : /go-working-dir
[Tue Dec 18 11:15:17 GMT 2018]   Application arguments: []
[Tue Dec 18 11:15:17 GMT 2018]            GoCD Version: 18.11.0-8024
Could not find file `/go-working-dir/config/logback.xml'. Attempting to load from classpath.
Using classpath resource `jar:onejar:lib/server-launcher-18.11.0-8024-main.jar!/config/logback.xml'.
2018-12-18 11:15:19,419 INFO  [main] GoSslSocketConnector:81 - Included ciphers: null
2018-12-18 11:15:19,429 INFO  [main] GoSslSocketConnector:82 - Excluded ciphers: null
2018-12-18 11:15:19,429 INFO  [main] GoSslSocketConnector:83 - Included protocols: null
2018-12-18 11:15:19,430 INFO  [main] GoSslSocketConnector:84 - Excluded protocols: null
2018-12-18 11:15:19,434 INFO  [main] GoSslSocketConnector:85 - Renegotiation Allowed: true
2018-12-18 11:15:19,536 INFO  [main] Jetty9Server:212 - Configuring Jetty using /go-working-dir/config/jetty.xml
2018-12-18 11:15:19,589 INFO  [main] GoServer:94 - Including addons: addons/go-postgresql-18.12.0-8213-520daad.jar
2018-12-18 11:15:19,590 WARN  [main] Server:355 - ErrorPageMapper not supported for Server level Error Handling
2018-12-18 11:15:19,704 WARN  [main] AbstractHandler:112 - No Server set for org.eclipse.jetty.server.handler.ResourceHandler@152aa092
2018-12-18 11:15:25,080 INFO  [main] PostgresqlDatabase:95 - [DB] Using connection configuration jdbc:postgresql://my-release-postgresql:5432/cruise [User: postgres] [Password Encrypted: false]
2018-12-18 11:15:25,178 INFO  [main] PostgresqlDatabase:73 - [DB] Changelog exists. Skipping creation of a new table.
Reading change scripts from directory /godata/db/pgsqldeltas...
dbdeploy v2.11
Changes currently applied to database:
  1302001
Scripts available:
  1302001, 1303001..1303004, 1304001, 1401001, 1403001, 1403002, 1501001..1501003, 1502001, 1503001, 1503002, 1606001, 1606002, 1607001, 1610001, 1701001, 1701002, 1702001, 1704001..1704004, 1708001, 1801001..1801007, 1802001, 1802002, 1804001, 1805001, 1807001, 1807002, 1808001, 1808002
To be applied:
  1303001..1303004, 1304001, 1401001, 1403001, 1403002, 1501001..1501003, 1502001, 1503001, 1503002, 1606001, 1606002, 1607001, 1610001, 1701001, 1701002, 1702001, 1704001..1704004, 1708001, 1801001..1801007, 1802001, 1802002, 1804001, 1805001, 1807001, 1807002, 1808001, 1808002
2018-12-18 11:15:25,342 ERROR [main] PostgresqlDatabase:109 - null
org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [

--------------- Fragment begins: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303001_add_additional_data_field_to_modifications_table.sql');
COMMIT;


-- Change script: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql
ALTER TABLE modifications ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------


--------------- Fragment begins: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303002_add_index_to_builds_on_stageId.sql');
COMMIT;


-- Change script: #1303002: 1303002_add_index_to_builds_on_stageId.sql
CREATE INDEX idx_builds_stageId ON builds(stageId);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------


--------------- Fragment begins: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303003_add_index_to_stages_resources_tables.sql');
COMMIT;


-- Change script: #1303003: 1303003_add_index_to_stages_resources_tables.sql
CREATE INDEX idx_stages_pipelineId ON stages(pipelineid);
CREATE INDEX idx_resources_buildId ON resources(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------


--------------- Fragment begins: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303004_indexes_based_on_purge_tool.sql');
COMMIT;


-- Change script: #1303004: 1303004_indexes_based_on_purge_tool.sql
CREATE INDEX idx_properties_buildId ON properties(buildId);
CREATE INDEX idx_materials_pipelinename ON materials(pipelinename);
CREATE INDEX idx_artifactpropertiesgenerator_jobid ON artifactpropertiesgenerator(jobid);
CREATE INDEX idx_environmentvariables_entitytype ON environmentvariables(entitytype);
CREATE INDEX idx_stageartifactcleanupprohibited_pipelinename ON stageartifactcleanupprohibited(pipelinename);
CREATE INDEX idx_pipelineLabelCounts_pipelinename ON pipelineLabelCounts(pipelinename);




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------


--------------- Fragment begins: #1304001: 1304001_remove_luau_related_entries.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1304001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1304001_remove_luau_related_entries.sql');
COMMIT;


-- Change script: #1304001: 1304001_remove_luau_related_entries.sql
DROP TABLE IF EXISTS luau_groups_users;
DROP TABLE IF EXISTS luau_groups;
DROP TABLE IF EXISTS luaustate;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1304001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1304001: 1304001_remove_luau_related_entries.sql ---------------


--------------- Fragment begins: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1401001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1401001_recreating_trigger_because_of_cruise_to_go_change.sql');
COMMIT;


-- Change script: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql
SELECT (1);


UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1401001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------


--------------- Fragment begins: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403001_fix_null_artifacttype_on_artifactplans_table.sql');
COMMIT;


-- Change script: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql
UPDATE ARTIFACTPLANS SET ARTIFACTTYPE='file' WHERE ARTIFACTTYPE IS NULL;
COMMIT;

-- No undo as adding default value to mandatory field



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------


--------------- Fragment begins: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql');
COMMIT;


-- Change script: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

alter table builds add column runMultipleInstance boolean default false;

DROP VIEW _builds;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------


--------------- Fragment begins: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql');
COMMIT;


-- Change script: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelineselections RENAME COLUMN unselectedpipelines TO selections;

ALTER TABLE pipelineselections ADD COLUMN isblacklist BOOLEAN DEFAULT true;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------


--------------- Fragment begins: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501002_add_comment_column_to_pipelines.sql');
COMMIT;


-- Change script: #1501002: 1501002_add_comment_column_to_pipelines.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelines ADD COLUMN comment TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------


--------------- Fragment begins: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501003_add_additional_data_field_to_materials_table.sql');
COMMIT;


-- Change script: #1501003: 1501003_add_additional_data_field_to_materials_table.sql
ALTER TABLE materials ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------


--------------- Fragment begins: #1502001: 1502001_create_plugins_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1502001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1502001_create_plugins_table.sql');
COMMIT;


-- Change script: #1502001: 1502001_create_plugins_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE plugins_id_seq START WITH 1;
CREATE TABLE plugins (
    id              BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pluginId        VARCHAR(255) Not NULL,
    configuration   TEXT,
    UNIQUE (pluginId)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1502001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1502001: 1502001_create_plugins_table.sql ---------------


--------------- Fragment begins: #1503001: 1503001_remove_licensing_from_users.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503001_remove_licensing_from_users.sql');
COMMIT;


-- Change script: #1503001: 1503001_remove_licensing_from_users.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE users DROP COLUMN disableLicenseExpiryWarning;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503001: 1503001_remove_licensing_from_users.sql ---------------


--------------- Fragment begins: #1503002: 1503002_create_version_infos_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503002_create_version_infos_table.sql');
COMMIT;


-- Change script: #1503002: 1503002_create_version_infos_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2015 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE versioninfos_id_seq START WITH 1;
CREATE TABLE versioninfos (
    id                      BIGINT DEFAULT nextval('versioninfos_id_seq') PRIMARY KEY,
    componentName           VARCHAR(255) Not NULL,
    installedVersion        VARCHAR(100) Not NULL,
    latestVersion           VARCHAR(50),
    latestVersionUpdatedAt  TIMESTAMP,
    UNIQUE (componentName)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503002: 1503002_create_version_infos_table.sql ---------------


--------------- Fragment begins: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606001_add_index_to_buildstatetransitions.sql');
COMMIT;


-- Change script: #1606001: 1606001_add_index_to_buildstatetransitions.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_buildstatetransition_build_id ON buildstatetransitions(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------


--------------- Fragment begins: #1606002: 1606002_add_index_to_artifactplans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606002_add_index_to_artifactplans.sql');
COMMIT;


-- Change script: #1606002: 1606002_add_index_to_artifactplans.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_artifactplan_build_id ON artifactplans(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606002: 1606002_add_index_to_artifactplans.sql ---------------


--------------- Fragment begins: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1607001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1607001_create_agent_metadata_job_table.sql');
COMMIT;


-- Change script: #1607001: 1607001_create_agent_metadata_job_table.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE SEQUENCE jobagentmetadata_id_seq START WITH 1;
CREATE TABLE jobagentmetadata (
  id              BIGINT DEFAULT nextval('jobagentmetadata_id_seq') PRIMARY KEY,
  jobId           BIGINT UNIQUE NOT NULL,
  metadata        TEXT NOT NULL,
  metadataVersion VARCHAR(50),
  UNIQUE (jobId)
);

ALTER TABLE jobagentmetadata ADD CONSTRAINT fk_jobagentmetadata_jobs FOREIGN KEY (jobId) REFERENCES builds (id)
  ON DELETE CASCADE;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1607001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------


--------------- Fragment begins: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1610001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1610001_add_index_to_modifiedfiles.sql');
COMMIT;


-- Change script: #1610001: 1610001_add_index_to_modifiedfiles.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX CONCURRENTLY idx_modifiedfiles_modification_id ON modifiedfiles(modificationid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1610001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------


--------------- Fragment begins: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701001_remove_gadget_oauth_tables.sql');
COMMIT;


-- Change script: #1701001: 1701001_remove_gadget_oauth_tables.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

DROP TABLE gadgetOauthAuthorizationCodes;
DROP TABLE gadgetOauthAccessTokens;
DROP TABLE gadgetOauthClients;

DROP SEQUENCE gadgetOauthClients_id_seq;
DROP SEQUENCE gadgetOauthAccessTokens_id_seq;
DROP SEQUENCE gadgetOauthAuthorizationCodes_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------


--------------- Fragment begins: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701002_remove_materialproperties_id_seq.sql');
COMMIT;


-- Change script: #1701002: 1701002_remove_materialproperties_id_seq.sql
DROP SEQUENCE IF EXISTS materialProperties_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------


--------------- Fragment begins: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1702001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1702001_remove_build_cause_buffer_table.sql');
COMMIT;


-- Change script: #1702001: 1702001_remove_build_cause_buffer_table.sql
DROP TABLE BuildCauseBuffer;
DROP SEQUENCE buildcausebuffer_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1702001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------


--------------- Fragment begins: #1704001: 1704001_widen_agents_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704001_widen_agents_uuid_column.sql');
COMMIT;


-- Change script: #1704001: 1704001_widen_agents_uuid_column.sql

ALTER TABLE agents ALTER COLUMN uuid TYPE VARCHAR(255);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704001: 1704001_widen_agents_uuid_column.sql ---------------


--------------- Fragment begins: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704002_widen_builds_agent_uuid_column.sql');
COMMIT;


-- Change script: #1704002: 1704002_widen_builds_agent_uuid_column.sql

DROP VIEW _builds;

ALTER TABLE builds ALTER COLUMN agentUuid TYPE VARCHAR(255);

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------


--------------- Fragment begins: #1704003: 1704003_pipeline_state_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704003_pipeline_state_table.sql');
COMMIT;


-- Change script: #1704003: 1704003_pipeline_state_table.sql
CREATE SEQUENCE pipelinestates_id_seq START WITH 1;
CREATE TABLE PipelineStates (
    id                      BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pipelineName            CITEXT NOT NULL,
    locked                  BOOLEAN,
    lockedByPipelineId              BIGINT
);

ALTER TABLE PipelineStates ADD CONSTRAINT unique_pipeline_state UNIQUE (pipelineName);

INSERT INTO PipelineStates (pipelineName, locked, lockedByPipelineId) (select name, locked, id from pipelines where id in (select max(id) from pipelines where locked = true group by name));

DROP VIEW _stages;

CREATE VIEW _stages AS
    SELECT s.*,
      p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, ps.locked, p.naturalOrder
    FROM stages s
    INNER JOIN pipelines p ON p.id = s.pipelineId
    LEFT OUTER JOIN PipelineStates ps on ps.lockedByPipelineId = s.pipelineId;


ALTER TABLE pipelines drop column locked;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704003: 1704003_pipeline_state_table.sql ---------------


--------------- Fragment begins: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704004_pipeline_states_sequence_reset.sql');
COMMIT;


-- Change script: #1704004: 1704004_pipeline_states_sequence_reset.sql
-- As part of 1704003_pipeline_state_table.sql, PipelineStates was incorrectly setup to use plugins_id_seq instead of pipelinestates_id_seq.
-- This migration resets the sequence pipelinestates_id_seq to be the max(id) of PipelineStates, and alters PipelineStates to use the correct sequence.
-- Since sequences are not explicitly defined for H2, a corresponding migration for H2 is not required.

-- This delta is being backported to all releases starting from 17.4 until 17.10 as part of the patch release.

do $$
declare maxid int;
begin
    select max(id) from pipelinestates into maxid;
    IF maxid IS NULL THEN
        maxid = 1;
    END IF;
    execute 'alter SEQUENCE pipelinestates_id_seq RESTART with '|| maxid;
end;
$$ language plpgsql;

ALTER table PipelineStates alter column ID set default nextval('pipelinestates_id_seq');



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------


--------------- Fragment begins: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1708001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1708001_add_hostname_and_ip_to_agents_table.sql');
COMMIT;


-- Change script: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql
ALTER TABLE agents ADD COLUMN hostname VARCHAR(255) DEFAULT NULL;
ALTER TABLE agents ADD COLUMN ipaddress VARCHAR(50) DEFAULT NULL;
CREATE INDEX idx_agent_uuid ON AGENTS(UUID);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1708001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------


--------------- Fragment begins: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801001_remove_regex_generator_type_from_artifact_properties_generator.sql');
COMMIT;


-- Change script: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql
ALTER TABLE artifactpropertiesgenerator DROP COLUMN regex;
ALTER TABLE artifactpropertiesgenerator DROP COLUMN generatorType;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------


--------------- Fragment begins: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql');
COMMIT;


-- Change script: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql
ALTER TABLE artifactplans ADD COLUMN pluggableArtifactConfigJson TEXT DEFAULT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------


--------------- Fragment begins: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801003_remove_environment_variables_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM environmentVariables
-- WHERE environmentVariables.id IN (
--   SELECT environmentVariables.id
--   FROM environmentVariables
--   INNER JOIN builds
--   ON
--     builds.id = environmentVariables.entityId
--   WHERE
--       environmentVariables.entityType = 'Job'
--     AND
--       builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801004_remove_artifact_plans_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPlans
-- WHERE artifactPlans.id IN (
--   SELECT artifactPlans.id
--   FROM artifactPlans
--   INNER JOIN builds
--     ON builds.id = artifactPlans.buildId
--   WHERE
--       artifactPlans.artifactType = 'file'
--     AND
--       builds.state = 'Completed'
-- );




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801005, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801005_remove_artifact_properties_generator_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPropertiesGenerator
-- WHERE ID IN (
--   SELECT artifactPropertiesGenerator.id
--   FROM artifactPropertiesGenerator
--   INNER JOIN builds
--     ON builds.id = artifactPropertiesGenerator.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801005 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801006, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801006_remove_resources_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801006: 1801006_remove_resources_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.
-- DELETE FROM resources
-- WHERE resources.id IN (
--   SELECT resources.id
--   FROM resources
--   INNER JOIN builds
--     ON builds.id = resources.buildId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801006 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801007, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801007_remove_job_agent_metadata_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM jobAgentMetadata
-- WHERE jobAgentMetadata.id IN (
--   SELECT jobAgentMetadata.id
--   FROM jobAgentMetadata
--   INNER JOIN builds
--     ON
--       builds.id = jobAgentMetadata.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801007 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802001_clear_username_and_comment_for_dependency_materials.sql');
COMMIT;


-- Change script: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql
UPDATE
  modifications
SET
  username = null, comment = null
WHERE
    pipelineid IS NOT NULL
  AND
    username = 'Unknown'
  AND
    comment = 'Unknown';



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------


--------------- Fragment begins: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802002_add_index_on_pipelines_name_and_id_column.sql');
COMMIT;


-- Change script: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_pipeline_name_id ON pipelines( name, id );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------


--------------- Fragment begins: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1804001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql');
COMMIT;


-- Change script: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql
ALTER TABLE PIPELINELABELCOUNTS ADD COLUMN caseInsensitivePipelineName CITEXT;
UPDATE PIPELINELABELCOUNTS set caseInsensitivePipelineName = pipelinename;
CREATE INDEX idx_pipelinelabelcounts_caseinsensitivepipelinename ON PIPELINELABELCOUNTS(caseInsensitivePipelineName);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1804001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------


--------------- Fragment begins: #1805001: 1805001_drop_preferred_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1805001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1805001_drop_preferred_table.sql');
COMMIT;


-- Change script: #1805001: 1805001_drop_preferred_table.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- See `230006_make_user_name_case_insensitive.sql`
-- This was a temp table created to make users' login-name case-insensitive
DROP TABLE preffered;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1805001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1805001: 1805001_drop_preferred_table.sql ---------------


--------------- Fragment begins: #1807001: 1807001_data_sharing_settings_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807001_data_sharing_settings_table.sql');
COMMIT;


-- Change script: #1807001: 1807001_data_sharing_settings_table.sql
CREATE SEQUENCE datasharingsettings_id_seq START WITH 1;

CREATE TABLE DataSharingSettings (
  id             BIGINT DEFAULT nextval('datasharingsettings_id_seq') PRIMARY KEY,
  allowSharing        BOOLEAN NOT NULL,
  updatedBy    VARCHAR(255),
  updatedOn    TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807001: 1807001_data_sharing_settings_table.sql ---------------


--------------- Fragment begins: #1807002: 1807002_usage_data_reporting_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807002_usage_data_reporting_table.sql');
COMMIT;


-- Change script: #1807002: 1807002_usage_data_reporting_table.sql
CREATE SEQUENCE usagedatareporting_id_seq START WITH 1;

CREATE TABLE UsageDataReporting (
  id             BIGINT DEFAULT nextval('usagedatareporting_id_seq') PRIMARY KEY,
  serverId       VARCHAR(255) NOT NULL,
  lastReportedAt TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807002: 1807002_usage_data_reporting_table.sql ---------------


--------------- Fragment begins: #1808001: 1808001_remove_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808001_remove_oauth_tables.sql');
COMMIT;


-- Change script: #1808001: 1808001_remove_oauth_tables.sql
DROP TABLE oauthtokens;
DROP SEQUENCE oauthtokens_id_seq;

DROP TABLE oauthauthorizations;
DROP SEQUENCE oauthauthorizations_id_seq;

DROP TABLE oauthclients;
DROP SEQUENCE oauthclients_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808001: 1808001_remove_oauth_tables.sql ---------------


--------------- Fragment begins: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808002_add_filters_and_version_to_pipeline_selections.sql');
COMMIT;


-- Change script: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

ALTER TABLE PipelineSelections ADD COLUMN filters TEXT;
ALTER TABLE PipelineSelections ADD COLUMN version INT DEFAULT 0 NOT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------

]; nested exception is org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:230)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:419)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:445)
	at com.thoughtworks.go.postgresql.PostgresqlDatabase.upgrade(PostgresqlDatabase.java:107)
	at com.thoughtworks.go.server.database.DatabaseStrategy.upgrade(DatabaseStrategy.java:59)
	at com.thoughtworks.go.server.util.DatabaseUpgraderDataSourceFactory.upgradeDb(DatabaseUpgraderDataSourceFactory.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:311)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:134)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:407)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1623)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1178)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1136)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1064)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1100)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getSingletonFactoryBeanForTypeCheck(AbstractAutowireCapableBeanFactory.java:928)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:805)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:564)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:432)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:403)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:206)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1265)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1099)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1064)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1100)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:634)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:145)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1100)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:443)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:325)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:890)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:532)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:853)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:344)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1515)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1477)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:785)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:261)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:41)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:188)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:150)
	at com.thoughtworks.go.server.Jetty9Server.startHandlers(Jetty9Server.java:187)
	at com.thoughtworks.go.server.Jetty9Server.start(Jetty9Server.java:137)
	at com.thoughtworks.go.server.GoServer.startServer(GoServer.java:72)
	at com.thoughtworks.go.server.GoServer.go(GoServer.java:64)
	at com.thoughtworks.go.server.util.GoLauncher.main(GoLauncher.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.thoughtworks.gocd.Boot.run(Boot.java:111)
	at com.thoughtworks.gocd.Boot.main(Boot.java:57)
Caused by: org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2157)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1886)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:255)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:555)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:403)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:395)
	at org.apache.commons.dbcp.DelegatingStatement.execute(DelegatingStatement.java:264)
	at org.apache.commons.dbcp.DelegatingStatement.execute(DelegatingStatement.java:264)
	at org.springframework.jdbc.core.JdbcTemplate$1ExecuteStatementCallback.doInStatement(JdbcTemplate.java:436)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:408)
	... 99 common frames omitted
2018-12-18 11:15:25,348 WARN  [main] XmlWebApplicationContext:551 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stagesQuery' defined in ServletContext resource [/WEB-INF/applicationContext-shine-server.xml]: Cannot resolve reference to bean 'lazyStageGraphLoader' while setting constructor argument; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'lazyStageGraphLoader' defined in file [/go-working-dir/work/jetty-0.0.0.0-8153-cruise.war-_go-any-/webapp/WEB-INF/classes/com/thoughtworks/studios/shine/cruise/stage/details/LazyStageGraphLoader.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlMapClient' defined in ServletContext resource [/WEB-INF/applicationContext-dataLocalAccess.xml]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'databaseUpgraderDataSourceFactory': Invocation of init method failed; nested exception is java.lang.RuntimeException: org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [

--------------- Fragment begins: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303001_add_additional_data_field_to_modifications_table.sql');
COMMIT;


-- Change script: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql
ALTER TABLE modifications ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------


--------------- Fragment begins: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303002_add_index_to_builds_on_stageId.sql');
COMMIT;


-- Change script: #1303002: 1303002_add_index_to_builds_on_stageId.sql
CREATE INDEX idx_builds_stageId ON builds(stageId);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------


--------------- Fragment begins: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303003_add_index_to_stages_resources_tables.sql');
COMMIT;


-- Change script: #1303003: 1303003_add_index_to_stages_resources_tables.sql
CREATE INDEX idx_stages_pipelineId ON stages(pipelineid);
CREATE INDEX idx_resources_buildId ON resources(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------


--------------- Fragment begins: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303004_indexes_based_on_purge_tool.sql');
COMMIT;


-- Change script: #1303004: 1303004_indexes_based_on_purge_tool.sql
CREATE INDEX idx_properties_buildId ON properties(buildId);
CREATE INDEX idx_materials_pipelinename ON materials(pipelinename);
CREATE INDEX idx_artifactpropertiesgenerator_jobid ON artifactpropertiesgenerator(jobid);
CREATE INDEX idx_environmentvariables_entitytype ON environmentvariables(entitytype);
CREATE INDEX idx_stageartifactcleanupprohibited_pipelinename ON stageartifactcleanupprohibited(pipelinename);
CREATE INDEX idx_pipelineLabelCounts_pipelinename ON pipelineLabelCounts(pipelinename);




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------


--------------- Fragment begins: #1304001: 1304001_remove_luau_related_entries.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1304001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1304001_remove_luau_related_entries.sql');
COMMIT;


-- Change script: #1304001: 1304001_remove_luau_related_entries.sql
DROP TABLE IF EXISTS luau_groups_users;
DROP TABLE IF EXISTS luau_groups;
DROP TABLE IF EXISTS luaustate;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1304001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1304001: 1304001_remove_luau_related_entries.sql ---------------


--------------- Fragment begins: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1401001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1401001_recreating_trigger_because_of_cruise_to_go_change.sql');
COMMIT;


-- Change script: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql
SELECT (1);


UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1401001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------


--------------- Fragment begins: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403001_fix_null_artifacttype_on_artifactplans_table.sql');
COMMIT;


-- Change script: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql
UPDATE ARTIFACTPLANS SET ARTIFACTTYPE='file' WHERE ARTIFACTTYPE IS NULL;
COMMIT;

-- No undo as adding default value to mandatory field



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------


--------------- Fragment begins: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql');
COMMIT;


-- Change script: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

alter table builds add column runMultipleInstance boolean default false;

DROP VIEW _builds;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------


--------------- Fragment begins: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql');
COMMIT;


-- Change script: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelineselections RENAME COLUMN unselectedpipelines TO selections;

ALTER TABLE pipelineselections ADD COLUMN isblacklist BOOLEAN DEFAULT true;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------


--------------- Fragment begins: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501002_add_comment_column_to_pipelines.sql');
COMMIT;


-- Change script: #1501002: 1501002_add_comment_column_to_pipelines.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelines ADD COLUMN comment TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------


--------------- Fragment begins: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501003_add_additional_data_field_to_materials_table.sql');
COMMIT;


-- Change script: #1501003: 1501003_add_additional_data_field_to_materials_table.sql
ALTER TABLE materials ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------


--------------- Fragment begins: #1502001: 1502001_create_plugins_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1502001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1502001_create_plugins_table.sql');
COMMIT;


-- Change script: #1502001: 1502001_create_plugins_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE plugins_id_seq START WITH 1;
CREATE TABLE plugins (
    id              BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pluginId        VARCHAR(255) Not NULL,
    configuration   TEXT,
    UNIQUE (pluginId)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1502001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1502001: 1502001_create_plugins_table.sql ---------------


--------------- Fragment begins: #1503001: 1503001_remove_licensing_from_users.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503001_remove_licensing_from_users.sql');
COMMIT;


-- Change script: #1503001: 1503001_remove_licensing_from_users.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE users DROP COLUMN disableLicenseExpiryWarning;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503001: 1503001_remove_licensing_from_users.sql ---------------


--------------- Fragment begins: #1503002: 1503002_create_version_infos_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503002_create_version_infos_table.sql');
COMMIT;


-- Change script: #1503002: 1503002_create_version_infos_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2015 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE versioninfos_id_seq START WITH 1;
CREATE TABLE versioninfos (
    id                      BIGINT DEFAULT nextval('versioninfos_id_seq') PRIMARY KEY,
    componentName           VARCHAR(255) Not NULL,
    installedVersion        VARCHAR(100) Not NULL,
    latestVersion           VARCHAR(50),
    latestVersionUpdatedAt  TIMESTAMP,
    UNIQUE (componentName)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503002: 1503002_create_version_infos_table.sql ---------------


--------------- Fragment begins: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606001_add_index_to_buildstatetransitions.sql');
COMMIT;


-- Change script: #1606001: 1606001_add_index_to_buildstatetransitions.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_buildstatetransition_build_id ON buildstatetransitions(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------


--------------- Fragment begins: #1606002: 1606002_add_index_to_artifactplans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606002_add_index_to_artifactplans.sql');
COMMIT;


-- Change script: #1606002: 1606002_add_index_to_artifactplans.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_artifactplan_build_id ON artifactplans(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606002: 1606002_add_index_to_artifactplans.sql ---------------


--------------- Fragment begins: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1607001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1607001_create_agent_metadata_job_table.sql');
COMMIT;


-- Change script: #1607001: 1607001_create_agent_metadata_job_table.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE SEQUENCE jobagentmetadata_id_seq START WITH 1;
CREATE TABLE jobagentmetadata (
  id              BIGINT DEFAULT nextval('jobagentmetadata_id_seq') PRIMARY KEY,
  jobId           BIGINT UNIQUE NOT NULL,
  metadata        TEXT NOT NULL,
  metadataVersion VARCHAR(50),
  UNIQUE (jobId)
);

ALTER TABLE jobagentmetadata ADD CONSTRAINT fk_jobagentmetadata_jobs FOREIGN KEY (jobId) REFERENCES builds (id)
  ON DELETE CASCADE;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1607001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------


--------------- Fragment begins: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1610001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1610001_add_index_to_modifiedfiles.sql');
COMMIT;


-- Change script: #1610001: 1610001_add_index_to_modifiedfiles.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX CONCURRENTLY idx_modifiedfiles_modification_id ON modifiedfiles(modificationid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1610001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------


--------------- Fragment begins: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701001_remove_gadget_oauth_tables.sql');
COMMIT;


-- Change script: #1701001: 1701001_remove_gadget_oauth_tables.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

DROP TABLE gadgetOauthAuthorizationCodes;
DROP TABLE gadgetOauthAccessTokens;
DROP TABLE gadgetOauthClients;

DROP SEQUENCE gadgetOauthClients_id_seq;
DROP SEQUENCE gadgetOauthAccessTokens_id_seq;
DROP SEQUENCE gadgetOauthAuthorizationCodes_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------


--------------- Fragment begins: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701002_remove_materialproperties_id_seq.sql');
COMMIT;


-- Change script: #1701002: 1701002_remove_materialproperties_id_seq.sql
DROP SEQUENCE IF EXISTS materialProperties_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------


--------------- Fragment begins: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1702001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1702001_remove_build_cause_buffer_table.sql');
COMMIT;


-- Change script: #1702001: 1702001_remove_build_cause_buffer_table.sql
DROP TABLE BuildCauseBuffer;
DROP SEQUENCE buildcausebuffer_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1702001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------


--------------- Fragment begins: #1704001: 1704001_widen_agents_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704001_widen_agents_uuid_column.sql');
COMMIT;


-- Change script: #1704001: 1704001_widen_agents_uuid_column.sql

ALTER TABLE agents ALTER COLUMN uuid TYPE VARCHAR(255);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704001: 1704001_widen_agents_uuid_column.sql ---------------


--------------- Fragment begins: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704002_widen_builds_agent_uuid_column.sql');
COMMIT;


-- Change script: #1704002: 1704002_widen_builds_agent_uuid_column.sql

DROP VIEW _builds;

ALTER TABLE builds ALTER COLUMN agentUuid TYPE VARCHAR(255);

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------


--------------- Fragment begins: #1704003: 1704003_pipeline_state_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704003_pipeline_state_table.sql');
COMMIT;


-- Change script: #1704003: 1704003_pipeline_state_table.sql
CREATE SEQUENCE pipelinestates_id_seq START WITH 1;
CREATE TABLE PipelineStates (
    id                      BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pipelineName            CITEXT NOT NULL,
    locked                  BOOLEAN,
    lockedByPipelineId              BIGINT
);

ALTER TABLE PipelineStates ADD CONSTRAINT unique_pipeline_state UNIQUE (pipelineName);

INSERT INTO PipelineStates (pipelineName, locked, lockedByPipelineId) (select name, locked, id from pipelines where id in (select max(id) from pipelines where locked = true group by name));

DROP VIEW _stages;

CREATE VIEW _stages AS
    SELECT s.*,
      p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, ps.locked, p.naturalOrder
    FROM stages s
    INNER JOIN pipelines p ON p.id = s.pipelineId
    LEFT OUTER JOIN PipelineStates ps on ps.lockedByPipelineId = s.pipelineId;


ALTER TABLE pipelines drop column locked;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704003: 1704003_pipeline_state_table.sql ---------------


--------------- Fragment begins: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704004_pipeline_states_sequence_reset.sql');
COMMIT;


-- Change script: #1704004: 1704004_pipeline_states_sequence_reset.sql
-- As part of 1704003_pipeline_state_table.sql, PipelineStates was incorrectly setup to use plugins_id_seq instead of pipelinestates_id_seq.
-- This migration resets the sequence pipelinestates_id_seq to be the max(id) of PipelineStates, and alters PipelineStates to use the correct sequence.
-- Since sequences are not explicitly defined for H2, a corresponding migration for H2 is not required.

-- This delta is being backported to all releases starting from 17.4 until 17.10 as part of the patch release.

do $$
declare maxid int;
begin
    select max(id) from pipelinestates into maxid;
    IF maxid IS NULL THEN
        maxid = 1;
    END IF;
    execute 'alter SEQUENCE pipelinestates_id_seq RESTART with '|| maxid;
end;
$$ language plpgsql;

ALTER table PipelineStates alter column ID set default nextval('pipelinestates_id_seq');



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------


--------------- Fragment begins: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1708001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1708001_add_hostname_and_ip_to_agents_table.sql');
COMMIT;


-- Change script: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql
ALTER TABLE agents ADD COLUMN hostname VARCHAR(255) DEFAULT NULL;
ALTER TABLE agents ADD COLUMN ipaddress VARCHAR(50) DEFAULT NULL;
CREATE INDEX idx_agent_uuid ON AGENTS(UUID);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1708001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------


--------------- Fragment begins: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801001_remove_regex_generator_type_from_artifact_properties_generator.sql');
COMMIT;


-- Change script: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql
ALTER TABLE artifactpropertiesgenerator DROP COLUMN regex;
ALTER TABLE artifactpropertiesgenerator DROP COLUMN generatorType;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------


--------------- Fragment begins: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql');
COMMIT;


-- Change script: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql
ALTER TABLE artifactplans ADD COLUMN pluggableArtifactConfigJson TEXT DEFAULT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------


--------------- Fragment begins: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801003_remove_environment_variables_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM environmentVariables
-- WHERE environmentVariables.id IN (
--   SELECT environmentVariables.id
--   FROM environmentVariables
--   INNER JOIN builds
--   ON
--     builds.id = environmentVariables.entityId
--   WHERE
--       environmentVariables.entityType = 'Job'
--     AND
--       builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801004_remove_artifact_plans_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPlans
-- WHERE artifactPlans.id IN (
--   SELECT artifactPlans.id
--   FROM artifactPlans
--   INNER JOIN builds
--     ON builds.id = artifactPlans.buildId
--   WHERE
--       artifactPlans.artifactType = 'file'
--     AND
--       builds.state = 'Completed'
-- );




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801005, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801005_remove_artifact_properties_generator_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPropertiesGenerator
-- WHERE ID IN (
--   SELECT artifactPropertiesGenerator.id
--   FROM artifactPropertiesGenerator
--   INNER JOIN builds
--     ON builds.id = artifactPropertiesGenerator.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801005 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801006, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801006_remove_resources_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801006: 1801006_remove_resources_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.
-- DELETE FROM resources
-- WHERE resources.id IN (
--   SELECT resources.id
--   FROM resources
--   INNER JOIN builds
--     ON builds.id = resources.buildId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801006 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801007, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801007_remove_job_agent_metadata_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM jobAgentMetadata
-- WHERE jobAgentMetadata.id IN (
--   SELECT jobAgentMetadata.id
--   FROM jobAgentMetadata
--   INNER JOIN builds
--     ON
--       builds.id = jobAgentMetadata.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801007 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802001_clear_username_and_comment_for_dependency_materials.sql');
COMMIT;


-- Change script: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql
UPDATE
  modifications
SET
  username = null, comment = null
WHERE
    pipelineid IS NOT NULL
  AND
    username = 'Unknown'
  AND
    comment = 'Unknown';



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------


--------------- Fragment begins: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802002_add_index_on_pipelines_name_and_id_column.sql');
COMMIT;


-- Change script: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_pipeline_name_id ON pipelines( name, id );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------


--------------- Fragment begins: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1804001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql');
COMMIT;


-- Change script: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql
ALTER TABLE PIPELINELABELCOUNTS ADD COLUMN caseInsensitivePipelineName CITEXT;
UPDATE PIPELINELABELCOUNTS set caseInsensitivePipelineName = pipelinename;
CREATE INDEX idx_pipelinelabelcounts_caseinsensitivepipelinename ON PIPELINELABELCOUNTS(caseInsensitivePipelineName);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1804001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------


--------------- Fragment begins: #1805001: 1805001_drop_preferred_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1805001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1805001_drop_preferred_table.sql');
COMMIT;


-- Change script: #1805001: 1805001_drop_preferred_table.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- See `230006_make_user_name_case_insensitive.sql`
-- This was a temp table created to make users' login-name case-insensitive
DROP TABLE preffered;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1805001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1805001: 1805001_drop_preferred_table.sql ---------------


--------------- Fragment begins: #1807001: 1807001_data_sharing_settings_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807001_data_sharing_settings_table.sql');
COMMIT;


-- Change script: #1807001: 1807001_data_sharing_settings_table.sql
CREATE SEQUENCE datasharingsettings_id_seq START WITH 1;

CREATE TABLE DataSharingSettings (
  id             BIGINT DEFAULT nextval('datasharingsettings_id_seq') PRIMARY KEY,
  allowSharing        BOOLEAN NOT NULL,
  updatedBy    VARCHAR(255),
  updatedOn    TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807001: 1807001_data_sharing_settings_table.sql ---------------


--------------- Fragment begins: #1807002: 1807002_usage_data_reporting_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807002_usage_data_reporting_table.sql');
COMMIT;


-- Change script: #1807002: 1807002_usage_data_reporting_table.sql
CREATE SEQUENCE usagedatareporting_id_seq START WITH 1;

CREATE TABLE UsageDataReporting (
  id             BIGINT DEFAULT nextval('usagedatareporting_id_seq') PRIMARY KEY,
  serverId       VARCHAR(255) NOT NULL,
  lastReportedAt TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807002: 1807002_usage_data_reporting_table.sql ---------------


--------------- Fragment begins: #1808001: 1808001_remove_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808001_remove_oauth_tables.sql');
COMMIT;


-- Change script: #1808001: 1808001_remove_oauth_tables.sql
DROP TABLE oauthtokens;
DROP SEQUENCE oauthtokens_id_seq;

DROP TABLE oauthauthorizations;
DROP SEQUENCE oauthauthorizations_id_seq;

DROP TABLE oauthclients;
DROP SEQUENCE oauthclients_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808001: 1808001_remove_oauth_tables.sql ---------------


--------------- Fragment begins: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808002_add_filters_and_version_to_pipeline_selections.sql');
COMMIT;


-- Change script: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

ALTER TABLE PipelineSelections ADD COLUMN filters TEXT;
ALTER TABLE PipelineSelections ADD COLUMN version INT DEFAULT 0 NOT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------

]; nested exception is org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
2018-12-18 11:15:25,359 ERROR [main] ContextLoader:350 - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stagesQuery' defined in ServletContext resource [/WEB-INF/applicationContext-shine-server.xml]: Cannot resolve reference to bean 'lazyStageGraphLoader' while setting constructor argument; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'lazyStageGraphLoader' defined in file [/go-working-dir/work/jetty-0.0.0.0-8153-cruise.war-_go-any-/webapp/WEB-INF/classes/com/thoughtworks/studios/shine/cruise/stage/details/LazyStageGraphLoader.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlMapClient' defined in ServletContext resource [/WEB-INF/applicationContext-dataLocalAccess.xml]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'databaseUpgraderDataSourceFactory': Invocation of init method failed; nested exception is java.lang.RuntimeException: org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [

--------------- Fragment begins: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303001_add_additional_data_field_to_modifications_table.sql');
COMMIT;


-- Change script: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql
ALTER TABLE modifications ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------


--------------- Fragment begins: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303002_add_index_to_builds_on_stageId.sql');
COMMIT;


-- Change script: #1303002: 1303002_add_index_to_builds_on_stageId.sql
CREATE INDEX idx_builds_stageId ON builds(stageId);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------


--------------- Fragment begins: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303003_add_index_to_stages_resources_tables.sql');
COMMIT;


-- Change script: #1303003: 1303003_add_index_to_stages_resources_tables.sql
CREATE INDEX idx_stages_pipelineId ON stages(pipelineid);
CREATE INDEX idx_resources_buildId ON resources(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------


--------------- Fragment begins: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303004_indexes_based_on_purge_tool.sql');
COMMIT;


-- Change script: #1303004: 1303004_indexes_based_on_purge_tool.sql
CREATE INDEX idx_properties_buildId ON properties(buildId);
CREATE INDEX idx_materials_pipelinename ON materials(pipelinename);
CREATE INDEX idx_artifactpropertiesgenerator_jobid ON artifactpropertiesgenerator(jobid);
CREATE INDEX idx_environmentvariables_entitytype ON environmentvariables(entitytype);
CREATE INDEX idx_stageartifactcleanupprohibited_pipelinename ON stageartifactcleanupprohibited(pipelinename);
CREATE INDEX idx_pipelineLabelCounts_pipelinename ON pipelineLabelCounts(pipelinename);




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------


--------------- Fragment begins: #1304001: 1304001_remove_luau_related_entries.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1304001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1304001_remove_luau_related_entries.sql');
COMMIT;


-- Change script: #1304001: 1304001_remove_luau_related_entries.sql
DROP TABLE IF EXISTS luau_groups_users;
DROP TABLE IF EXISTS luau_groups;
DROP TABLE IF EXISTS luaustate;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1304001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1304001: 1304001_remove_luau_related_entries.sql ---------------


--------------- Fragment begins: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1401001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1401001_recreating_trigger_because_of_cruise_to_go_change.sql');
COMMIT;


-- Change script: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql
SELECT (1);


UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1401001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------


--------------- Fragment begins: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403001_fix_null_artifacttype_on_artifactplans_table.sql');
COMMIT;


-- Change script: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql
UPDATE ARTIFACTPLANS SET ARTIFACTTYPE='file' WHERE ARTIFACTTYPE IS NULL;
COMMIT;

-- No undo as adding default value to mandatory field



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------


--------------- Fragment begins: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql');
COMMIT;


-- Change script: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

alter table builds add column runMultipleInstance boolean default false;

DROP VIEW _builds;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------


--------------- Fragment begins: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql');
COMMIT;


-- Change script: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelineselections RENAME COLUMN unselectedpipelines TO selections;

ALTER TABLE pipelineselections ADD COLUMN isblacklist BOOLEAN DEFAULT true;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------


--------------- Fragment begins: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501002_add_comment_column_to_pipelines.sql');
COMMIT;


-- Change script: #1501002: 1501002_add_comment_column_to_pipelines.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelines ADD COLUMN comment TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------


--------------- Fragment begins: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501003_add_additional_data_field_to_materials_table.sql');
COMMIT;


-- Change script: #1501003: 1501003_add_additional_data_field_to_materials_table.sql
ALTER TABLE materials ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------


--------------- Fragment begins: #1502001: 1502001_create_plugins_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1502001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1502001_create_plugins_table.sql');
COMMIT;


-- Change script: #1502001: 1502001_create_plugins_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE plugins_id_seq START WITH 1;
CREATE TABLE plugins (
    id              BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pluginId        VARCHAR(255) Not NULL,
    configuration   TEXT,
    UNIQUE (pluginId)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1502001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1502001: 1502001_create_plugins_table.sql ---------------


--------------- Fragment begins: #1503001: 1503001_remove_licensing_from_users.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503001_remove_licensing_from_users.sql');
COMMIT;


-- Change script: #1503001: 1503001_remove_licensing_from_users.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE users DROP COLUMN disableLicenseExpiryWarning;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503001: 1503001_remove_licensing_from_users.sql ---------------


--------------- Fragment begins: #1503002: 1503002_create_version_infos_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503002_create_version_infos_table.sql');
COMMIT;


-- Change script: #1503002: 1503002_create_version_infos_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2015 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE versioninfos_id_seq START WITH 1;
CREATE TABLE versioninfos (
    id                      BIGINT DEFAULT nextval('versioninfos_id_seq') PRIMARY KEY,
    componentName           VARCHAR(255) Not NULL,
    installedVersion        VARCHAR(100) Not NULL,
    latestVersion           VARCHAR(50),
    latestVersionUpdatedAt  TIMESTAMP,
    UNIQUE (componentName)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503002: 1503002_create_version_infos_table.sql ---------------


--------------- Fragment begins: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606001_add_index_to_buildstatetransitions.sql');
COMMIT;


-- Change script: #1606001: 1606001_add_index_to_buildstatetransitions.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_buildstatetransition_build_id ON buildstatetransitions(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------


--------------- Fragment begins: #1606002: 1606002_add_index_to_artifactplans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606002_add_index_to_artifactplans.sql');
COMMIT;


-- Change script: #1606002: 1606002_add_index_to_artifactplans.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_artifactplan_build_id ON artifactplans(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606002: 1606002_add_index_to_artifactplans.sql ---------------


--------------- Fragment begins: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1607001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1607001_create_agent_metadata_job_table.sql');
COMMIT;


-- Change script: #1607001: 1607001_create_agent_metadata_job_table.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE SEQUENCE jobagentmetadata_id_seq START WITH 1;
CREATE TABLE jobagentmetadata (
  id              BIGINT DEFAULT nextval('jobagentmetadata_id_seq') PRIMARY KEY,
  jobId           BIGINT UNIQUE NOT NULL,
  metadata        TEXT NOT NULL,
  metadataVersion VARCHAR(50),
  UNIQUE (jobId)
);

ALTER TABLE jobagentmetadata ADD CONSTRAINT fk_jobagentmetadata_jobs FOREIGN KEY (jobId) REFERENCES builds (id)
  ON DELETE CASCADE;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1607001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------


--------------- Fragment begins: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1610001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1610001_add_index_to_modifiedfiles.sql');
COMMIT;


-- Change script: #1610001: 1610001_add_index_to_modifiedfiles.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX CONCURRENTLY idx_modifiedfiles_modification_id ON modifiedfiles(modificationid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1610001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------


--------------- Fragment begins: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701001_remove_gadget_oauth_tables.sql');
COMMIT;


-- Change script: #1701001: 1701001_remove_gadget_oauth_tables.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

DROP TABLE gadgetOauthAuthorizationCodes;
DROP TABLE gadgetOauthAccessTokens;
DROP TABLE gadgetOauthClients;

DROP SEQUENCE gadgetOauthClients_id_seq;
DROP SEQUENCE gadgetOauthAccessTokens_id_seq;
DROP SEQUENCE gadgetOauthAuthorizationCodes_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------


--------------- Fragment begins: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701002_remove_materialproperties_id_seq.sql');
COMMIT;


-- Change script: #1701002: 1701002_remove_materialproperties_id_seq.sql
DROP SEQUENCE IF EXISTS materialProperties_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------


--------------- Fragment begins: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1702001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1702001_remove_build_cause_buffer_table.sql');
COMMIT;


-- Change script: #1702001: 1702001_remove_build_cause_buffer_table.sql
DROP TABLE BuildCauseBuffer;
DROP SEQUENCE buildcausebuffer_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1702001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------


--------------- Fragment begins: #1704001: 1704001_widen_agents_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704001_widen_agents_uuid_column.sql');
COMMIT;


-- Change script: #1704001: 1704001_widen_agents_uuid_column.sql

ALTER TABLE agents ALTER COLUMN uuid TYPE VARCHAR(255);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704001: 1704001_widen_agents_uuid_column.sql ---------------


--------------- Fragment begins: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704002_widen_builds_agent_uuid_column.sql');
COMMIT;


-- Change script: #1704002: 1704002_widen_builds_agent_uuid_column.sql

DROP VIEW _builds;

ALTER TABLE builds ALTER COLUMN agentUuid TYPE VARCHAR(255);

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------


--------------- Fragment begins: #1704003: 1704003_pipeline_state_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704003_pipeline_state_table.sql');
COMMIT;


-- Change script: #1704003: 1704003_pipeline_state_table.sql
CREATE SEQUENCE pipelinestates_id_seq START WITH 1;
CREATE TABLE PipelineStates (
    id                      BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pipelineName            CITEXT NOT NULL,
    locked                  BOOLEAN,
    lockedByPipelineId              BIGINT
);

ALTER TABLE PipelineStates ADD CONSTRAINT unique_pipeline_state UNIQUE (pipelineName);

INSERT INTO PipelineStates (pipelineName, locked, lockedByPipelineId) (select name, locked, id from pipelines where id in (select max(id) from pipelines where locked = true group by name));

DROP VIEW _stages;

CREATE VIEW _stages AS
    SELECT s.*,
      p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, ps.locked, p.naturalOrder
    FROM stages s
    INNER JOIN pipelines p ON p.id = s.pipelineId
    LEFT OUTER JOIN PipelineStates ps on ps.lockedByPipelineId = s.pipelineId;


ALTER TABLE pipelines drop column locked;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704003: 1704003_pipeline_state_table.sql ---------------


--------------- Fragment begins: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704004_pipeline_states_sequence_reset.sql');
COMMIT;


-- Change script: #1704004: 1704004_pipeline_states_sequence_reset.sql
-- As part of 1704003_pipeline_state_table.sql, PipelineStates was incorrectly setup to use plugins_id_seq instead of pipelinestates_id_seq.
-- This migration resets the sequence pipelinestates_id_seq to be the max(id) of PipelineStates, and alters PipelineStates to use the correct sequence.
-- Since sequences are not explicitly defined for H2, a corresponding migration for H2 is not required.

-- This delta is being backported to all releases starting from 17.4 until 17.10 as part of the patch release.

do $$
declare maxid int;
begin
    select max(id) from pipelinestates into maxid;
    IF maxid IS NULL THEN
        maxid = 1;
    END IF;
    execute 'alter SEQUENCE pipelinestates_id_seq RESTART with '|| maxid;
end;
$$ language plpgsql;

ALTER table PipelineStates alter column ID set default nextval('pipelinestates_id_seq');



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------


--------------- Fragment begins: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1708001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1708001_add_hostname_and_ip_to_agents_table.sql');
COMMIT;


-- Change script: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql
ALTER TABLE agents ADD COLUMN hostname VARCHAR(255) DEFAULT NULL;
ALTER TABLE agents ADD COLUMN ipaddress VARCHAR(50) DEFAULT NULL;
CREATE INDEX idx_agent_uuid ON AGENTS(UUID);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1708001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------


--------------- Fragment begins: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801001_remove_regex_generator_type_from_artifact_properties_generator.sql');
COMMIT;


-- Change script: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql
ALTER TABLE artifactpropertiesgenerator DROP COLUMN regex;
ALTER TABLE artifactpropertiesgenerator DROP COLUMN generatorType;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------


--------------- Fragment begins: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql');
COMMIT;


-- Change script: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql
ALTER TABLE artifactplans ADD COLUMN pluggableArtifactConfigJson TEXT DEFAULT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------


--------------- Fragment begins: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801003_remove_environment_variables_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM environmentVariables
-- WHERE environmentVariables.id IN (
--   SELECT environmentVariables.id
--   FROM environmentVariables
--   INNER JOIN builds
--   ON
--     builds.id = environmentVariables.entityId
--   WHERE
--       environmentVariables.entityType = 'Job'
--     AND
--       builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801004_remove_artifact_plans_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPlans
-- WHERE artifactPlans.id IN (
--   SELECT artifactPlans.id
--   FROM artifactPlans
--   INNER JOIN builds
--     ON builds.id = artifactPlans.buildId
--   WHERE
--       artifactPlans.artifactType = 'file'
--     AND
--       builds.state = 'Completed'
-- );




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801005, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801005_remove_artifact_properties_generator_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPropertiesGenerator
-- WHERE ID IN (
--   SELECT artifactPropertiesGenerator.id
--   FROM artifactPropertiesGenerator
--   INNER JOIN builds
--     ON builds.id = artifactPropertiesGenerator.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801005 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801006, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801006_remove_resources_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801006: 1801006_remove_resources_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.
-- DELETE FROM resources
-- WHERE resources.id IN (
--   SELECT resources.id
--   FROM resources
--   INNER JOIN builds
--     ON builds.id = resources.buildId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801006 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801007, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801007_remove_job_agent_metadata_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM jobAgentMetadata
-- WHERE jobAgentMetadata.id IN (
--   SELECT jobAgentMetadata.id
--   FROM jobAgentMetadata
--   INNER JOIN builds
--     ON
--       builds.id = jobAgentMetadata.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801007 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802001_clear_username_and_comment_for_dependency_materials.sql');
COMMIT;


-- Change script: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql
UPDATE
  modifications
SET
  username = null, comment = null
WHERE
    pipelineid IS NOT NULL
  AND
    username = 'Unknown'
  AND
    comment = 'Unknown';



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------


--------------- Fragment begins: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802002_add_index_on_pipelines_name_and_id_column.sql');
COMMIT;


-- Change script: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_pipeline_name_id ON pipelines( name, id );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------


--------------- Fragment begins: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1804001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql');
COMMIT;


-- Change script: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql
ALTER TABLE PIPELINELABELCOUNTS ADD COLUMN caseInsensitivePipelineName CITEXT;
UPDATE PIPELINELABELCOUNTS set caseInsensitivePipelineName = pipelinename;
CREATE INDEX idx_pipelinelabelcounts_caseinsensitivepipelinename ON PIPELINELABELCOUNTS(caseInsensitivePipelineName);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1804001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------


--------------- Fragment begins: #1805001: 1805001_drop_preferred_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1805001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1805001_drop_preferred_table.sql');
COMMIT;


-- Change script: #1805001: 1805001_drop_preferred_table.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- See `230006_make_user_name_case_insensitive.sql`
-- This was a temp table created to make users' login-name case-insensitive
DROP TABLE preffered;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1805001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1805001: 1805001_drop_preferred_table.sql ---------------


--------------- Fragment begins: #1807001: 1807001_data_sharing_settings_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807001_data_sharing_settings_table.sql');
COMMIT;


-- Change script: #1807001: 1807001_data_sharing_settings_table.sql
CREATE SEQUENCE datasharingsettings_id_seq START WITH 1;

CREATE TABLE DataSharingSettings (
  id             BIGINT DEFAULT nextval('datasharingsettings_id_seq') PRIMARY KEY,
  allowSharing        BOOLEAN NOT NULL,
  updatedBy    VARCHAR(255),
  updatedOn    TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807001: 1807001_data_sharing_settings_table.sql ---------------


--------------- Fragment begins: #1807002: 1807002_usage_data_reporting_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807002_usage_data_reporting_table.sql');
COMMIT;


-- Change script: #1807002: 1807002_usage_data_reporting_table.sql
CREATE SEQUENCE usagedatareporting_id_seq START WITH 1;

CREATE TABLE UsageDataReporting (
  id             BIGINT DEFAULT nextval('usagedatareporting_id_seq') PRIMARY KEY,
  serverId       VARCHAR(255) NOT NULL,
  lastReportedAt TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807002: 1807002_usage_data_reporting_table.sql ---------------


--------------- Fragment begins: #1808001: 1808001_remove_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808001_remove_oauth_tables.sql');
COMMIT;


-- Change script: #1808001: 1808001_remove_oauth_tables.sql
DROP TABLE oauthtokens;
DROP SEQUENCE oauthtokens_id_seq;

DROP TABLE oauthauthorizations;
DROP SEQUENCE oauthauthorizations_id_seq;

DROP TABLE oauthclients;
DROP SEQUENCE oauthclients_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808001: 1808001_remove_oauth_tables.sql ---------------


--------------- Fragment begins: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808002_add_filters_and_version_to_pipeline_selections.sql');
COMMIT;


-- Change script: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

ALTER TABLE PipelineSelections ADD COLUMN filters TEXT;
ALTER TABLE PipelineSelections ADD COLUMN version INT DEFAULT 0 NOT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------

]; nested exception is org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:359)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:634)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:145)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1100)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:443)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:325)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:890)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:532)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:853)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:344)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1515)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1477)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:785)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:261)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:41)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:188)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:150)
	at com.thoughtworks.go.server.Jetty9Server.startHandlers(Jetty9Server.java:187)
	at com.thoughtworks.go.server.Jetty9Server.start(Jetty9Server.java:137)
	at com.thoughtworks.go.server.GoServer.startServer(GoServer.java:72)
	at com.thoughtworks.go.server.GoServer.go(GoServer.java:64)
	at com.thoughtworks.go.server.util.GoLauncher.main(GoLauncher.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.thoughtworks.gocd.Boot.run(Boot.java:111)
	at com.thoughtworks.gocd.Boot.main(Boot.java:57)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'lazyStageGraphLoader' defined in file [/go-working-dir/work/jetty-0.0.0.0-8153-cruise.war-_go-any-/webapp/WEB-INF/classes/com/thoughtworks/studios/shine/cruise/stage/details/LazyStageGraphLoader.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlMapClient' defined in ServletContext resource [/WEB-INF/applicationContext-dataLocalAccess.xml]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'databaseUpgraderDataSourceFactory': Invocation of init method failed; nested exception is java.lang.RuntimeException: org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [

--------------- Fragment begins: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303001_add_additional_data_field_to_modifications_table.sql');
COMMIT;


-- Change script: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql
ALTER TABLE modifications ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------


--------------- Fragment begins: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303002_add_index_to_builds_on_stageId.sql');
COMMIT;


-- Change script: #1303002: 1303002_add_index_to_builds_on_stageId.sql
CREATE INDEX idx_builds_stageId ON builds(stageId);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------


--------------- Fragment begins: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303003_add_index_to_stages_resources_tables.sql');
COMMIT;


-- Change script: #1303003: 1303003_add_index_to_stages_resources_tables.sql
CREATE INDEX idx_stages_pipelineId ON stages(pipelineid);
CREATE INDEX idx_resources_buildId ON resources(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------


--------------- Fragment begins: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303004_indexes_based_on_purge_tool.sql');
COMMIT;


-- Change script: #1303004: 1303004_indexes_based_on_purge_tool.sql
CREATE INDEX idx_properties_buildId ON properties(buildId);
CREATE INDEX idx_materials_pipelinename ON materials(pipelinename);
CREATE INDEX idx_artifactpropertiesgenerator_jobid ON artifactpropertiesgenerator(jobid);
CREATE INDEX idx_environmentvariables_entitytype ON environmentvariables(entitytype);
CREATE INDEX idx_stageartifactcleanupprohibited_pipelinename ON stageartifactcleanupprohibited(pipelinename);
CREATE INDEX idx_pipelineLabelCounts_pipelinename ON pipelineLabelCounts(pipelinename);




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------


--------------- Fragment begins: #1304001: 1304001_remove_luau_related_entries.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1304001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1304001_remove_luau_related_entries.sql');
COMMIT;


-- Change script: #1304001: 1304001_remove_luau_related_entries.sql
DROP TABLE IF EXISTS luau_groups_users;
DROP TABLE IF EXISTS luau_groups;
DROP TABLE IF EXISTS luaustate;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1304001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1304001: 1304001_remove_luau_related_entries.sql ---------------


--------------- Fragment begins: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1401001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1401001_recreating_trigger_because_of_cruise_to_go_change.sql');
COMMIT;


-- Change script: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql
SELECT (1);


UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1401001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------


--------------- Fragment begins: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403001_fix_null_artifacttype_on_artifactplans_table.sql');
COMMIT;


-- Change script: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql
UPDATE ARTIFACTPLANS SET ARTIFACTTYPE='file' WHERE ARTIFACTTYPE IS NULL;
COMMIT;

-- No undo as adding default value to mandatory field



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------


--------------- Fragment begins: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql');
COMMIT;


-- Change script: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

alter table builds add column runMultipleInstance boolean default false;

DROP VIEW _builds;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------


--------------- Fragment begins: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql');
COMMIT;


-- Change script: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelineselections RENAME COLUMN unselectedpipelines TO selections;

ALTER TABLE pipelineselections ADD COLUMN isblacklist BOOLEAN DEFAULT true;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------


--------------- Fragment begins: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501002_add_comment_column_to_pipelines.sql');
COMMIT;


-- Change script: #1501002: 1501002_add_comment_column_to_pipelines.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelines ADD COLUMN comment TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------


--------------- Fragment begins: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501003_add_additional_data_field_to_materials_table.sql');
COMMIT;


-- Change script: #1501003: 1501003_add_additional_data_field_to_materials_table.sql
ALTER TABLE materials ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------


--------------- Fragment begins: #1502001: 1502001_create_plugins_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1502001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1502001_create_plugins_table.sql');
COMMIT;


-- Change script: #1502001: 1502001_create_plugins_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE plugins_id_seq START WITH 1;
CREATE TABLE plugins (
    id              BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pluginId        VARCHAR(255) Not NULL,
    configuration   TEXT,
    UNIQUE (pluginId)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1502001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1502001: 1502001_create_plugins_table.sql ---------------


--------------- Fragment begins: #1503001: 1503001_remove_licensing_from_users.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503001_remove_licensing_from_users.sql');
COMMIT;


-- Change script: #1503001: 1503001_remove_licensing_from_users.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE users DROP COLUMN disableLicenseExpiryWarning;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503001: 1503001_remove_licensing_from_users.sql ---------------


--------------- Fragment begins: #1503002: 1503002_create_version_infos_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503002_create_version_infos_table.sql');
COMMIT;


-- Change script: #1503002: 1503002_create_version_infos_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2015 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE versioninfos_id_seq START WITH 1;
CREATE TABLE versioninfos (
    id                      BIGINT DEFAULT nextval('versioninfos_id_seq') PRIMARY KEY,
    componentName           VARCHAR(255) Not NULL,
    installedVersion        VARCHAR(100) Not NULL,
    latestVersion           VARCHAR(50),
    latestVersionUpdatedAt  TIMESTAMP,
    UNIQUE (componentName)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503002: 1503002_create_version_infos_table.sql ---------------


--------------- Fragment begins: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606001_add_index_to_buildstatetransitions.sql');
COMMIT;


-- Change script: #1606001: 1606001_add_index_to_buildstatetransitions.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_buildstatetransition_build_id ON buildstatetransitions(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------


--------------- Fragment begins: #1606002: 1606002_add_index_to_artifactplans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606002_add_index_to_artifactplans.sql');
COMMIT;


-- Change script: #1606002: 1606002_add_index_to_artifactplans.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_artifactplan_build_id ON artifactplans(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606002: 1606002_add_index_to_artifactplans.sql ---------------


--------------- Fragment begins: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1607001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1607001_create_agent_metadata_job_table.sql');
COMMIT;


-- Change script: #1607001: 1607001_create_agent_metadata_job_table.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE SEQUENCE jobagentmetadata_id_seq START WITH 1;
CREATE TABLE jobagentmetadata (
  id              BIGINT DEFAULT nextval('jobagentmetadata_id_seq') PRIMARY KEY,
  jobId           BIGINT UNIQUE NOT NULL,
  metadata        TEXT NOT NULL,
  metadataVersion VARCHAR(50),
  UNIQUE (jobId)
);

ALTER TABLE jobagentmetadata ADD CONSTRAINT fk_jobagentmetadata_jobs FOREIGN KEY (jobId) REFERENCES builds (id)
  ON DELETE CASCADE;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1607001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------


--------------- Fragment begins: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1610001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1610001_add_index_to_modifiedfiles.sql');
COMMIT;


-- Change script: #1610001: 1610001_add_index_to_modifiedfiles.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX CONCURRENTLY idx_modifiedfiles_modification_id ON modifiedfiles(modificationid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1610001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------


--------------- Fragment begins: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701001_remove_gadget_oauth_tables.sql');
COMMIT;


-- Change script: #1701001: 1701001_remove_gadget_oauth_tables.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

DROP TABLE gadgetOauthAuthorizationCodes;
DROP TABLE gadgetOauthAccessTokens;
DROP TABLE gadgetOauthClients;

DROP SEQUENCE gadgetOauthClients_id_seq;
DROP SEQUENCE gadgetOauthAccessTokens_id_seq;
DROP SEQUENCE gadgetOauthAuthorizationCodes_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------


--------------- Fragment begins: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701002_remove_materialproperties_id_seq.sql');
COMMIT;


-- Change script: #1701002: 1701002_remove_materialproperties_id_seq.sql
DROP SEQUENCE IF EXISTS materialProperties_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------


--------------- Fragment begins: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1702001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1702001_remove_build_cause_buffer_table.sql');
COMMIT;


-- Change script: #1702001: 1702001_remove_build_cause_buffer_table.sql
DROP TABLE BuildCauseBuffer;
DROP SEQUENCE buildcausebuffer_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1702001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------


--------------- Fragment begins: #1704001: 1704001_widen_agents_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704001_widen_agents_uuid_column.sql');
COMMIT;


-- Change script: #1704001: 1704001_widen_agents_uuid_column.sql

ALTER TABLE agents ALTER COLUMN uuid TYPE VARCHAR(255);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704001: 1704001_widen_agents_uuid_column.sql ---------------


--------------- Fragment begins: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704002_widen_builds_agent_uuid_column.sql');
COMMIT;


-- Change script: #1704002: 1704002_widen_builds_agent_uuid_column.sql

DROP VIEW _builds;

ALTER TABLE builds ALTER COLUMN agentUuid TYPE VARCHAR(255);

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------


--------------- Fragment begins: #1704003: 1704003_pipeline_state_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704003_pipeline_state_table.sql');
COMMIT;


-- Change script: #1704003: 1704003_pipeline_state_table.sql
CREATE SEQUENCE pipelinestates_id_seq START WITH 1;
CREATE TABLE PipelineStates (
    id                      BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pipelineName            CITEXT NOT NULL,
    locked                  BOOLEAN,
    lockedByPipelineId              BIGINT
);

ALTER TABLE PipelineStates ADD CONSTRAINT unique_pipeline_state UNIQUE (pipelineName);

INSERT INTO PipelineStates (pipelineName, locked, lockedByPipelineId) (select name, locked, id from pipelines where id in (select max(id) from pipelines where locked = true group by name));

DROP VIEW _stages;

CREATE VIEW _stages AS
    SELECT s.*,
      p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, ps.locked, p.naturalOrder
    FROM stages s
    INNER JOIN pipelines p ON p.id = s.pipelineId
    LEFT OUTER JOIN PipelineStates ps on ps.lockedByPipelineId = s.pipelineId;


ALTER TABLE pipelines drop column locked;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704003: 1704003_pipeline_state_table.sql ---------------


--------------- Fragment begins: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704004_pipeline_states_sequence_reset.sql');
COMMIT;


-- Change script: #1704004: 1704004_pipeline_states_sequence_reset.sql
-- As part of 1704003_pipeline_state_table.sql, PipelineStates was incorrectly setup to use plugins_id_seq instead of pipelinestates_id_seq.
-- This migration resets the sequence pipelinestates_id_seq to be the max(id) of PipelineStates, and alters PipelineStates to use the correct sequence.
-- Since sequences are not explicitly defined for H2, a corresponding migration for H2 is not required.

-- This delta is being backported to all releases starting from 17.4 until 17.10 as part of the patch release.

do $$
declare maxid int;
begin
    select max(id) from pipelinestates into maxid;
    IF maxid IS NULL THEN
        maxid = 1;
    END IF;
    execute 'alter SEQUENCE pipelinestates_id_seq RESTART with '|| maxid;
end;
$$ language plpgsql;

ALTER table PipelineStates alter column ID set default nextval('pipelinestates_id_seq');



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------


--------------- Fragment begins: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1708001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1708001_add_hostname_and_ip_to_agents_table.sql');
COMMIT;


-- Change script: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql
ALTER TABLE agents ADD COLUMN hostname VARCHAR(255) DEFAULT NULL;
ALTER TABLE agents ADD COLUMN ipaddress VARCHAR(50) DEFAULT NULL;
CREATE INDEX idx_agent_uuid ON AGENTS(UUID);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1708001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------


--------------- Fragment begins: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801001_remove_regex_generator_type_from_artifact_properties_generator.sql');
COMMIT;


-- Change script: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql
ALTER TABLE artifactpropertiesgenerator DROP COLUMN regex;
ALTER TABLE artifactpropertiesgenerator DROP COLUMN generatorType;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------


--------------- Fragment begins: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql');
COMMIT;


-- Change script: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql
ALTER TABLE artifactplans ADD COLUMN pluggableArtifactConfigJson TEXT DEFAULT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------


--------------- Fragment begins: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801003_remove_environment_variables_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM environmentVariables
-- WHERE environmentVariables.id IN (
--   SELECT environmentVariables.id
--   FROM environmentVariables
--   INNER JOIN builds
--   ON
--     builds.id = environmentVariables.entityId
--   WHERE
--       environmentVariables.entityType = 'Job'
--     AND
--       builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801004_remove_artifact_plans_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPlans
-- WHERE artifactPlans.id IN (
--   SELECT artifactPlans.id
--   FROM artifactPlans
--   INNER JOIN builds
--     ON builds.id = artifactPlans.buildId
--   WHERE
--       artifactPlans.artifactType = 'file'
--     AND
--       builds.state = 'Completed'
-- );




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801005, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801005_remove_artifact_properties_generator_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPropertiesGenerator
-- WHERE ID IN (
--   SELECT artifactPropertiesGenerator.id
--   FROM artifactPropertiesGenerator
--   INNER JOIN builds
--     ON builds.id = artifactPropertiesGenerator.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801005 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801006, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801006_remove_resources_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801006: 1801006_remove_resources_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.
-- DELETE FROM resources
-- WHERE resources.id IN (
--   SELECT resources.id
--   FROM resources
--   INNER JOIN builds
--     ON builds.id = resources.buildId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801006 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801007, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801007_remove_job_agent_metadata_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM jobAgentMetadata
-- WHERE jobAgentMetadata.id IN (
--   SELECT jobAgentMetadata.id
--   FROM jobAgentMetadata
--   INNER JOIN builds
--     ON
--       builds.id = jobAgentMetadata.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801007 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802001_clear_username_and_comment_for_dependency_materials.sql');
COMMIT;


-- Change script: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql
UPDATE
  modifications
SET
  username = null, comment = null
WHERE
    pipelineid IS NOT NULL
  AND
    username = 'Unknown'
  AND
    comment = 'Unknown';



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------


--------------- Fragment begins: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802002_add_index_on_pipelines_name_and_id_column.sql');
COMMIT;


-- Change script: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_pipeline_name_id ON pipelines( name, id );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------


--------------- Fragment begins: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1804001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql');
COMMIT;


-- Change script: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql
ALTER TABLE PIPELINELABELCOUNTS ADD COLUMN caseInsensitivePipelineName CITEXT;
UPDATE PIPELINELABELCOUNTS set caseInsensitivePipelineName = pipelinename;
CREATE INDEX idx_pipelinelabelcounts_caseinsensitivepipelinename ON PIPELINELABELCOUNTS(caseInsensitivePipelineName);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1804001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------


--------------- Fragment begins: #1805001: 1805001_drop_preferred_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1805001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1805001_drop_preferred_table.sql');
COMMIT;


-- Change script: #1805001: 1805001_drop_preferred_table.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- See `230006_make_user_name_case_insensitive.sql`
-- This was a temp table created to make users' login-name case-insensitive
DROP TABLE preffered;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1805001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1805001: 1805001_drop_preferred_table.sql ---------------


--------------- Fragment begins: #1807001: 1807001_data_sharing_settings_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807001_data_sharing_settings_table.sql');
COMMIT;


-- Change script: #1807001: 1807001_data_sharing_settings_table.sql
CREATE SEQUENCE datasharingsettings_id_seq START WITH 1;

CREATE TABLE DataSharingSettings (
  id             BIGINT DEFAULT nextval('datasharingsettings_id_seq') PRIMARY KEY,
  allowSharing        BOOLEAN NOT NULL,
  updatedBy    VARCHAR(255),
  updatedOn    TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807001: 1807001_data_sharing_settings_table.sql ---------------


--------------- Fragment begins: #1807002: 1807002_usage_data_reporting_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807002_usage_data_reporting_table.sql');
COMMIT;


-- Change script: #1807002: 1807002_usage_data_reporting_table.sql
CREATE SEQUENCE usagedatareporting_id_seq START WITH 1;

CREATE TABLE UsageDataReporting (
  id             BIGINT DEFAULT nextval('usagedatareporting_id_seq') PRIMARY KEY,
  serverId       VARCHAR(255) NOT NULL,
  lastReportedAt TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807002: 1807002_usage_data_reporting_table.sql ---------------


--------------- Fragment begins: #1808001: 1808001_remove_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808001_remove_oauth_tables.sql');
COMMIT;


-- Change script: #1808001: 1808001_remove_oauth_tables.sql
DROP TABLE oauthtokens;
DROP SEQUENCE oauthtokens_id_seq;

DROP TABLE oauthauthorizations;
DROP SEQUENCE oauthauthorizations_id_seq;

DROP TABLE oauthclients;
DROP SEQUENCE oauthclients_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808001: 1808001_remove_oauth_tables.sql ---------------


--------------- Fragment begins: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808002_add_filters_and_version_to_pipeline_selections.sql');
COMMIT;


-- Change script: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

ALTER TABLE PipelineSelections ADD COLUMN filters TEXT;
ALTER TABLE PipelineSelections ADD COLUMN version INT DEFAULT 0 NOT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------

]; nested exception is org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1100)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	... 42 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlMapClient' defined in ServletContext resource [/WEB-INF/applicationContext-dataLocalAccess.xml]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'databaseUpgraderDataSourceFactory': Invocation of init method failed; nested exception is java.lang.RuntimeException: org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [

--------------- Fragment begins: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303001_add_additional_data_field_to_modifications_table.sql');
COMMIT;


-- Change script: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql
ALTER TABLE modifications ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------


--------------- Fragment begins: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303002_add_index_to_builds_on_stageId.sql');
COMMIT;


-- Change script: #1303002: 1303002_add_index_to_builds_on_stageId.sql
CREATE INDEX idx_builds_stageId ON builds(stageId);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------


--------------- Fragment begins: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303003_add_index_to_stages_resources_tables.sql');
COMMIT;


-- Change script: #1303003: 1303003_add_index_to_stages_resources_tables.sql
CREATE INDEX idx_stages_pipelineId ON stages(pipelineid);
CREATE INDEX idx_resources_buildId ON resources(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------


--------------- Fragment begins: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303004_indexes_based_on_purge_tool.sql');
COMMIT;


-- Change script: #1303004: 1303004_indexes_based_on_purge_tool.sql
CREATE INDEX idx_properties_buildId ON properties(buildId);
CREATE INDEX idx_materials_pipelinename ON materials(pipelinename);
CREATE INDEX idx_artifactpropertiesgenerator_jobid ON artifactpropertiesgenerator(jobid);
CREATE INDEX idx_environmentvariables_entitytype ON environmentvariables(entitytype);
CREATE INDEX idx_stageartifactcleanupprohibited_pipelinename ON stageartifactcleanupprohibited(pipelinename);
CREATE INDEX idx_pipelineLabelCounts_pipelinename ON pipelineLabelCounts(pipelinename);




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------


--------------- Fragment begins: #1304001: 1304001_remove_luau_related_entries.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1304001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1304001_remove_luau_related_entries.sql');
COMMIT;


-- Change script: #1304001: 1304001_remove_luau_related_entries.sql
DROP TABLE IF EXISTS luau_groups_users;
DROP TABLE IF EXISTS luau_groups;
DROP TABLE IF EXISTS luaustate;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1304001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1304001: 1304001_remove_luau_related_entries.sql ---------------


--------------- Fragment begins: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1401001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1401001_recreating_trigger_because_of_cruise_to_go_change.sql');
COMMIT;


-- Change script: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql
SELECT (1);


UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1401001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------


--------------- Fragment begins: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403001_fix_null_artifacttype_on_artifactplans_table.sql');
COMMIT;


-- Change script: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql
UPDATE ARTIFACTPLANS SET ARTIFACTTYPE='file' WHERE ARTIFACTTYPE IS NULL;
COMMIT;

-- No undo as adding default value to mandatory field



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------


--------------- Fragment begins: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql');
COMMIT;


-- Change script: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

alter table builds add column runMultipleInstance boolean default false;

DROP VIEW _builds;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------


--------------- Fragment begins: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql');
COMMIT;


-- Change script: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelineselections RENAME COLUMN unselectedpipelines TO selections;

ALTER TABLE pipelineselections ADD COLUMN isblacklist BOOLEAN DEFAULT true;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------


--------------- Fragment begins: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501002_add_comment_column_to_pipelines.sql');
COMMIT;


-- Change script: #1501002: 1501002_add_comment_column_to_pipelines.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelines ADD COLUMN comment TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------


--------------- Fragment begins: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501003_add_additional_data_field_to_materials_table.sql');
COMMIT;


-- Change script: #1501003: 1501003_add_additional_data_field_to_materials_table.sql
ALTER TABLE materials ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------


--------------- Fragment begins: #1502001: 1502001_create_plugins_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1502001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1502001_create_plugins_table.sql');
COMMIT;


-- Change script: #1502001: 1502001_create_plugins_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE plugins_id_seq START WITH 1;
CREATE TABLE plugins (
    id              BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pluginId        VARCHAR(255) Not NULL,
    configuration   TEXT,
    UNIQUE (pluginId)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1502001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1502001: 1502001_create_plugins_table.sql ---------------


--------------- Fragment begins: #1503001: 1503001_remove_licensing_from_users.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503001_remove_licensing_from_users.sql');
COMMIT;


-- Change script: #1503001: 1503001_remove_licensing_from_users.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE users DROP COLUMN disableLicenseExpiryWarning;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503001: 1503001_remove_licensing_from_users.sql ---------------


--------------- Fragment begins: #1503002: 1503002_create_version_infos_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503002_create_version_infos_table.sql');
COMMIT;


-- Change script: #1503002: 1503002_create_version_infos_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2015 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE versioninfos_id_seq START WITH 1;
CREATE TABLE versioninfos (
    id                      BIGINT DEFAULT nextval('versioninfos_id_seq') PRIMARY KEY,
    componentName           VARCHAR(255) Not NULL,
    installedVersion        VARCHAR(100) Not NULL,
    latestVersion           VARCHAR(50),
    latestVersionUpdatedAt  TIMESTAMP,
    UNIQUE (componentName)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503002: 1503002_create_version_infos_table.sql ---------------


--------------- Fragment begins: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606001_add_index_to_buildstatetransitions.sql');
COMMIT;


-- Change script: #1606001: 1606001_add_index_to_buildstatetransitions.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_buildstatetransition_build_id ON buildstatetransitions(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------


--------------- Fragment begins: #1606002: 1606002_add_index_to_artifactplans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606002_add_index_to_artifactplans.sql');
COMMIT;


-- Change script: #1606002: 1606002_add_index_to_artifactplans.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_artifactplan_build_id ON artifactplans(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606002: 1606002_add_index_to_artifactplans.sql ---------------


--------------- Fragment begins: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1607001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1607001_create_agent_metadata_job_table.sql');
COMMIT;


-- Change script: #1607001: 1607001_create_agent_metadata_job_table.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE SEQUENCE jobagentmetadata_id_seq START WITH 1;
CREATE TABLE jobagentmetadata (
  id              BIGINT DEFAULT nextval('jobagentmetadata_id_seq') PRIMARY KEY,
  jobId           BIGINT UNIQUE NOT NULL,
  metadata        TEXT NOT NULL,
  metadataVersion VARCHAR(50),
  UNIQUE (jobId)
);

ALTER TABLE jobagentmetadata ADD CONSTRAINT fk_jobagentmetadata_jobs FOREIGN KEY (jobId) REFERENCES builds (id)
  ON DELETE CASCADE;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1607001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------


--------------- Fragment begins: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1610001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1610001_add_index_to_modifiedfiles.sql');
COMMIT;


-- Change script: #1610001: 1610001_add_index_to_modifiedfiles.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX CONCURRENTLY idx_modifiedfiles_modification_id ON modifiedfiles(modificationid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1610001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------


--------------- Fragment begins: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701001_remove_gadget_oauth_tables.sql');
COMMIT;


-- Change script: #1701001: 1701001_remove_gadget_oauth_tables.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

DROP TABLE gadgetOauthAuthorizationCodes;
DROP TABLE gadgetOauthAccessTokens;
DROP TABLE gadgetOauthClients;

DROP SEQUENCE gadgetOauthClients_id_seq;
DROP SEQUENCE gadgetOauthAccessTokens_id_seq;
DROP SEQUENCE gadgetOauthAuthorizationCodes_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------


--------------- Fragment begins: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701002_remove_materialproperties_id_seq.sql');
COMMIT;


-- Change script: #1701002: 1701002_remove_materialproperties_id_seq.sql
DROP SEQUENCE IF EXISTS materialProperties_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------


--------------- Fragment begins: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1702001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1702001_remove_build_cause_buffer_table.sql');
COMMIT;


-- Change script: #1702001: 1702001_remove_build_cause_buffer_table.sql
DROP TABLE BuildCauseBuffer;
DROP SEQUENCE buildcausebuffer_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1702001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------


--------------- Fragment begins: #1704001: 1704001_widen_agents_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704001_widen_agents_uuid_column.sql');
COMMIT;


-- Change script: #1704001: 1704001_widen_agents_uuid_column.sql

ALTER TABLE agents ALTER COLUMN uuid TYPE VARCHAR(255);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704001: 1704001_widen_agents_uuid_column.sql ---------------


--------------- Fragment begins: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704002_widen_builds_agent_uuid_column.sql');
COMMIT;


-- Change script: #1704002: 1704002_widen_builds_agent_uuid_column.sql

DROP VIEW _builds;

ALTER TABLE builds ALTER COLUMN agentUuid TYPE VARCHAR(255);

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------


--------------- Fragment begins: #1704003: 1704003_pipeline_state_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704003_pipeline_state_table.sql');
COMMIT;


-- Change script: #1704003: 1704003_pipeline_state_table.sql
CREATE SEQUENCE pipelinestates_id_seq START WITH 1;
CREATE TABLE PipelineStates (
    id                      BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pipelineName            CITEXT NOT NULL,
    locked                  BOOLEAN,
    lockedByPipelineId              BIGINT
);

ALTER TABLE PipelineStates ADD CONSTRAINT unique_pipeline_state UNIQUE (pipelineName);

INSERT INTO PipelineStates (pipelineName, locked, lockedByPipelineId) (select name, locked, id from pipelines where id in (select max(id) from pipelines where locked = true group by name));

DROP VIEW _stages;

CREATE VIEW _stages AS
    SELECT s.*,
      p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, ps.locked, p.naturalOrder
    FROM stages s
    INNER JOIN pipelines p ON p.id = s.pipelineId
    LEFT OUTER JOIN PipelineStates ps on ps.lockedByPipelineId = s.pipelineId;


ALTER TABLE pipelines drop column locked;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704003: 1704003_pipeline_state_table.sql ---------------


--------------- Fragment begins: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704004_pipeline_states_sequence_reset.sql');
COMMIT;


-- Change script: #1704004: 1704004_pipeline_states_sequence_reset.sql
-- As part of 1704003_pipeline_state_table.sql, PipelineStates was incorrectly setup to use plugins_id_seq instead of pipelinestates_id_seq.
-- This migration resets the sequence pipelinestates_id_seq to be the max(id) of PipelineStates, and alters PipelineStates to use the correct sequence.
-- Since sequences are not explicitly defined for H2, a corresponding migration for H2 is not required.

-- This delta is being backported to all releases starting from 17.4 until 17.10 as part of the patch release.

do $$
declare maxid int;
begin
    select max(id) from pipelinestates into maxid;
    IF maxid IS NULL THEN
        maxid = 1;
    END IF;
    execute 'alter SEQUENCE pipelinestates_id_seq RESTART with '|| maxid;
end;
$$ language plpgsql;

ALTER table PipelineStates alter column ID set default nextval('pipelinestates_id_seq');



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------


--------------- Fragment begins: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1708001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1708001_add_hostname_and_ip_to_agents_table.sql');
COMMIT;


-- Change script: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql
ALTER TABLE agents ADD COLUMN hostname VARCHAR(255) DEFAULT NULL;
ALTER TABLE agents ADD COLUMN ipaddress VARCHAR(50) DEFAULT NULL;
CREATE INDEX idx_agent_uuid ON AGENTS(UUID);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1708001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------


--------------- Fragment begins: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801001_remove_regex_generator_type_from_artifact_properties_generator.sql');
COMMIT;


-- Change script: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql
ALTER TABLE artifactpropertiesgenerator DROP COLUMN regex;
ALTER TABLE artifactpropertiesgenerator DROP COLUMN generatorType;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------


--------------- Fragment begins: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql');
COMMIT;


-- Change script: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql
ALTER TABLE artifactplans ADD COLUMN pluggableArtifactConfigJson TEXT DEFAULT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------


--------------- Fragment begins: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801003_remove_environment_variables_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM environmentVariables
-- WHERE environmentVariables.id IN (
--   SELECT environmentVariables.id
--   FROM environmentVariables
--   INNER JOIN builds
--   ON
--     builds.id = environmentVariables.entityId
--   WHERE
--       environmentVariables.entityType = 'Job'
--     AND
--       builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801004_remove_artifact_plans_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPlans
-- WHERE artifactPlans.id IN (
--   SELECT artifactPlans.id
--   FROM artifactPlans
--   INNER JOIN builds
--     ON builds.id = artifactPlans.buildId
--   WHERE
--       artifactPlans.artifactType = 'file'
--     AND
--       builds.state = 'Completed'
-- );




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801005, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801005_remove_artifact_properties_generator_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPropertiesGenerator
-- WHERE ID IN (
--   SELECT artifactPropertiesGenerator.id
--   FROM artifactPropertiesGenerator
--   INNER JOIN builds
--     ON builds.id = artifactPropertiesGenerator.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801005 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801006, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801006_remove_resources_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801006: 1801006_remove_resources_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.
-- DELETE FROM resources
-- WHERE resources.id IN (
--   SELECT resources.id
--   FROM resources
--   INNER JOIN builds
--     ON builds.id = resources.buildId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801006 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801007, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801007_remove_job_agent_metadata_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM jobAgentMetadata
-- WHERE jobAgentMetadata.id IN (
--   SELECT jobAgentMetadata.id
--   FROM jobAgentMetadata
--   INNER JOIN builds
--     ON
--       builds.id = jobAgentMetadata.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801007 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802001_clear_username_and_comment_for_dependency_materials.sql');
COMMIT;


-- Change script: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql
UPDATE
  modifications
SET
  username = null, comment = null
WHERE
    pipelineid IS NOT NULL
  AND
    username = 'Unknown'
  AND
    comment = 'Unknown';



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------


--------------- Fragment begins: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802002_add_index_on_pipelines_name_and_id_column.sql');
COMMIT;


-- Change script: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_pipeline_name_id ON pipelines( name, id );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------


--------------- Fragment begins: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1804001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql');
COMMIT;


-- Change script: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql
ALTER TABLE PIPELINELABELCOUNTS ADD COLUMN caseInsensitivePipelineName CITEXT;
UPDATE PIPELINELABELCOUNTS set caseInsensitivePipelineName = pipelinename;
CREATE INDEX idx_pipelinelabelcounts_caseinsensitivepipelinename ON PIPELINELABELCOUNTS(caseInsensitivePipelineName);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1804001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------


--------------- Fragment begins: #1805001: 1805001_drop_preferred_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1805001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1805001_drop_preferred_table.sql');
COMMIT;


-- Change script: #1805001: 1805001_drop_preferred_table.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- See `230006_make_user_name_case_insensitive.sql`
-- This was a temp table created to make users' login-name case-insensitive
DROP TABLE preffered;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1805001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1805001: 1805001_drop_preferred_table.sql ---------------


--------------- Fragment begins: #1807001: 1807001_data_sharing_settings_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807001_data_sharing_settings_table.sql');
COMMIT;


-- Change script: #1807001: 1807001_data_sharing_settings_table.sql
CREATE SEQUENCE datasharingsettings_id_seq START WITH 1;

CREATE TABLE DataSharingSettings (
  id             BIGINT DEFAULT nextval('datasharingsettings_id_seq') PRIMARY KEY,
  allowSharing        BOOLEAN NOT NULL,
  updatedBy    VARCHAR(255),
  updatedOn    TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807001: 1807001_data_sharing_settings_table.sql ---------------


--------------- Fragment begins: #1807002: 1807002_usage_data_reporting_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807002_usage_data_reporting_table.sql');
COMMIT;


-- Change script: #1807002: 1807002_usage_data_reporting_table.sql
CREATE SEQUENCE usagedatareporting_id_seq START WITH 1;

CREATE TABLE UsageDataReporting (
  id             BIGINT DEFAULT nextval('usagedatareporting_id_seq') PRIMARY KEY,
  serverId       VARCHAR(255) NOT NULL,
  lastReportedAt TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807002: 1807002_usage_data_reporting_table.sql ---------------


--------------- Fragment begins: #1808001: 1808001_remove_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808001_remove_oauth_tables.sql');
COMMIT;


-- Change script: #1808001: 1808001_remove_oauth_tables.sql
DROP TABLE oauthtokens;
DROP SEQUENCE oauthtokens_id_seq;

DROP TABLE oauthauthorizations;
DROP SEQUENCE oauthauthorizations_id_seq;

DROP TABLE oauthclients;
DROP SEQUENCE oauthclients_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808001: 1808001_remove_oauth_tables.sql ---------------


--------------- Fragment begins: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808002_add_filters_and_version_to_pipeline_selections.sql');
COMMIT;


-- Change script: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

ALTER TABLE PipelineSelections ADD COLUMN filters TEXT;
ALTER TABLE PipelineSelections ADD COLUMN version INT DEFAULT 0 NOT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------

]; nested exception is org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1100)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getSingletonFactoryBeanForTypeCheck(AbstractAutowireCapableBeanFactory.java:928)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:805)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:564)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:432)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:403)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:206)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1265)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1099)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1064)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	... 52 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'databaseUpgraderDataSourceFactory': Invocation of init method failed; nested exception is java.lang.RuntimeException: org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [

--------------- Fragment begins: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303001_add_additional_data_field_to_modifications_table.sql');
COMMIT;


-- Change script: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql
ALTER TABLE modifications ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------


--------------- Fragment begins: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303002_add_index_to_builds_on_stageId.sql');
COMMIT;


-- Change script: #1303002: 1303002_add_index_to_builds_on_stageId.sql
CREATE INDEX idx_builds_stageId ON builds(stageId);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------


--------------- Fragment begins: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303003_add_index_to_stages_resources_tables.sql');
COMMIT;


-- Change script: #1303003: 1303003_add_index_to_stages_resources_tables.sql
CREATE INDEX idx_stages_pipelineId ON stages(pipelineid);
CREATE INDEX idx_resources_buildId ON resources(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------


--------------- Fragment begins: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303004_indexes_based_on_purge_tool.sql');
COMMIT;


-- Change script: #1303004: 1303004_indexes_based_on_purge_tool.sql
CREATE INDEX idx_properties_buildId ON properties(buildId);
CREATE INDEX idx_materials_pipelinename ON materials(pipelinename);
CREATE INDEX idx_artifactpropertiesgenerator_jobid ON artifactpropertiesgenerator(jobid);
CREATE INDEX idx_environmentvariables_entitytype ON environmentvariables(entitytype);
CREATE INDEX idx_stageartifactcleanupprohibited_pipelinename ON stageartifactcleanupprohibited(pipelinename);
CREATE INDEX idx_pipelineLabelCounts_pipelinename ON pipelineLabelCounts(pipelinename);




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------


--------------- Fragment begins: #1304001: 1304001_remove_luau_related_entries.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1304001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1304001_remove_luau_related_entries.sql');
COMMIT;


-- Change script: #1304001: 1304001_remove_luau_related_entries.sql
DROP TABLE IF EXISTS luau_groups_users;
DROP TABLE IF EXISTS luau_groups;
DROP TABLE IF EXISTS luaustate;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1304001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1304001: 1304001_remove_luau_related_entries.sql ---------------


--------------- Fragment begins: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1401001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1401001_recreating_trigger_because_of_cruise_to_go_change.sql');
COMMIT;


-- Change script: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql
SELECT (1);


UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1401001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------


--------------- Fragment begins: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403001_fix_null_artifacttype_on_artifactplans_table.sql');
COMMIT;


-- Change script: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql
UPDATE ARTIFACTPLANS SET ARTIFACTTYPE='file' WHERE ARTIFACTTYPE IS NULL;
COMMIT;

-- No undo as adding default value to mandatory field



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------


--------------- Fragment begins: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql');
COMMIT;


-- Change script: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

alter table builds add column runMultipleInstance boolean default false;

DROP VIEW _builds;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------


--------------- Fragment begins: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql');
COMMIT;


-- Change script: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelineselections RENAME COLUMN unselectedpipelines TO selections;

ALTER TABLE pipelineselections ADD COLUMN isblacklist BOOLEAN DEFAULT true;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------


--------------- Fragment begins: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501002_add_comment_column_to_pipelines.sql');
COMMIT;


-- Change script: #1501002: 1501002_add_comment_column_to_pipelines.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelines ADD COLUMN comment TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------


--------------- Fragment begins: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501003_add_additional_data_field_to_materials_table.sql');
COMMIT;


-- Change script: #1501003: 1501003_add_additional_data_field_to_materials_table.sql
ALTER TABLE materials ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------


--------------- Fragment begins: #1502001: 1502001_create_plugins_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1502001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1502001_create_plugins_table.sql');
COMMIT;


-- Change script: #1502001: 1502001_create_plugins_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE plugins_id_seq START WITH 1;
CREATE TABLE plugins (
    id              BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pluginId        VARCHAR(255) Not NULL,
    configuration   TEXT,
    UNIQUE (pluginId)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1502001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1502001: 1502001_create_plugins_table.sql ---------------


--------------- Fragment begins: #1503001: 1503001_remove_licensing_from_users.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503001_remove_licensing_from_users.sql');
COMMIT;


-- Change script: #1503001: 1503001_remove_licensing_from_users.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE users DROP COLUMN disableLicenseExpiryWarning;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503001: 1503001_remove_licensing_from_users.sql ---------------


--------------- Fragment begins: #1503002: 1503002_create_version_infos_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503002_create_version_infos_table.sql');
COMMIT;


-- Change script: #1503002: 1503002_create_version_infos_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2015 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE versioninfos_id_seq START WITH 1;
CREATE TABLE versioninfos (
    id                      BIGINT DEFAULT nextval('versioninfos_id_seq') PRIMARY KEY,
    componentName           VARCHAR(255) Not NULL,
    installedVersion        VARCHAR(100) Not NULL,
    latestVersion           VARCHAR(50),
    latestVersionUpdatedAt  TIMESTAMP,
    UNIQUE (componentName)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503002: 1503002_create_version_infos_table.sql ---------------


--------------- Fragment begins: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606001_add_index_to_buildstatetransitions.sql');
COMMIT;


-- Change script: #1606001: 1606001_add_index_to_buildstatetransitions.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_buildstatetransition_build_id ON buildstatetransitions(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------


--------------- Fragment begins: #1606002: 1606002_add_index_to_artifactplans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606002_add_index_to_artifactplans.sql');
COMMIT;


-- Change script: #1606002: 1606002_add_index_to_artifactplans.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_artifactplan_build_id ON artifactplans(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606002: 1606002_add_index_to_artifactplans.sql ---------------


--------------- Fragment begins: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1607001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1607001_create_agent_metadata_job_table.sql');
COMMIT;


-- Change script: #1607001: 1607001_create_agent_metadata_job_table.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE SEQUENCE jobagentmetadata_id_seq START WITH 1;
CREATE TABLE jobagentmetadata (
  id              BIGINT DEFAULT nextval('jobagentmetadata_id_seq') PRIMARY KEY,
  jobId           BIGINT UNIQUE NOT NULL,
  metadata        TEXT NOT NULL,
  metadataVersion VARCHAR(50),
  UNIQUE (jobId)
);

ALTER TABLE jobagentmetadata ADD CONSTRAINT fk_jobagentmetadata_jobs FOREIGN KEY (jobId) REFERENCES builds (id)
  ON DELETE CASCADE;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1607001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------


--------------- Fragment begins: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1610001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1610001_add_index_to_modifiedfiles.sql');
COMMIT;


-- Change script: #1610001: 1610001_add_index_to_modifiedfiles.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX CONCURRENTLY idx_modifiedfiles_modification_id ON modifiedfiles(modificationid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1610001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------


--------------- Fragment begins: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701001_remove_gadget_oauth_tables.sql');
COMMIT;


-- Change script: #1701001: 1701001_remove_gadget_oauth_tables.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

DROP TABLE gadgetOauthAuthorizationCodes;
DROP TABLE gadgetOauthAccessTokens;
DROP TABLE gadgetOauthClients;

DROP SEQUENCE gadgetOauthClients_id_seq;
DROP SEQUENCE gadgetOauthAccessTokens_id_seq;
DROP SEQUENCE gadgetOauthAuthorizationCodes_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------


--------------- Fragment begins: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701002_remove_materialproperties_id_seq.sql');
COMMIT;


-- Change script: #1701002: 1701002_remove_materialproperties_id_seq.sql
DROP SEQUENCE IF EXISTS materialProperties_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------


--------------- Fragment begins: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1702001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1702001_remove_build_cause_buffer_table.sql');
COMMIT;


-- Change script: #1702001: 1702001_remove_build_cause_buffer_table.sql
DROP TABLE BuildCauseBuffer;
DROP SEQUENCE buildcausebuffer_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1702001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------


--------------- Fragment begins: #1704001: 1704001_widen_agents_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704001_widen_agents_uuid_column.sql');
COMMIT;


-- Change script: #1704001: 1704001_widen_agents_uuid_column.sql

ALTER TABLE agents ALTER COLUMN uuid TYPE VARCHAR(255);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704001: 1704001_widen_agents_uuid_column.sql ---------------


--------------- Fragment begins: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704002_widen_builds_agent_uuid_column.sql');
COMMIT;


-- Change script: #1704002: 1704002_widen_builds_agent_uuid_column.sql

DROP VIEW _builds;

ALTER TABLE builds ALTER COLUMN agentUuid TYPE VARCHAR(255);

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------


--------------- Fragment begins: #1704003: 1704003_pipeline_state_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704003_pipeline_state_table.sql');
COMMIT;


-- Change script: #1704003: 1704003_pipeline_state_table.sql
CREATE SEQUENCE pipelinestates_id_seq START WITH 1;
CREATE TABLE PipelineStates (
    id                      BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pipelineName            CITEXT NOT NULL,
    locked                  BOOLEAN,
    lockedByPipelineId              BIGINT
);

ALTER TABLE PipelineStates ADD CONSTRAINT unique_pipeline_state UNIQUE (pipelineName);

INSERT INTO PipelineStates (pipelineName, locked, lockedByPipelineId) (select name, locked, id from pipelines where id in (select max(id) from pipelines where locked = true group by name));

DROP VIEW _stages;

CREATE VIEW _stages AS
    SELECT s.*,
      p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, ps.locked, p.naturalOrder
    FROM stages s
    INNER JOIN pipelines p ON p.id = s.pipelineId
    LEFT OUTER JOIN PipelineStates ps on ps.lockedByPipelineId = s.pipelineId;


ALTER TABLE pipelines drop column locked;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704003: 1704003_pipeline_state_table.sql ---------------


--------------- Fragment begins: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704004_pipeline_states_sequence_reset.sql');
COMMIT;


-- Change script: #1704004: 1704004_pipeline_states_sequence_reset.sql
-- As part of 1704003_pipeline_state_table.sql, PipelineStates was incorrectly setup to use plugins_id_seq instead of pipelinestates_id_seq.
-- This migration resets the sequence pipelinestates_id_seq to be the max(id) of PipelineStates, and alters PipelineStates to use the correct sequence.
-- Since sequences are not explicitly defined for H2, a corresponding migration for H2 is not required.

-- This delta is being backported to all releases starting from 17.4 until 17.10 as part of the patch release.

do $$
declare maxid int;
begin
    select max(id) from pipelinestates into maxid;
    IF maxid IS NULL THEN
        maxid = 1;
    END IF;
    execute 'alter SEQUENCE pipelinestates_id_seq RESTART with '|| maxid;
end;
$$ language plpgsql;

ALTER table PipelineStates alter column ID set default nextval('pipelinestates_id_seq');



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------


--------------- Fragment begins: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1708001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1708001_add_hostname_and_ip_to_agents_table.sql');
COMMIT;


-- Change script: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql
ALTER TABLE agents ADD COLUMN hostname VARCHAR(255) DEFAULT NULL;
ALTER TABLE agents ADD COLUMN ipaddress VARCHAR(50) DEFAULT NULL;
CREATE INDEX idx_agent_uuid ON AGENTS(UUID);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1708001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------


--------------- Fragment begins: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801001_remove_regex_generator_type_from_artifact_properties_generator.sql');
COMMIT;


-- Change script: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql
ALTER TABLE artifactpropertiesgenerator DROP COLUMN regex;
ALTER TABLE artifactpropertiesgenerator DROP COLUMN generatorType;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------


--------------- Fragment begins: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql');
COMMIT;


-- Change script: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql
ALTER TABLE artifactplans ADD COLUMN pluggableArtifactConfigJson TEXT DEFAULT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------


--------------- Fragment begins: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801003_remove_environment_variables_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM environmentVariables
-- WHERE environmentVariables.id IN (
--   SELECT environmentVariables.id
--   FROM environmentVariables
--   INNER JOIN builds
--   ON
--     builds.id = environmentVariables.entityId
--   WHERE
--       environmentVariables.entityType = 'Job'
--     AND
--       builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801004_remove_artifact_plans_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPlans
-- WHERE artifactPlans.id IN (
--   SELECT artifactPlans.id
--   FROM artifactPlans
--   INNER JOIN builds
--     ON builds.id = artifactPlans.buildId
--   WHERE
--       artifactPlans.artifactType = 'file'
--     AND
--       builds.state = 'Completed'
-- );




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801005, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801005_remove_artifact_properties_generator_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPropertiesGenerator
-- WHERE ID IN (
--   SELECT artifactPropertiesGenerator.id
--   FROM artifactPropertiesGenerator
--   INNER JOIN builds
--     ON builds.id = artifactPropertiesGenerator.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801005 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801006, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801006_remove_resources_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801006: 1801006_remove_resources_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.
-- DELETE FROM resources
-- WHERE resources.id IN (
--   SELECT resources.id
--   FROM resources
--   INNER JOIN builds
--     ON builds.id = resources.buildId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801006 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801007, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801007_remove_job_agent_metadata_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM jobAgentMetadata
-- WHERE jobAgentMetadata.id IN (
--   SELECT jobAgentMetadata.id
--   FROM jobAgentMetadata
--   INNER JOIN builds
--     ON
--       builds.id = jobAgentMetadata.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801007 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802001_clear_username_and_comment_for_dependency_materials.sql');
COMMIT;


-- Change script: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql
UPDATE
  modifications
SET
  username = null, comment = null
WHERE
    pipelineid IS NOT NULL
  AND
    username = 'Unknown'
  AND
    comment = 'Unknown';



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------


--------------- Fragment begins: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802002_add_index_on_pipelines_name_and_id_column.sql');
COMMIT;


-- Change script: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_pipeline_name_id ON pipelines( name, id );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------


--------------- Fragment begins: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1804001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql');
COMMIT;


-- Change script: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql
ALTER TABLE PIPELINELABELCOUNTS ADD COLUMN caseInsensitivePipelineName CITEXT;
UPDATE PIPELINELABELCOUNTS set caseInsensitivePipelineName = pipelinename;
CREATE INDEX idx_pipelinelabelcounts_caseinsensitivepipelinename ON PIPELINELABELCOUNTS(caseInsensitivePipelineName);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1804001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------


--------------- Fragment begins: #1805001: 1805001_drop_preferred_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1805001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1805001_drop_preferred_table.sql');
COMMIT;


-- Change script: #1805001: 1805001_drop_preferred_table.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- See `230006_make_user_name_case_insensitive.sql`
-- This was a temp table created to make users' login-name case-insensitive
DROP TABLE preffered;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1805001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1805001: 1805001_drop_preferred_table.sql ---------------


--------------- Fragment begins: #1807001: 1807001_data_sharing_settings_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807001_data_sharing_settings_table.sql');
COMMIT;


-- Change script: #1807001: 1807001_data_sharing_settings_table.sql
CREATE SEQUENCE datasharingsettings_id_seq START WITH 1;

CREATE TABLE DataSharingSettings (
  id             BIGINT DEFAULT nextval('datasharingsettings_id_seq') PRIMARY KEY,
  allowSharing        BOOLEAN NOT NULL,
  updatedBy    VARCHAR(255),
  updatedOn    TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807001: 1807001_data_sharing_settings_table.sql ---------------


--------------- Fragment begins: #1807002: 1807002_usage_data_reporting_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807002_usage_data_reporting_table.sql');
COMMIT;


-- Change script: #1807002: 1807002_usage_data_reporting_table.sql
CREATE SEQUENCE usagedatareporting_id_seq START WITH 1;

CREATE TABLE UsageDataReporting (
  id             BIGINT DEFAULT nextval('usagedatareporting_id_seq') PRIMARY KEY,
  serverId       VARCHAR(255) NOT NULL,
  lastReportedAt TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807002: 1807002_usage_data_reporting_table.sql ---------------


--------------- Fragment begins: #1808001: 1808001_remove_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808001_remove_oauth_tables.sql');
COMMIT;


-- Change script: #1808001: 1808001_remove_oauth_tables.sql
DROP TABLE oauthtokens;
DROP SEQUENCE oauthtokens_id_seq;

DROP TABLE oauthauthorizations;
DROP SEQUENCE oauthauthorizations_id_seq;

DROP TABLE oauthclients;
DROP SEQUENCE oauthclients_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808001: 1808001_remove_oauth_tables.sql ---------------


--------------- Fragment begins: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808002_add_filters_and_version_to_pipeline_selections.sql');
COMMIT;


-- Change script: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

ALTER TABLE PipelineSelections ADD COLUMN filters TEXT;
ALTER TABLE PipelineSelections ADD COLUMN version INT DEFAULT 0 NOT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------

]; nested exception is org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:137)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:407)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1623)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1178)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1136)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1064)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	... 66 common frames omitted
Caused by: java.lang.RuntimeException: org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [

--------------- Fragment begins: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303001_add_additional_data_field_to_modifications_table.sql');
COMMIT;


-- Change script: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql
ALTER TABLE modifications ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------


--------------- Fragment begins: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303002_add_index_to_builds_on_stageId.sql');
COMMIT;


-- Change script: #1303002: 1303002_add_index_to_builds_on_stageId.sql
CREATE INDEX idx_builds_stageId ON builds(stageId);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------


--------------- Fragment begins: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303003_add_index_to_stages_resources_tables.sql');
COMMIT;


-- Change script: #1303003: 1303003_add_index_to_stages_resources_tables.sql
CREATE INDEX idx_stages_pipelineId ON stages(pipelineid);
CREATE INDEX idx_resources_buildId ON resources(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------


--------------- Fragment begins: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303004_indexes_based_on_purge_tool.sql');
COMMIT;


-- Change script: #1303004: 1303004_indexes_based_on_purge_tool.sql
CREATE INDEX idx_properties_buildId ON properties(buildId);
CREATE INDEX idx_materials_pipelinename ON materials(pipelinename);
CREATE INDEX idx_artifactpropertiesgenerator_jobid ON artifactpropertiesgenerator(jobid);
CREATE INDEX idx_environmentvariables_entitytype ON environmentvariables(entitytype);
CREATE INDEX idx_stageartifactcleanupprohibited_pipelinename ON stageartifactcleanupprohibited(pipelinename);
CREATE INDEX idx_pipelineLabelCounts_pipelinename ON pipelineLabelCounts(pipelinename);




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------


--------------- Fragment begins: #1304001: 1304001_remove_luau_related_entries.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1304001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1304001_remove_luau_related_entries.sql');
COMMIT;


-- Change script: #1304001: 1304001_remove_luau_related_entries.sql
DROP TABLE IF EXISTS luau_groups_users;
DROP TABLE IF EXISTS luau_groups;
DROP TABLE IF EXISTS luaustate;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1304001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1304001: 1304001_remove_luau_related_entries.sql ---------------


--------------- Fragment begins: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1401001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1401001_recreating_trigger_because_of_cruise_to_go_change.sql');
COMMIT;


-- Change script: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql
SELECT (1);


UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1401001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------


--------------- Fragment begins: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403001_fix_null_artifacttype_on_artifactplans_table.sql');
COMMIT;


-- Change script: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql
UPDATE ARTIFACTPLANS SET ARTIFACTTYPE='file' WHERE ARTIFACTTYPE IS NULL;
COMMIT;

-- No undo as adding default value to mandatory field



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------


--------------- Fragment begins: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql');
COMMIT;


-- Change script: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

alter table builds add column runMultipleInstance boolean default false;

DROP VIEW _builds;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------


--------------- Fragment begins: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql');
COMMIT;


-- Change script: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelineselections RENAME COLUMN unselectedpipelines TO selections;

ALTER TABLE pipelineselections ADD COLUMN isblacklist BOOLEAN DEFAULT true;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------


--------------- Fragment begins: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501002_add_comment_column_to_pipelines.sql');
COMMIT;


-- Change script: #1501002: 1501002_add_comment_column_to_pipelines.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelines ADD COLUMN comment TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------


--------------- Fragment begins: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501003_add_additional_data_field_to_materials_table.sql');
COMMIT;


-- Change script: #1501003: 1501003_add_additional_data_field_to_materials_table.sql
ALTER TABLE materials ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------


--------------- Fragment begins: #1502001: 1502001_create_plugins_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1502001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1502001_create_plugins_table.sql');
COMMIT;


-- Change script: #1502001: 1502001_create_plugins_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE plugins_id_seq START WITH 1;
CREATE TABLE plugins (
    id              BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pluginId        VARCHAR(255) Not NULL,
    configuration   TEXT,
    UNIQUE (pluginId)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1502001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1502001: 1502001_create_plugins_table.sql ---------------


--------------- Fragment begins: #1503001: 1503001_remove_licensing_from_users.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503001_remove_licensing_from_users.sql');
COMMIT;


-- Change script: #1503001: 1503001_remove_licensing_from_users.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE users DROP COLUMN disableLicenseExpiryWarning;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503001: 1503001_remove_licensing_from_users.sql ---------------


--------------- Fragment begins: #1503002: 1503002_create_version_infos_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503002_create_version_infos_table.sql');
COMMIT;


-- Change script: #1503002: 1503002_create_version_infos_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2015 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE versioninfos_id_seq START WITH 1;
CREATE TABLE versioninfos (
    id                      BIGINT DEFAULT nextval('versioninfos_id_seq') PRIMARY KEY,
    componentName           VARCHAR(255) Not NULL,
    installedVersion        VARCHAR(100) Not NULL,
    latestVersion           VARCHAR(50),
    latestVersionUpdatedAt  TIMESTAMP,
    UNIQUE (componentName)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503002: 1503002_create_version_infos_table.sql ---------------


--------------- Fragment begins: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606001_add_index_to_buildstatetransitions.sql');
COMMIT;


-- Change script: #1606001: 1606001_add_index_to_buildstatetransitions.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_buildstatetransition_build_id ON buildstatetransitions(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------


--------------- Fragment begins: #1606002: 1606002_add_index_to_artifactplans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606002_add_index_to_artifactplans.sql');
COMMIT;


-- Change script: #1606002: 1606002_add_index_to_artifactplans.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_artifactplan_build_id ON artifactplans(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606002: 1606002_add_index_to_artifactplans.sql ---------------


--------------- Fragment begins: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1607001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1607001_create_agent_metadata_job_table.sql');
COMMIT;


-- Change script: #1607001: 1607001_create_agent_metadata_job_table.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE SEQUENCE jobagentmetadata_id_seq START WITH 1;
CREATE TABLE jobagentmetadata (
  id              BIGINT DEFAULT nextval('jobagentmetadata_id_seq') PRIMARY KEY,
  jobId           BIGINT UNIQUE NOT NULL,
  metadata        TEXT NOT NULL,
  metadataVersion VARCHAR(50),
  UNIQUE (jobId)
);

ALTER TABLE jobagentmetadata ADD CONSTRAINT fk_jobagentmetadata_jobs FOREIGN KEY (jobId) REFERENCES builds (id)
  ON DELETE CASCADE;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1607001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------


--------------- Fragment begins: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1610001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1610001_add_index_to_modifiedfiles.sql');
COMMIT;


-- Change script: #1610001: 1610001_add_index_to_modifiedfiles.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX CONCURRENTLY idx_modifiedfiles_modification_id ON modifiedfiles(modificationid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1610001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------


--------------- Fragment begins: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701001_remove_gadget_oauth_tables.sql');
COMMIT;


-- Change script: #1701001: 1701001_remove_gadget_oauth_tables.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

DROP TABLE gadgetOauthAuthorizationCodes;
DROP TABLE gadgetOauthAccessTokens;
DROP TABLE gadgetOauthClients;

DROP SEQUENCE gadgetOauthClients_id_seq;
DROP SEQUENCE gadgetOauthAccessTokens_id_seq;
DROP SEQUENCE gadgetOauthAuthorizationCodes_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------


--------------- Fragment begins: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701002_remove_materialproperties_id_seq.sql');
COMMIT;


-- Change script: #1701002: 1701002_remove_materialproperties_id_seq.sql
DROP SEQUENCE IF EXISTS materialProperties_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------


--------------- Fragment begins: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1702001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1702001_remove_build_cause_buffer_table.sql');
COMMIT;


-- Change script: #1702001: 1702001_remove_build_cause_buffer_table.sql
DROP TABLE BuildCauseBuffer;
DROP SEQUENCE buildcausebuffer_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1702001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------


--------------- Fragment begins: #1704001: 1704001_widen_agents_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704001_widen_agents_uuid_column.sql');
COMMIT;


-- Change script: #1704001: 1704001_widen_agents_uuid_column.sql

ALTER TABLE agents ALTER COLUMN uuid TYPE VARCHAR(255);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704001: 1704001_widen_agents_uuid_column.sql ---------------


--------------- Fragment begins: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704002_widen_builds_agent_uuid_column.sql');
COMMIT;


-- Change script: #1704002: 1704002_widen_builds_agent_uuid_column.sql

DROP VIEW _builds;

ALTER TABLE builds ALTER COLUMN agentUuid TYPE VARCHAR(255);

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------


--------------- Fragment begins: #1704003: 1704003_pipeline_state_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704003_pipeline_state_table.sql');
COMMIT;


-- Change script: #1704003: 1704003_pipeline_state_table.sql
CREATE SEQUENCE pipelinestates_id_seq START WITH 1;
CREATE TABLE PipelineStates (
    id                      BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pipelineName            CITEXT NOT NULL,
    locked                  BOOLEAN,
    lockedByPipelineId              BIGINT
);

ALTER TABLE PipelineStates ADD CONSTRAINT unique_pipeline_state UNIQUE (pipelineName);

INSERT INTO PipelineStates (pipelineName, locked, lockedByPipelineId) (select name, locked, id from pipelines where id in (select max(id) from pipelines where locked = true group by name));

DROP VIEW _stages;

CREATE VIEW _stages AS
    SELECT s.*,
      p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, ps.locked, p.naturalOrder
    FROM stages s
    INNER JOIN pipelines p ON p.id = s.pipelineId
    LEFT OUTER JOIN PipelineStates ps on ps.lockedByPipelineId = s.pipelineId;


ALTER TABLE pipelines drop column locked;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704003: 1704003_pipeline_state_table.sql ---------------


--------------- Fragment begins: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704004_pipeline_states_sequence_reset.sql');
COMMIT;


-- Change script: #1704004: 1704004_pipeline_states_sequence_reset.sql
-- As part of 1704003_pipeline_state_table.sql, PipelineStates was incorrectly setup to use plugins_id_seq instead of pipelinestates_id_seq.
-- This migration resets the sequence pipelinestates_id_seq to be the max(id) of PipelineStates, and alters PipelineStates to use the correct sequence.
-- Since sequences are not explicitly defined for H2, a corresponding migration for H2 is not required.

-- This delta is being backported to all releases starting from 17.4 until 17.10 as part of the patch release.

do $$
declare maxid int;
begin
    select max(id) from pipelinestates into maxid;
    IF maxid IS NULL THEN
        maxid = 1;
    END IF;
    execute 'alter SEQUENCE pipelinestates_id_seq RESTART with '|| maxid;
end;
$$ language plpgsql;

ALTER table PipelineStates alter column ID set default nextval('pipelinestates_id_seq');



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------


--------------- Fragment begins: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1708001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1708001_add_hostname_and_ip_to_agents_table.sql');
COMMIT;


-- Change script: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql
ALTER TABLE agents ADD COLUMN hostname VARCHAR(255) DEFAULT NULL;
ALTER TABLE agents ADD COLUMN ipaddress VARCHAR(50) DEFAULT NULL;
CREATE INDEX idx_agent_uuid ON AGENTS(UUID);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1708001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------


--------------- Fragment begins: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801001_remove_regex_generator_type_from_artifact_properties_generator.sql');
COMMIT;


-- Change script: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql
ALTER TABLE artifactpropertiesgenerator DROP COLUMN regex;
ALTER TABLE artifactpropertiesgenerator DROP COLUMN generatorType;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------


--------------- Fragment begins: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql');
COMMIT;


-- Change script: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql
ALTER TABLE artifactplans ADD COLUMN pluggableArtifactConfigJson TEXT DEFAULT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------


--------------- Fragment begins: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801003_remove_environment_variables_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM environmentVariables
-- WHERE environmentVariables.id IN (
--   SELECT environmentVariables.id
--   FROM environmentVariables
--   INNER JOIN builds
--   ON
--     builds.id = environmentVariables.entityId
--   WHERE
--       environmentVariables.entityType = 'Job'
--     AND
--       builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801004_remove_artifact_plans_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPlans
-- WHERE artifactPlans.id IN (
--   SELECT artifactPlans.id
--   FROM artifactPlans
--   INNER JOIN builds
--     ON builds.id = artifactPlans.buildId
--   WHERE
--       artifactPlans.artifactType = 'file'
--     AND
--       builds.state = 'Completed'
-- );




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801005, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801005_remove_artifact_properties_generator_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPropertiesGenerator
-- WHERE ID IN (
--   SELECT artifactPropertiesGenerator.id
--   FROM artifactPropertiesGenerator
--   INNER JOIN builds
--     ON builds.id = artifactPropertiesGenerator.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801005 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801006, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801006_remove_resources_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801006: 1801006_remove_resources_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.
-- DELETE FROM resources
-- WHERE resources.id IN (
--   SELECT resources.id
--   FROM resources
--   INNER JOIN builds
--     ON builds.id = resources.buildId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801006 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801007, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801007_remove_job_agent_metadata_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM jobAgentMetadata
-- WHERE jobAgentMetadata.id IN (
--   SELECT jobAgentMetadata.id
--   FROM jobAgentMetadata
--   INNER JOIN builds
--     ON
--       builds.id = jobAgentMetadata.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801007 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802001_clear_username_and_comment_for_dependency_materials.sql');
COMMIT;


-- Change script: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql
UPDATE
  modifications
SET
  username = null, comment = null
WHERE
    pipelineid IS NOT NULL
  AND
    username = 'Unknown'
  AND
    comment = 'Unknown';



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------


--------------- Fragment begins: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802002_add_index_on_pipelines_name_and_id_column.sql');
COMMIT;


-- Change script: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_pipeline_name_id ON pipelines( name, id );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------


--------------- Fragment begins: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1804001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql');
COMMIT;


-- Change script: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql
ALTER TABLE PIPELINELABELCOUNTS ADD COLUMN caseInsensitivePipelineName CITEXT;
UPDATE PIPELINELABELCOUNTS set caseInsensitivePipelineName = pipelinename;
CREATE INDEX idx_pipelinelabelcounts_caseinsensitivepipelinename ON PIPELINELABELCOUNTS(caseInsensitivePipelineName);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1804001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------


--------------- Fragment begins: #1805001: 1805001_drop_preferred_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1805001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1805001_drop_preferred_table.sql');
COMMIT;


-- Change script: #1805001: 1805001_drop_preferred_table.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- See `230006_make_user_name_case_insensitive.sql`
-- This was a temp table created to make users' login-name case-insensitive
DROP TABLE preffered;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1805001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1805001: 1805001_drop_preferred_table.sql ---------------


--------------- Fragment begins: #1807001: 1807001_data_sharing_settings_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807001_data_sharing_settings_table.sql');
COMMIT;


-- Change script: #1807001: 1807001_data_sharing_settings_table.sql
CREATE SEQUENCE datasharingsettings_id_seq START WITH 1;

CREATE TABLE DataSharingSettings (
  id             BIGINT DEFAULT nextval('datasharingsettings_id_seq') PRIMARY KEY,
  allowSharing        BOOLEAN NOT NULL,
  updatedBy    VARCHAR(255),
  updatedOn    TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807001: 1807001_data_sharing_settings_table.sql ---------------


--------------- Fragment begins: #1807002: 1807002_usage_data_reporting_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807002_usage_data_reporting_table.sql');
COMMIT;


-- Change script: #1807002: 1807002_usage_data_reporting_table.sql
CREATE SEQUENCE usagedatareporting_id_seq START WITH 1;

CREATE TABLE UsageDataReporting (
  id             BIGINT DEFAULT nextval('usagedatareporting_id_seq') PRIMARY KEY,
  serverId       VARCHAR(255) NOT NULL,
  lastReportedAt TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807002: 1807002_usage_data_reporting_table.sql ---------------


--------------- Fragment begins: #1808001: 1808001_remove_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808001_remove_oauth_tables.sql');
COMMIT;


-- Change script: #1808001: 1808001_remove_oauth_tables.sql
DROP TABLE oauthtokens;
DROP SEQUENCE oauthtokens_id_seq;

DROP TABLE oauthauthorizations;
DROP SEQUENCE oauthauthorizations_id_seq;

DROP TABLE oauthclients;
DROP SEQUENCE oauthclients_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808001: 1808001_remove_oauth_tables.sql ---------------


--------------- Fragment begins: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808002_add_filters_and_version_to_pipeline_selections.sql');
COMMIT;


-- Change script: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

ALTER TABLE PipelineSelections ADD COLUMN filters TEXT;
ALTER TABLE PipelineSelections ADD COLUMN version INT DEFAULT 0 NOT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------

]; nested exception is org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at com.thoughtworks.go.postgresql.PostgresqlDatabase.upgrade(PostgresqlDatabase.java:110)
	at com.thoughtworks.go.server.database.DatabaseStrategy.upgrade(DatabaseStrategy.java:59)
	at com.thoughtworks.go.server.util.DatabaseUpgraderDataSourceFactory.upgradeDb(DatabaseUpgraderDataSourceFactory.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:311)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:134)
	... 88 common frames omitted
Caused by: org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [

--------------- Fragment begins: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303001_add_additional_data_field_to_modifications_table.sql');
COMMIT;


-- Change script: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql
ALTER TABLE modifications ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------


--------------- Fragment begins: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303002_add_index_to_builds_on_stageId.sql');
COMMIT;


-- Change script: #1303002: 1303002_add_index_to_builds_on_stageId.sql
CREATE INDEX idx_builds_stageId ON builds(stageId);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------


--------------- Fragment begins: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303003_add_index_to_stages_resources_tables.sql');
COMMIT;


-- Change script: #1303003: 1303003_add_index_to_stages_resources_tables.sql
CREATE INDEX idx_stages_pipelineId ON stages(pipelineid);
CREATE INDEX idx_resources_buildId ON resources(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------


--------------- Fragment begins: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303004_indexes_based_on_purge_tool.sql');
COMMIT;


-- Change script: #1303004: 1303004_indexes_based_on_purge_tool.sql
CREATE INDEX idx_properties_buildId ON properties(buildId);
CREATE INDEX idx_materials_pipelinename ON materials(pipelinename);
CREATE INDEX idx_artifactpropertiesgenerator_jobid ON artifactpropertiesgenerator(jobid);
CREATE INDEX idx_environmentvariables_entitytype ON environmentvariables(entitytype);
CREATE INDEX idx_stageartifactcleanupprohibited_pipelinename ON stageartifactcleanupprohibited(pipelinename);
CREATE INDEX idx_pipelineLabelCounts_pipelinename ON pipelineLabelCounts(pipelinename);




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------


--------------- Fragment begins: #1304001: 1304001_remove_luau_related_entries.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1304001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1304001_remove_luau_related_entries.sql');
COMMIT;


-- Change script: #1304001: 1304001_remove_luau_related_entries.sql
DROP TABLE IF EXISTS luau_groups_users;
DROP TABLE IF EXISTS luau_groups;
DROP TABLE IF EXISTS luaustate;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1304001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1304001: 1304001_remove_luau_related_entries.sql ---------------


--------------- Fragment begins: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1401001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1401001_recreating_trigger_because_of_cruise_to_go_change.sql');
COMMIT;


-- Change script: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql
SELECT (1);


UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1401001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------


--------------- Fragment begins: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403001_fix_null_artifacttype_on_artifactplans_table.sql');
COMMIT;


-- Change script: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql
UPDATE ARTIFACTPLANS SET ARTIFACTTYPE='file' WHERE ARTIFACTTYPE IS NULL;
COMMIT;

-- No undo as adding default value to mandatory field



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------


--------------- Fragment begins: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql');
COMMIT;


-- Change script: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

alter table builds add column runMultipleInstance boolean default false;

DROP VIEW _builds;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------


--------------- Fragment begins: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql');
COMMIT;


-- Change script: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelineselections RENAME COLUMN unselectedpipelines TO selections;

ALTER TABLE pipelineselections ADD COLUMN isblacklist BOOLEAN DEFAULT true;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------


--------------- Fragment begins: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501002_add_comment_column_to_pipelines.sql');
COMMIT;


-- Change script: #1501002: 1501002_add_comment_column_to_pipelines.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelines ADD COLUMN comment TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------


--------------- Fragment begins: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501003_add_additional_data_field_to_materials_table.sql');
COMMIT;


-- Change script: #1501003: 1501003_add_additional_data_field_to_materials_table.sql
ALTER TABLE materials ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------


--------------- Fragment begins: #1502001: 1502001_create_plugins_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1502001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1502001_create_plugins_table.sql');
COMMIT;


-- Change script: #1502001: 1502001_create_plugins_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE plugins_id_seq START WITH 1;
CREATE TABLE plugins (
    id              BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pluginId        VARCHAR(255) Not NULL,
    configuration   TEXT,
    UNIQUE (pluginId)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1502001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1502001: 1502001_create_plugins_table.sql ---------------


--------------- Fragment begins: #1503001: 1503001_remove_licensing_from_users.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503001_remove_licensing_from_users.sql');
COMMIT;


-- Change script: #1503001: 1503001_remove_licensing_from_users.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE users DROP COLUMN disableLicenseExpiryWarning;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503001: 1503001_remove_licensing_from_users.sql ---------------


--------------- Fragment begins: #1503002: 1503002_create_version_infos_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503002_create_version_infos_table.sql');
COMMIT;


-- Change script: #1503002: 1503002_create_version_infos_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2015 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE versioninfos_id_seq START WITH 1;
CREATE TABLE versioninfos (
    id                      BIGINT DEFAULT nextval('versioninfos_id_seq') PRIMARY KEY,
    componentName           VARCHAR(255) Not NULL,
    installedVersion        VARCHAR(100) Not NULL,
    latestVersion           VARCHAR(50),
    latestVersionUpdatedAt  TIMESTAMP,
    UNIQUE (componentName)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503002: 1503002_create_version_infos_table.sql ---------------


--------------- Fragment begins: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606001_add_index_to_buildstatetransitions.sql');
COMMIT;


-- Change script: #1606001: 1606001_add_index_to_buildstatetransitions.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_buildstatetransition_build_id ON buildstatetransitions(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------


--------------- Fragment begins: #1606002: 1606002_add_index_to_artifactplans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606002_add_index_to_artifactplans.sql');
COMMIT;


-- Change script: #1606002: 1606002_add_index_to_artifactplans.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_artifactplan_build_id ON artifactplans(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606002: 1606002_add_index_to_artifactplans.sql ---------------


--------------- Fragment begins: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1607001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1607001_create_agent_metadata_job_table.sql');
COMMIT;


-- Change script: #1607001: 1607001_create_agent_metadata_job_table.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE SEQUENCE jobagentmetadata_id_seq START WITH 1;
CREATE TABLE jobagentmetadata (
  id              BIGINT DEFAULT nextval('jobagentmetadata_id_seq') PRIMARY KEY,
  jobId           BIGINT UNIQUE NOT NULL,
  metadata        TEXT NOT NULL,
  metadataVersion VARCHAR(50),
  UNIQUE (jobId)
);

ALTER TABLE jobagentmetadata ADD CONSTRAINT fk_jobagentmetadata_jobs FOREIGN KEY (jobId) REFERENCES builds (id)
  ON DELETE CASCADE;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1607001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------


--------------- Fragment begins: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1610001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1610001_add_index_to_modifiedfiles.sql');
COMMIT;


-- Change script: #1610001: 1610001_add_index_to_modifiedfiles.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX CONCURRENTLY idx_modifiedfiles_modification_id ON modifiedfiles(modificationid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1610001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------


--------------- Fragment begins: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701001_remove_gadget_oauth_tables.sql');
COMMIT;


-- Change script: #1701001: 1701001_remove_gadget_oauth_tables.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

DROP TABLE gadgetOauthAuthorizationCodes;
DROP TABLE gadgetOauthAccessTokens;
DROP TABLE gadgetOauthClients;

DROP SEQUENCE gadgetOauthClients_id_seq;
DROP SEQUENCE gadgetOauthAccessTokens_id_seq;
DROP SEQUENCE gadgetOauthAuthorizationCodes_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------


--------------- Fragment begins: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701002_remove_materialproperties_id_seq.sql');
COMMIT;


-- Change script: #1701002: 1701002_remove_materialproperties_id_seq.sql
DROP SEQUENCE IF EXISTS materialProperties_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------


--------------- Fragment begins: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1702001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1702001_remove_build_cause_buffer_table.sql');
COMMIT;


-- Change script: #1702001: 1702001_remove_build_cause_buffer_table.sql
DROP TABLE BuildCauseBuffer;
DROP SEQUENCE buildcausebuffer_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1702001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------


--------------- Fragment begins: #1704001: 1704001_widen_agents_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704001_widen_agents_uuid_column.sql');
COMMIT;


-- Change script: #1704001: 1704001_widen_agents_uuid_column.sql

ALTER TABLE agents ALTER COLUMN uuid TYPE VARCHAR(255);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704001: 1704001_widen_agents_uuid_column.sql ---------------


--------------- Fragment begins: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704002_widen_builds_agent_uuid_column.sql');
COMMIT;


-- Change script: #1704002: 1704002_widen_builds_agent_uuid_column.sql

DROP VIEW _builds;

ALTER TABLE builds ALTER COLUMN agentUuid TYPE VARCHAR(255);

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------


--------------- Fragment begins: #1704003: 1704003_pipeline_state_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704003_pipeline_state_table.sql');
COMMIT;


-- Change script: #1704003: 1704003_pipeline_state_table.sql
CREATE SEQUENCE pipelinestates_id_seq START WITH 1;
CREATE TABLE PipelineStates (
    id                      BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pipelineName            CITEXT NOT NULL,
    locked                  BOOLEAN,
    lockedByPipelineId              BIGINT
);

ALTER TABLE PipelineStates ADD CONSTRAINT unique_pipeline_state UNIQUE (pipelineName);

INSERT INTO PipelineStates (pipelineName, locked, lockedByPipelineId) (select name, locked, id from pipelines where id in (select max(id) from pipelines where locked = true group by name));

DROP VIEW _stages;

CREATE VIEW _stages AS
    SELECT s.*,
      p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, ps.locked, p.naturalOrder
    FROM stages s
    INNER JOIN pipelines p ON p.id = s.pipelineId
    LEFT OUTER JOIN PipelineStates ps on ps.lockedByPipelineId = s.pipelineId;


ALTER TABLE pipelines drop column locked;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704003: 1704003_pipeline_state_table.sql ---------------


--------------- Fragment begins: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704004_pipeline_states_sequence_reset.sql');
COMMIT;


-- Change script: #1704004: 1704004_pipeline_states_sequence_reset.sql
-- As part of 1704003_pipeline_state_table.sql, PipelineStates was incorrectly setup to use plugins_id_seq instead of pipelinestates_id_seq.
-- This migration resets the sequence pipelinestates_id_seq to be the max(id) of PipelineStates, and alters PipelineStates to use the correct sequence.
-- Since sequences are not explicitly defined for H2, a corresponding migration for H2 is not required.

-- This delta is being backported to all releases starting from 17.4 until 17.10 as part of the patch release.

do $$
declare maxid int;
begin
    select max(id) from pipelinestates into maxid;
    IF maxid IS NULL THEN
        maxid = 1;
    END IF;
    execute 'alter SEQUENCE pipelinestates_id_seq RESTART with '|| maxid;
end;
$$ language plpgsql;

ALTER table PipelineStates alter column ID set default nextval('pipelinestates_id_seq');



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------


--------------- Fragment begins: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1708001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1708001_add_hostname_and_ip_to_agents_table.sql');
COMMIT;


-- Change script: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql
ALTER TABLE agents ADD COLUMN hostname VARCHAR(255) DEFAULT NULL;
ALTER TABLE agents ADD COLUMN ipaddress VARCHAR(50) DEFAULT NULL;
CREATE INDEX idx_agent_uuid ON AGENTS(UUID);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1708001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------


--------------- Fragment begins: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801001_remove_regex_generator_type_from_artifact_properties_generator.sql');
COMMIT;


-- Change script: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql
ALTER TABLE artifactpropertiesgenerator DROP COLUMN regex;
ALTER TABLE artifactpropertiesgenerator DROP COLUMN generatorType;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------


--------------- Fragment begins: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql');
COMMIT;


-- Change script: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql
ALTER TABLE artifactplans ADD COLUMN pluggableArtifactConfigJson TEXT DEFAULT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------


--------------- Fragment begins: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801003_remove_environment_variables_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM environmentVariables
-- WHERE environmentVariables.id IN (
--   SELECT environmentVariables.id
--   FROM environmentVariables
--   INNER JOIN builds
--   ON
--     builds.id = environmentVariables.entityId
--   WHERE
--       environmentVariables.entityType = 'Job'
--     AND
--       builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801004_remove_artifact_plans_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPlans
-- WHERE artifactPlans.id IN (
--   SELECT artifactPlans.id
--   FROM artifactPlans
--   INNER JOIN builds
--     ON builds.id = artifactPlans.buildId
--   WHERE
--       artifactPlans.artifactType = 'file'
--     AND
--       builds.state = 'Completed'
-- );




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801005, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801005_remove_artifact_properties_generator_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPropertiesGenerator
-- WHERE ID IN (
--   SELECT artifactPropertiesGenerator.id
--   FROM artifactPropertiesGenerator
--   INNER JOIN builds
--     ON builds.id = artifactPropertiesGenerator.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801005 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801006, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801006_remove_resources_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801006: 1801006_remove_resources_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.
-- DELETE FROM resources
-- WHERE resources.id IN (
--   SELECT resources.id
--   FROM resources
--   INNER JOIN builds
--     ON builds.id = resources.buildId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801006 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801007, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801007_remove_job_agent_metadata_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM jobAgentMetadata
-- WHERE jobAgentMetadata.id IN (
--   SELECT jobAgentMetadata.id
--   FROM jobAgentMetadata
--   INNER JOIN builds
--     ON
--       builds.id = jobAgentMetadata.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801007 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802001_clear_username_and_comment_for_dependency_materials.sql');
COMMIT;


-- Change script: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql
UPDATE
  modifications
SET
  username = null, comment = null
WHERE
    pipelineid IS NOT NULL
  AND
    username = 'Unknown'
  AND
    comment = 'Unknown';



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------


--------------- Fragment begins: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802002_add_index_on_pipelines_name_and_id_column.sql');
COMMIT;


-- Change script: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_pipeline_name_id ON pipelines( name, id );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------


--------------- Fragment begins: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1804001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql');
COMMIT;


-- Change script: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql
ALTER TABLE PIPELINELABELCOUNTS ADD COLUMN caseInsensitivePipelineName CITEXT;
UPDATE PIPELINELABELCOUNTS set caseInsensitivePipelineName = pipelinename;
CREATE INDEX idx_pipelinelabelcounts_caseinsensitivepipelinename ON PIPELINELABELCOUNTS(caseInsensitivePipelineName);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1804001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------


--------------- Fragment begins: #1805001: 1805001_drop_preferred_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1805001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1805001_drop_preferred_table.sql');
COMMIT;


-- Change script: #1805001: 1805001_drop_preferred_table.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- See `230006_make_user_name_case_insensitive.sql`
-- This was a temp table created to make users' login-name case-insensitive
DROP TABLE preffered;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1805001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1805001: 1805001_drop_preferred_table.sql ---------------


--------------- Fragment begins: #1807001: 1807001_data_sharing_settings_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807001_data_sharing_settings_table.sql');
COMMIT;


-- Change script: #1807001: 1807001_data_sharing_settings_table.sql
CREATE SEQUENCE datasharingsettings_id_seq START WITH 1;

CREATE TABLE DataSharingSettings (
  id             BIGINT DEFAULT nextval('datasharingsettings_id_seq') PRIMARY KEY,
  allowSharing        BOOLEAN NOT NULL,
  updatedBy    VARCHAR(255),
  updatedOn    TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807001: 1807001_data_sharing_settings_table.sql ---------------


--------------- Fragment begins: #1807002: 1807002_usage_data_reporting_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807002_usage_data_reporting_table.sql');
COMMIT;


-- Change script: #1807002: 1807002_usage_data_reporting_table.sql
CREATE SEQUENCE usagedatareporting_id_seq START WITH 1;

CREATE TABLE UsageDataReporting (
  id             BIGINT DEFAULT nextval('usagedatareporting_id_seq') PRIMARY KEY,
  serverId       VARCHAR(255) NOT NULL,
  lastReportedAt TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807002: 1807002_usage_data_reporting_table.sql ---------------


--------------- Fragment begins: #1808001: 1808001_remove_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808001_remove_oauth_tables.sql');
COMMIT;


-- Change script: #1808001: 1808001_remove_oauth_tables.sql
DROP TABLE oauthtokens;
DROP SEQUENCE oauthtokens_id_seq;

DROP TABLE oauthauthorizations;
DROP SEQUENCE oauthauthorizations_id_seq;

DROP TABLE oauthclients;
DROP SEQUENCE oauthclients_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808001: 1808001_remove_oauth_tables.sql ---------------


--------------- Fragment begins: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808002_add_filters_and_version_to_pipeline_selections.sql');
COMMIT;


-- Change script: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

ALTER TABLE PipelineSelections ADD COLUMN filters TEXT;
ALTER TABLE PipelineSelections ADD COLUMN version INT DEFAULT 0 NOT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------

]; nested exception is org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:230)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:419)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:445)
	at com.thoughtworks.go.postgresql.PostgresqlDatabase.upgrade(PostgresqlDatabase.java:107)
	... 97 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2157)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1886)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:255)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:555)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:403)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:395)
	at org.apache.commons.dbcp.DelegatingStatement.execute(DelegatingStatement.java:264)
	at org.apache.commons.dbcp.DelegatingStatement.execute(DelegatingStatement.java:264)
	at org.springframework.jdbc.core.JdbcTemplate$1ExecuteStatementCallback.doInStatement(JdbcTemplate.java:436)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:408)
	... 99 common frames omitted
2018-12-18 11:15:25,373 WARN  [main] WebAppContext:554 - Failed startup of context o.e.j.w.WebAppContext@2beee7ff{/go,file:///go-working-dir/work/jetty-0.0.0.0-8153-cruise.war-_go-any-/webapp/,UNAVAILABLE}{cruise.war}
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stagesQuery' defined in ServletContext resource [/WEB-INF/applicationContext-shine-server.xml]: Cannot resolve reference to bean 'lazyStageGraphLoader' while setting constructor argument; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'lazyStageGraphLoader' defined in file [/go-working-dir/work/jetty-0.0.0.0-8153-cruise.war-_go-any-/webapp/WEB-INF/classes/com/thoughtworks/studios/shine/cruise/stage/details/LazyStageGraphLoader.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlMapClient' defined in ServletContext resource [/WEB-INF/applicationContext-dataLocalAccess.xml]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'databaseUpgraderDataSourceFactory': Invocation of init method failed; nested exception is java.lang.RuntimeException: org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [

--------------- Fragment begins: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303001_add_additional_data_field_to_modifications_table.sql');
COMMIT;


-- Change script: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql
ALTER TABLE modifications ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------


--------------- Fragment begins: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303002_add_index_to_builds_on_stageId.sql');
COMMIT;


-- Change script: #1303002: 1303002_add_index_to_builds_on_stageId.sql
CREATE INDEX idx_builds_stageId ON builds(stageId);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------


--------------- Fragment begins: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303003_add_index_to_stages_resources_tables.sql');
COMMIT;


-- Change script: #1303003: 1303003_add_index_to_stages_resources_tables.sql
CREATE INDEX idx_stages_pipelineId ON stages(pipelineid);
CREATE INDEX idx_resources_buildId ON resources(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------


--------------- Fragment begins: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303004_indexes_based_on_purge_tool.sql');
COMMIT;


-- Change script: #1303004: 1303004_indexes_based_on_purge_tool.sql
CREATE INDEX idx_properties_buildId ON properties(buildId);
CREATE INDEX idx_materials_pipelinename ON materials(pipelinename);
CREATE INDEX idx_artifactpropertiesgenerator_jobid ON artifactpropertiesgenerator(jobid);
CREATE INDEX idx_environmentvariables_entitytype ON environmentvariables(entitytype);
CREATE INDEX idx_stageartifactcleanupprohibited_pipelinename ON stageartifactcleanupprohibited(pipelinename);
CREATE INDEX idx_pipelineLabelCounts_pipelinename ON pipelineLabelCounts(pipelinename);




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------


--------------- Fragment begins: #1304001: 1304001_remove_luau_related_entries.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1304001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1304001_remove_luau_related_entries.sql');
COMMIT;


-- Change script: #1304001: 1304001_remove_luau_related_entries.sql
DROP TABLE IF EXISTS luau_groups_users;
DROP TABLE IF EXISTS luau_groups;
DROP TABLE IF EXISTS luaustate;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1304001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1304001: 1304001_remove_luau_related_entries.sql ---------------


--------------- Fragment begins: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1401001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1401001_recreating_trigger_because_of_cruise_to_go_change.sql');
COMMIT;


-- Change script: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql
SELECT (1);


UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1401001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------


--------------- Fragment begins: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403001_fix_null_artifacttype_on_artifactplans_table.sql');
COMMIT;


-- Change script: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql
UPDATE ARTIFACTPLANS SET ARTIFACTTYPE='file' WHERE ARTIFACTTYPE IS NULL;
COMMIT;

-- No undo as adding default value to mandatory field



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------


--------------- Fragment begins: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql');
COMMIT;


-- Change script: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

alter table builds add column runMultipleInstance boolean default false;

DROP VIEW _builds;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------


--------------- Fragment begins: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql');
COMMIT;


-- Change script: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelineselections RENAME COLUMN unselectedpipelines TO selections;

ALTER TABLE pipelineselections ADD COLUMN isblacklist BOOLEAN DEFAULT true;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------


--------------- Fragment begins: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501002_add_comment_column_to_pipelines.sql');
COMMIT;


-- Change script: #1501002: 1501002_add_comment_column_to_pipelines.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelines ADD COLUMN comment TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------


--------------- Fragment begins: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501003_add_additional_data_field_to_materials_table.sql');
COMMIT;


-- Change script: #1501003: 1501003_add_additional_data_field_to_materials_table.sql
ALTER TABLE materials ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------


--------------- Fragment begins: #1502001: 1502001_create_plugins_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1502001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1502001_create_plugins_table.sql');
COMMIT;


-- Change script: #1502001: 1502001_create_plugins_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE plugins_id_seq START WITH 1;
CREATE TABLE plugins (
    id              BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pluginId        VARCHAR(255) Not NULL,
    configuration   TEXT,
    UNIQUE (pluginId)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1502001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1502001: 1502001_create_plugins_table.sql ---------------


--------------- Fragment begins: #1503001: 1503001_remove_licensing_from_users.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503001_remove_licensing_from_users.sql');
COMMIT;


-- Change script: #1503001: 1503001_remove_licensing_from_users.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE users DROP COLUMN disableLicenseExpiryWarning;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503001: 1503001_remove_licensing_from_users.sql ---------------


--------------- Fragment begins: #1503002: 1503002_create_version_infos_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503002_create_version_infos_table.sql');
COMMIT;


-- Change script: #1503002: 1503002_create_version_infos_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2015 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE versioninfos_id_seq START WITH 1;
CREATE TABLE versioninfos (
    id                      BIGINT DEFAULT nextval('versioninfos_id_seq') PRIMARY KEY,
    componentName           VARCHAR(255) Not NULL,
    installedVersion        VARCHAR(100) Not NULL,
    latestVersion           VARCHAR(50),
    latestVersionUpdatedAt  TIMESTAMP,
    UNIQUE (componentName)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503002: 1503002_create_version_infos_table.sql ---------------


--------------- Fragment begins: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606001_add_index_to_buildstatetransitions.sql');
COMMIT;


-- Change script: #1606001: 1606001_add_index_to_buildstatetransitions.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_buildstatetransition_build_id ON buildstatetransitions(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------


--------------- Fragment begins: #1606002: 1606002_add_index_to_artifactplans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606002_add_index_to_artifactplans.sql');
COMMIT;


-- Change script: #1606002: 1606002_add_index_to_artifactplans.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_artifactplan_build_id ON artifactplans(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606002: 1606002_add_index_to_artifactplans.sql ---------------


--------------- Fragment begins: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1607001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1607001_create_agent_metadata_job_table.sql');
COMMIT;


-- Change script: #1607001: 1607001_create_agent_metadata_job_table.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE SEQUENCE jobagentmetadata_id_seq START WITH 1;
CREATE TABLE jobagentmetadata (
  id              BIGINT DEFAULT nextval('jobagentmetadata_id_seq') PRIMARY KEY,
  jobId           BIGINT UNIQUE NOT NULL,
  metadata        TEXT NOT NULL,
  metadataVersion VARCHAR(50),
  UNIQUE (jobId)
);

ALTER TABLE jobagentmetadata ADD CONSTRAINT fk_jobagentmetadata_jobs FOREIGN KEY (jobId) REFERENCES builds (id)
  ON DELETE CASCADE;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1607001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------


--------------- Fragment begins: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1610001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1610001_add_index_to_modifiedfiles.sql');
COMMIT;


-- Change script: #1610001: 1610001_add_index_to_modifiedfiles.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX CONCURRENTLY idx_modifiedfiles_modification_id ON modifiedfiles(modificationid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1610001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------


--------------- Fragment begins: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701001_remove_gadget_oauth_tables.sql');
COMMIT;


-- Change script: #1701001: 1701001_remove_gadget_oauth_tables.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

DROP TABLE gadgetOauthAuthorizationCodes;
DROP TABLE gadgetOauthAccessTokens;
DROP TABLE gadgetOauthClients;

DROP SEQUENCE gadgetOauthClients_id_seq;
DROP SEQUENCE gadgetOauthAccessTokens_id_seq;
DROP SEQUENCE gadgetOauthAuthorizationCodes_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------


--------------- Fragment begins: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701002_remove_materialproperties_id_seq.sql');
COMMIT;


-- Change script: #1701002: 1701002_remove_materialproperties_id_seq.sql
DROP SEQUENCE IF EXISTS materialProperties_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------


--------------- Fragment begins: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1702001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1702001_remove_build_cause_buffer_table.sql');
COMMIT;


-- Change script: #1702001: 1702001_remove_build_cause_buffer_table.sql
DROP TABLE BuildCauseBuffer;
DROP SEQUENCE buildcausebuffer_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1702001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------


--------------- Fragment begins: #1704001: 1704001_widen_agents_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704001_widen_agents_uuid_column.sql');
COMMIT;


-- Change script: #1704001: 1704001_widen_agents_uuid_column.sql

ALTER TABLE agents ALTER COLUMN uuid TYPE VARCHAR(255);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704001: 1704001_widen_agents_uuid_column.sql ---------------


--------------- Fragment begins: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704002_widen_builds_agent_uuid_column.sql');
COMMIT;


-- Change script: #1704002: 1704002_widen_builds_agent_uuid_column.sql

DROP VIEW _builds;

ALTER TABLE builds ALTER COLUMN agentUuid TYPE VARCHAR(255);

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------


--------------- Fragment begins: #1704003: 1704003_pipeline_state_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704003_pipeline_state_table.sql');
COMMIT;


-- Change script: #1704003: 1704003_pipeline_state_table.sql
CREATE SEQUENCE pipelinestates_id_seq START WITH 1;
CREATE TABLE PipelineStates (
    id                      BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pipelineName            CITEXT NOT NULL,
    locked                  BOOLEAN,
    lockedByPipelineId              BIGINT
);

ALTER TABLE PipelineStates ADD CONSTRAINT unique_pipeline_state UNIQUE (pipelineName);

INSERT INTO PipelineStates (pipelineName, locked, lockedByPipelineId) (select name, locked, id from pipelines where id in (select max(id) from pipelines where locked = true group by name));

DROP VIEW _stages;

CREATE VIEW _stages AS
    SELECT s.*,
      p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, ps.locked, p.naturalOrder
    FROM stages s
    INNER JOIN pipelines p ON p.id = s.pipelineId
    LEFT OUTER JOIN PipelineStates ps on ps.lockedByPipelineId = s.pipelineId;


ALTER TABLE pipelines drop column locked;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704003: 1704003_pipeline_state_table.sql ---------------


--------------- Fragment begins: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704004_pipeline_states_sequence_reset.sql');
COMMIT;


-- Change script: #1704004: 1704004_pipeline_states_sequence_reset.sql
-- As part of 1704003_pipeline_state_table.sql, PipelineStates was incorrectly setup to use plugins_id_seq instead of pipelinestates_id_seq.
-- This migration resets the sequence pipelinestates_id_seq to be the max(id) of PipelineStates, and alters PipelineStates to use the correct sequence.
-- Since sequences are not explicitly defined for H2, a corresponding migration for H2 is not required.

-- This delta is being backported to all releases starting from 17.4 until 17.10 as part of the patch release.

do $$
declare maxid int;
begin
    select max(id) from pipelinestates into maxid;
    IF maxid IS NULL THEN
        maxid = 1;
    END IF;
    execute 'alter SEQUENCE pipelinestates_id_seq RESTART with '|| maxid;
end;
$$ language plpgsql;

ALTER table PipelineStates alter column ID set default nextval('pipelinestates_id_seq');



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------


--------------- Fragment begins: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1708001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1708001_add_hostname_and_ip_to_agents_table.sql');
COMMIT;


-- Change script: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql
ALTER TABLE agents ADD COLUMN hostname VARCHAR(255) DEFAULT NULL;
ALTER TABLE agents ADD COLUMN ipaddress VARCHAR(50) DEFAULT NULL;
CREATE INDEX idx_agent_uuid ON AGENTS(UUID);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1708001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------


--------------- Fragment begins: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801001_remove_regex_generator_type_from_artifact_properties_generator.sql');
COMMIT;


-- Change script: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql
ALTER TABLE artifactpropertiesgenerator DROP COLUMN regex;
ALTER TABLE artifactpropertiesgenerator DROP COLUMN generatorType;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------


--------------- Fragment begins: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql');
COMMIT;


-- Change script: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql
ALTER TABLE artifactplans ADD COLUMN pluggableArtifactConfigJson TEXT DEFAULT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------


--------------- Fragment begins: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801003_remove_environment_variables_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM environmentVariables
-- WHERE environmentVariables.id IN (
--   SELECT environmentVariables.id
--   FROM environmentVariables
--   INNER JOIN builds
--   ON
--     builds.id = environmentVariables.entityId
--   WHERE
--       environmentVariables.entityType = 'Job'
--     AND
--       builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801004_remove_artifact_plans_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPlans
-- WHERE artifactPlans.id IN (
--   SELECT artifactPlans.id
--   FROM artifactPlans
--   INNER JOIN builds
--     ON builds.id = artifactPlans.buildId
--   WHERE
--       artifactPlans.artifactType = 'file'
--     AND
--       builds.state = 'Completed'
-- );




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801005, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801005_remove_artifact_properties_generator_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPropertiesGenerator
-- WHERE ID IN (
--   SELECT artifactPropertiesGenerator.id
--   FROM artifactPropertiesGenerator
--   INNER JOIN builds
--     ON builds.id = artifactPropertiesGenerator.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801005 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801006, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801006_remove_resources_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801006: 1801006_remove_resources_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.
-- DELETE FROM resources
-- WHERE resources.id IN (
--   SELECT resources.id
--   FROM resources
--   INNER JOIN builds
--     ON builds.id = resources.buildId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801006 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801007, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801007_remove_job_agent_metadata_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM jobAgentMetadata
-- WHERE jobAgentMetadata.id IN (
--   SELECT jobAgentMetadata.id
--   FROM jobAgentMetadata
--   INNER JOIN builds
--     ON
--       builds.id = jobAgentMetadata.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801007 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802001_clear_username_and_comment_for_dependency_materials.sql');
COMMIT;


-- Change script: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql
UPDATE
  modifications
SET
  username = null, comment = null
WHERE
    pipelineid IS NOT NULL
  AND
    username = 'Unknown'
  AND
    comment = 'Unknown';



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------


--------------- Fragment begins: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802002_add_index_on_pipelines_name_and_id_column.sql');
COMMIT;


-- Change script: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_pipeline_name_id ON pipelines( name, id );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------


--------------- Fragment begins: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1804001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql');
COMMIT;


-- Change script: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql
ALTER TABLE PIPELINELABELCOUNTS ADD COLUMN caseInsensitivePipelineName CITEXT;
UPDATE PIPELINELABELCOUNTS set caseInsensitivePipelineName = pipelinename;
CREATE INDEX idx_pipelinelabelcounts_caseinsensitivepipelinename ON PIPELINELABELCOUNTS(caseInsensitivePipelineName);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1804001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------


--------------- Fragment begins: #1805001: 1805001_drop_preferred_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1805001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1805001_drop_preferred_table.sql');
COMMIT;


-- Change script: #1805001: 1805001_drop_preferred_table.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- See `230006_make_user_name_case_insensitive.sql`
-- This was a temp table created to make users' login-name case-insensitive
DROP TABLE preffered;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1805001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1805001: 1805001_drop_preferred_table.sql ---------------


--------------- Fragment begins: #1807001: 1807001_data_sharing_settings_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807001_data_sharing_settings_table.sql');
COMMIT;


-- Change script: #1807001: 1807001_data_sharing_settings_table.sql
CREATE SEQUENCE datasharingsettings_id_seq START WITH 1;

CREATE TABLE DataSharingSettings (
  id             BIGINT DEFAULT nextval('datasharingsettings_id_seq') PRIMARY KEY,
  allowSharing        BOOLEAN NOT NULL,
  updatedBy    VARCHAR(255),
  updatedOn    TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807001: 1807001_data_sharing_settings_table.sql ---------------


--------------- Fragment begins: #1807002: 1807002_usage_data_reporting_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807002_usage_data_reporting_table.sql');
COMMIT;


-- Change script: #1807002: 1807002_usage_data_reporting_table.sql
CREATE SEQUENCE usagedatareporting_id_seq START WITH 1;

CREATE TABLE UsageDataReporting (
  id             BIGINT DEFAULT nextval('usagedatareporting_id_seq') PRIMARY KEY,
  serverId       VARCHAR(255) NOT NULL,
  lastReportedAt TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807002: 1807002_usage_data_reporting_table.sql ---------------


--------------- Fragment begins: #1808001: 1808001_remove_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808001_remove_oauth_tables.sql');
COMMIT;


-- Change script: #1808001: 1808001_remove_oauth_tables.sql
DROP TABLE oauthtokens;
DROP SEQUENCE oauthtokens_id_seq;

DROP TABLE oauthauthorizations;
DROP SEQUENCE oauthauthorizations_id_seq;

DROP TABLE oauthclients;
DROP SEQUENCE oauthclients_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808001: 1808001_remove_oauth_tables.sql ---------------


--------------- Fragment begins: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808002_add_filters_and_version_to_pipeline_selections.sql');
COMMIT;


-- Change script: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

ALTER TABLE PipelineSelections ADD COLUMN filters TEXT;
ALTER TABLE PipelineSelections ADD COLUMN version INT DEFAULT 0 NOT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------

]; nested exception is org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:359)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:634)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:145)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1100)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:443)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:325)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:890)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:532)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:853)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:344)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1515)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1477)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:785)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:261)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:41)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:188)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:150)
	at com.thoughtworks.go.server.Jetty9Server.startHandlers(Jetty9Server.java:187)
	at com.thoughtworks.go.server.Jetty9Server.start(Jetty9Server.java:137)
	at com.thoughtworks.go.server.GoServer.startServer(GoServer.java:72)
	at com.thoughtworks.go.server.GoServer.go(GoServer.java:64)
	at com.thoughtworks.go.server.util.GoLauncher.main(GoLauncher.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.thoughtworks.gocd.Boot.run(Boot.java:111)
	at com.thoughtworks.gocd.Boot.main(Boot.java:57)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'lazyStageGraphLoader' defined in file [/go-working-dir/work/jetty-0.0.0.0-8153-cruise.war-_go-any-/webapp/WEB-INF/classes/com/thoughtworks/studios/shine/cruise/stage/details/LazyStageGraphLoader.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlMapClient' defined in ServletContext resource [/WEB-INF/applicationContext-dataLocalAccess.xml]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'databaseUpgraderDataSourceFactory': Invocation of init method failed; nested exception is java.lang.RuntimeException: org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [

--------------- Fragment begins: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303001_add_additional_data_field_to_modifications_table.sql');
COMMIT;


-- Change script: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql
ALTER TABLE modifications ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------


--------------- Fragment begins: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303002_add_index_to_builds_on_stageId.sql');
COMMIT;


-- Change script: #1303002: 1303002_add_index_to_builds_on_stageId.sql
CREATE INDEX idx_builds_stageId ON builds(stageId);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------


--------------- Fragment begins: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303003_add_index_to_stages_resources_tables.sql');
COMMIT;


-- Change script: #1303003: 1303003_add_index_to_stages_resources_tables.sql
CREATE INDEX idx_stages_pipelineId ON stages(pipelineid);
CREATE INDEX idx_resources_buildId ON resources(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------


--------------- Fragment begins: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303004_indexes_based_on_purge_tool.sql');
COMMIT;


-- Change script: #1303004: 1303004_indexes_based_on_purge_tool.sql
CREATE INDEX idx_properties_buildId ON properties(buildId);
CREATE INDEX idx_materials_pipelinename ON materials(pipelinename);
CREATE INDEX idx_artifactpropertiesgenerator_jobid ON artifactpropertiesgenerator(jobid);
CREATE INDEX idx_environmentvariables_entitytype ON environmentvariables(entitytype);
CREATE INDEX idx_stageartifactcleanupprohibited_pipelinename ON stageartifactcleanupprohibited(pipelinename);
CREATE INDEX idx_pipelineLabelCounts_pipelinename ON pipelineLabelCounts(pipelinename);




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------


--------------- Fragment begins: #1304001: 1304001_remove_luau_related_entries.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1304001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1304001_remove_luau_related_entries.sql');
COMMIT;


-- Change script: #1304001: 1304001_remove_luau_related_entries.sql
DROP TABLE IF EXISTS luau_groups_users;
DROP TABLE IF EXISTS luau_groups;
DROP TABLE IF EXISTS luaustate;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1304001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1304001: 1304001_remove_luau_related_entries.sql ---------------


--------------- Fragment begins: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1401001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1401001_recreating_trigger_because_of_cruise_to_go_change.sql');
COMMIT;


-- Change script: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql
SELECT (1);


UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1401001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------


--------------- Fragment begins: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403001_fix_null_artifacttype_on_artifactplans_table.sql');
COMMIT;


-- Change script: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql
UPDATE ARTIFACTPLANS SET ARTIFACTTYPE='file' WHERE ARTIFACTTYPE IS NULL;
COMMIT;

-- No undo as adding default value to mandatory field



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------


--------------- Fragment begins: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql');
COMMIT;


-- Change script: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

alter table builds add column runMultipleInstance boolean default false;

DROP VIEW _builds;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------


--------------- Fragment begins: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql');
COMMIT;


-- Change script: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelineselections RENAME COLUMN unselectedpipelines TO selections;

ALTER TABLE pipelineselections ADD COLUMN isblacklist BOOLEAN DEFAULT true;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------


--------------- Fragment begins: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501002_add_comment_column_to_pipelines.sql');
COMMIT;


-- Change script: #1501002: 1501002_add_comment_column_to_pipelines.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelines ADD COLUMN comment TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------


--------------- Fragment begins: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501003_add_additional_data_field_to_materials_table.sql');
COMMIT;


-- Change script: #1501003: 1501003_add_additional_data_field_to_materials_table.sql
ALTER TABLE materials ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------


--------------- Fragment begins: #1502001: 1502001_create_plugins_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1502001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1502001_create_plugins_table.sql');
COMMIT;


-- Change script: #1502001: 1502001_create_plugins_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE plugins_id_seq START WITH 1;
CREATE TABLE plugins (
    id              BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pluginId        VARCHAR(255) Not NULL,
    configuration   TEXT,
    UNIQUE (pluginId)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1502001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1502001: 1502001_create_plugins_table.sql ---------------


--------------- Fragment begins: #1503001: 1503001_remove_licensing_from_users.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503001_remove_licensing_from_users.sql');
COMMIT;


-- Change script: #1503001: 1503001_remove_licensing_from_users.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE users DROP COLUMN disableLicenseExpiryWarning;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503001: 1503001_remove_licensing_from_users.sql ---------------


--------------- Fragment begins: #1503002: 1503002_create_version_infos_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503002_create_version_infos_table.sql');
COMMIT;


-- Change script: #1503002: 1503002_create_version_infos_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2015 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE versioninfos_id_seq START WITH 1;
CREATE TABLE versioninfos (
    id                      BIGINT DEFAULT nextval('versioninfos_id_seq') PRIMARY KEY,
    componentName           VARCHAR(255) Not NULL,
    installedVersion        VARCHAR(100) Not NULL,
    latestVersion           VARCHAR(50),
    latestVersionUpdatedAt  TIMESTAMP,
    UNIQUE (componentName)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503002: 1503002_create_version_infos_table.sql ---------------


--------------- Fragment begins: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606001_add_index_to_buildstatetransitions.sql');
COMMIT;


-- Change script: #1606001: 1606001_add_index_to_buildstatetransitions.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_buildstatetransition_build_id ON buildstatetransitions(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------


--------------- Fragment begins: #1606002: 1606002_add_index_to_artifactplans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606002_add_index_to_artifactplans.sql');
COMMIT;


-- Change script: #1606002: 1606002_add_index_to_artifactplans.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_artifactplan_build_id ON artifactplans(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606002: 1606002_add_index_to_artifactplans.sql ---------------


--------------- Fragment begins: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1607001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1607001_create_agent_metadata_job_table.sql');
COMMIT;


-- Change script: #1607001: 1607001_create_agent_metadata_job_table.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE SEQUENCE jobagentmetadata_id_seq START WITH 1;
CREATE TABLE jobagentmetadata (
  id              BIGINT DEFAULT nextval('jobagentmetadata_id_seq') PRIMARY KEY,
  jobId           BIGINT UNIQUE NOT NULL,
  metadata        TEXT NOT NULL,
  metadataVersion VARCHAR(50),
  UNIQUE (jobId)
);

ALTER TABLE jobagentmetadata ADD CONSTRAINT fk_jobagentmetadata_jobs FOREIGN KEY (jobId) REFERENCES builds (id)
  ON DELETE CASCADE;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1607001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------


--------------- Fragment begins: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1610001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1610001_add_index_to_modifiedfiles.sql');
COMMIT;


-- Change script: #1610001: 1610001_add_index_to_modifiedfiles.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX CONCURRENTLY idx_modifiedfiles_modification_id ON modifiedfiles(modificationid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1610001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------


--------------- Fragment begins: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701001_remove_gadget_oauth_tables.sql');
COMMIT;


-- Change script: #1701001: 1701001_remove_gadget_oauth_tables.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

DROP TABLE gadgetOauthAuthorizationCodes;
DROP TABLE gadgetOauthAccessTokens;
DROP TABLE gadgetOauthClients;

DROP SEQUENCE gadgetOauthClients_id_seq;
DROP SEQUENCE gadgetOauthAccessTokens_id_seq;
DROP SEQUENCE gadgetOauthAuthorizationCodes_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------


--------------- Fragment begins: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701002_remove_materialproperties_id_seq.sql');
COMMIT;


-- Change script: #1701002: 1701002_remove_materialproperties_id_seq.sql
DROP SEQUENCE IF EXISTS materialProperties_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------


--------------- Fragment begins: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1702001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1702001_remove_build_cause_buffer_table.sql');
COMMIT;


-- Change script: #1702001: 1702001_remove_build_cause_buffer_table.sql
DROP TABLE BuildCauseBuffer;
DROP SEQUENCE buildcausebuffer_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1702001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------


--------------- Fragment begins: #1704001: 1704001_widen_agents_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704001_widen_agents_uuid_column.sql');
COMMIT;


-- Change script: #1704001: 1704001_widen_agents_uuid_column.sql

ALTER TABLE agents ALTER COLUMN uuid TYPE VARCHAR(255);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704001: 1704001_widen_agents_uuid_column.sql ---------------


--------------- Fragment begins: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704002_widen_builds_agent_uuid_column.sql');
COMMIT;


-- Change script: #1704002: 1704002_widen_builds_agent_uuid_column.sql

DROP VIEW _builds;

ALTER TABLE builds ALTER COLUMN agentUuid TYPE VARCHAR(255);

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------


--------------- Fragment begins: #1704003: 1704003_pipeline_state_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704003_pipeline_state_table.sql');
COMMIT;


-- Change script: #1704003: 1704003_pipeline_state_table.sql
CREATE SEQUENCE pipelinestates_id_seq START WITH 1;
CREATE TABLE PipelineStates (
    id                      BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pipelineName            CITEXT NOT NULL,
    locked                  BOOLEAN,
    lockedByPipelineId              BIGINT
);

ALTER TABLE PipelineStates ADD CONSTRAINT unique_pipeline_state UNIQUE (pipelineName);

INSERT INTO PipelineStates (pipelineName, locked, lockedByPipelineId) (select name, locked, id from pipelines where id in (select max(id) from pipelines where locked = true group by name));

DROP VIEW _stages;

CREATE VIEW _stages AS
    SELECT s.*,
      p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, ps.locked, p.naturalOrder
    FROM stages s
    INNER JOIN pipelines p ON p.id = s.pipelineId
    LEFT OUTER JOIN PipelineStates ps on ps.lockedByPipelineId = s.pipelineId;


ALTER TABLE pipelines drop column locked;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704003: 1704003_pipeline_state_table.sql ---------------


--------------- Fragment begins: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704004_pipeline_states_sequence_reset.sql');
COMMIT;


-- Change script: #1704004: 1704004_pipeline_states_sequence_reset.sql
-- As part of 1704003_pipeline_state_table.sql, PipelineStates was incorrectly setup to use plugins_id_seq instead of pipelinestates_id_seq.
-- This migration resets the sequence pipelinestates_id_seq to be the max(id) of PipelineStates, and alters PipelineStates to use the correct sequence.
-- Since sequences are not explicitly defined for H2, a corresponding migration for H2 is not required.

-- This delta is being backported to all releases starting from 17.4 until 17.10 as part of the patch release.

do $$
declare maxid int;
begin
    select max(id) from pipelinestates into maxid;
    IF maxid IS NULL THEN
        maxid = 1;
    END IF;
    execute 'alter SEQUENCE pipelinestates_id_seq RESTART with '|| maxid;
end;
$$ language plpgsql;

ALTER table PipelineStates alter column ID set default nextval('pipelinestates_id_seq');



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------


--------------- Fragment begins: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1708001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1708001_add_hostname_and_ip_to_agents_table.sql');
COMMIT;


-- Change script: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql
ALTER TABLE agents ADD COLUMN hostname VARCHAR(255) DEFAULT NULL;
ALTER TABLE agents ADD COLUMN ipaddress VARCHAR(50) DEFAULT NULL;
CREATE INDEX idx_agent_uuid ON AGENTS(UUID);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1708001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------


--------------- Fragment begins: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801001_remove_regex_generator_type_from_artifact_properties_generator.sql');
COMMIT;


-- Change script: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql
ALTER TABLE artifactpropertiesgenerator DROP COLUMN regex;
ALTER TABLE artifactpropertiesgenerator DROP COLUMN generatorType;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------


--------------- Fragment begins: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql');
COMMIT;


-- Change script: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql
ALTER TABLE artifactplans ADD COLUMN pluggableArtifactConfigJson TEXT DEFAULT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------


--------------- Fragment begins: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801003_remove_environment_variables_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM environmentVariables
-- WHERE environmentVariables.id IN (
--   SELECT environmentVariables.id
--   FROM environmentVariables
--   INNER JOIN builds
--   ON
--     builds.id = environmentVariables.entityId
--   WHERE
--       environmentVariables.entityType = 'Job'
--     AND
--       builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801004_remove_artifact_plans_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPlans
-- WHERE artifactPlans.id IN (
--   SELECT artifactPlans.id
--   FROM artifactPlans
--   INNER JOIN builds
--     ON builds.id = artifactPlans.buildId
--   WHERE
--       artifactPlans.artifactType = 'file'
--     AND
--       builds.state = 'Completed'
-- );




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801005, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801005_remove_artifact_properties_generator_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPropertiesGenerator
-- WHERE ID IN (
--   SELECT artifactPropertiesGenerator.id
--   FROM artifactPropertiesGenerator
--   INNER JOIN builds
--     ON builds.id = artifactPropertiesGenerator.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801005 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801006, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801006_remove_resources_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801006: 1801006_remove_resources_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.
-- DELETE FROM resources
-- WHERE resources.id IN (
--   SELECT resources.id
--   FROM resources
--   INNER JOIN builds
--     ON builds.id = resources.buildId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801006 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801007, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801007_remove_job_agent_metadata_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM jobAgentMetadata
-- WHERE jobAgentMetadata.id IN (
--   SELECT jobAgentMetadata.id
--   FROM jobAgentMetadata
--   INNER JOIN builds
--     ON
--       builds.id = jobAgentMetadata.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801007 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802001_clear_username_and_comment_for_dependency_materials.sql');
COMMIT;


-- Change script: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql
UPDATE
  modifications
SET
  username = null, comment = null
WHERE
    pipelineid IS NOT NULL
  AND
    username = 'Unknown'
  AND
    comment = 'Unknown';



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------


--------------- Fragment begins: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802002_add_index_on_pipelines_name_and_id_column.sql');
COMMIT;


-- Change script: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_pipeline_name_id ON pipelines( name, id );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------


--------------- Fragment begins: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1804001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql');
COMMIT;


-- Change script: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql
ALTER TABLE PIPELINELABELCOUNTS ADD COLUMN caseInsensitivePipelineName CITEXT;
UPDATE PIPELINELABELCOUNTS set caseInsensitivePipelineName = pipelinename;
CREATE INDEX idx_pipelinelabelcounts_caseinsensitivepipelinename ON PIPELINELABELCOUNTS(caseInsensitivePipelineName);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1804001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------


--------------- Fragment begins: #1805001: 1805001_drop_preferred_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1805001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1805001_drop_preferred_table.sql');
COMMIT;


-- Change script: #1805001: 1805001_drop_preferred_table.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- See `230006_make_user_name_case_insensitive.sql`
-- This was a temp table created to make users' login-name case-insensitive
DROP TABLE preffered;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1805001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1805001: 1805001_drop_preferred_table.sql ---------------


--------------- Fragment begins: #1807001: 1807001_data_sharing_settings_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807001_data_sharing_settings_table.sql');
COMMIT;


-- Change script: #1807001: 1807001_data_sharing_settings_table.sql
CREATE SEQUENCE datasharingsettings_id_seq START WITH 1;

CREATE TABLE DataSharingSettings (
  id             BIGINT DEFAULT nextval('datasharingsettings_id_seq') PRIMARY KEY,
  allowSharing        BOOLEAN NOT NULL,
  updatedBy    VARCHAR(255),
  updatedOn    TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807001: 1807001_data_sharing_settings_table.sql ---------------


--------------- Fragment begins: #1807002: 1807002_usage_data_reporting_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807002_usage_data_reporting_table.sql');
COMMIT;


-- Change script: #1807002: 1807002_usage_data_reporting_table.sql
CREATE SEQUENCE usagedatareporting_id_seq START WITH 1;

CREATE TABLE UsageDataReporting (
  id             BIGINT DEFAULT nextval('usagedatareporting_id_seq') PRIMARY KEY,
  serverId       VARCHAR(255) NOT NULL,
  lastReportedAt TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807002: 1807002_usage_data_reporting_table.sql ---------------


--------------- Fragment begins: #1808001: 1808001_remove_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808001_remove_oauth_tables.sql');
COMMIT;


-- Change script: #1808001: 1808001_remove_oauth_tables.sql
DROP TABLE oauthtokens;
DROP SEQUENCE oauthtokens_id_seq;

DROP TABLE oauthauthorizations;
DROP SEQUENCE oauthauthorizations_id_seq;

DROP TABLE oauthclients;
DROP SEQUENCE oauthclients_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808001: 1808001_remove_oauth_tables.sql ---------------


--------------- Fragment begins: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808002_add_filters_and_version_to_pipeline_selections.sql');
COMMIT;


-- Change script: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

ALTER TABLE PipelineSelections ADD COLUMN filters TEXT;
ALTER TABLE PipelineSelections ADD COLUMN version INT DEFAULT 0 NOT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------

]; nested exception is org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1100)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	... 42 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlMapClient' defined in ServletContext resource [/WEB-INF/applicationContext-dataLocalAccess.xml]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'databaseUpgraderDataSourceFactory': Invocation of init method failed; nested exception is java.lang.RuntimeException: org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [

--------------- Fragment begins: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303001_add_additional_data_field_to_modifications_table.sql');
COMMIT;


-- Change script: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql
ALTER TABLE modifications ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------


--------------- Fragment begins: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303002_add_index_to_builds_on_stageId.sql');
COMMIT;


-- Change script: #1303002: 1303002_add_index_to_builds_on_stageId.sql
CREATE INDEX idx_builds_stageId ON builds(stageId);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------


--------------- Fragment begins: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303003_add_index_to_stages_resources_tables.sql');
COMMIT;


-- Change script: #1303003: 1303003_add_index_to_stages_resources_tables.sql
CREATE INDEX idx_stages_pipelineId ON stages(pipelineid);
CREATE INDEX idx_resources_buildId ON resources(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------


--------------- Fragment begins: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303004_indexes_based_on_purge_tool.sql');
COMMIT;


-- Change script: #1303004: 1303004_indexes_based_on_purge_tool.sql
CREATE INDEX idx_properties_buildId ON properties(buildId);
CREATE INDEX idx_materials_pipelinename ON materials(pipelinename);
CREATE INDEX idx_artifactpropertiesgenerator_jobid ON artifactpropertiesgenerator(jobid);
CREATE INDEX idx_environmentvariables_entitytype ON environmentvariables(entitytype);
CREATE INDEX idx_stageartifactcleanupprohibited_pipelinename ON stageartifactcleanupprohibited(pipelinename);
CREATE INDEX idx_pipelineLabelCounts_pipelinename ON pipelineLabelCounts(pipelinename);




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------


--------------- Fragment begins: #1304001: 1304001_remove_luau_related_entries.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1304001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1304001_remove_luau_related_entries.sql');
COMMIT;


-- Change script: #1304001: 1304001_remove_luau_related_entries.sql
DROP TABLE IF EXISTS luau_groups_users;
DROP TABLE IF EXISTS luau_groups;
DROP TABLE IF EXISTS luaustate;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1304001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1304001: 1304001_remove_luau_related_entries.sql ---------------


--------------- Fragment begins: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1401001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1401001_recreating_trigger_because_of_cruise_to_go_change.sql');
COMMIT;


-- Change script: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql
SELECT (1);


UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1401001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------


--------------- Fragment begins: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403001_fix_null_artifacttype_on_artifactplans_table.sql');
COMMIT;


-- Change script: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql
UPDATE ARTIFACTPLANS SET ARTIFACTTYPE='file' WHERE ARTIFACTTYPE IS NULL;
COMMIT;

-- No undo as adding default value to mandatory field



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------


--------------- Fragment begins: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql');
COMMIT;


-- Change script: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

alter table builds add column runMultipleInstance boolean default false;

DROP VIEW _builds;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------


--------------- Fragment begins: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql');
COMMIT;


-- Change script: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelineselections RENAME COLUMN unselectedpipelines TO selections;

ALTER TABLE pipelineselections ADD COLUMN isblacklist BOOLEAN DEFAULT true;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------


--------------- Fragment begins: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501002_add_comment_column_to_pipelines.sql');
COMMIT;


-- Change script: #1501002: 1501002_add_comment_column_to_pipelines.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelines ADD COLUMN comment TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------


--------------- Fragment begins: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501003_add_additional_data_field_to_materials_table.sql');
COMMIT;


-- Change script: #1501003: 1501003_add_additional_data_field_to_materials_table.sql
ALTER TABLE materials ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------


--------------- Fragment begins: #1502001: 1502001_create_plugins_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1502001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1502001_create_plugins_table.sql');
COMMIT;


-- Change script: #1502001: 1502001_create_plugins_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE plugins_id_seq START WITH 1;
CREATE TABLE plugins (
    id              BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pluginId        VARCHAR(255) Not NULL,
    configuration   TEXT,
    UNIQUE (pluginId)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1502001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1502001: 1502001_create_plugins_table.sql ---------------


--------------- Fragment begins: #1503001: 1503001_remove_licensing_from_users.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503001_remove_licensing_from_users.sql');
COMMIT;


-- Change script: #1503001: 1503001_remove_licensing_from_users.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE users DROP COLUMN disableLicenseExpiryWarning;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503001: 1503001_remove_licensing_from_users.sql ---------------


--------------- Fragment begins: #1503002: 1503002_create_version_infos_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503002_create_version_infos_table.sql');
COMMIT;


-- Change script: #1503002: 1503002_create_version_infos_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2015 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE versioninfos_id_seq START WITH 1;
CREATE TABLE versioninfos (
    id                      BIGINT DEFAULT nextval('versioninfos_id_seq') PRIMARY KEY,
    componentName           VARCHAR(255) Not NULL,
    installedVersion        VARCHAR(100) Not NULL,
    latestVersion           VARCHAR(50),
    latestVersionUpdatedAt  TIMESTAMP,
    UNIQUE (componentName)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503002: 1503002_create_version_infos_table.sql ---------------


--------------- Fragment begins: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606001_add_index_to_buildstatetransitions.sql');
COMMIT;


-- Change script: #1606001: 1606001_add_index_to_buildstatetransitions.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_buildstatetransition_build_id ON buildstatetransitions(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------


--------------- Fragment begins: #1606002: 1606002_add_index_to_artifactplans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606002_add_index_to_artifactplans.sql');
COMMIT;


-- Change script: #1606002: 1606002_add_index_to_artifactplans.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_artifactplan_build_id ON artifactplans(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606002: 1606002_add_index_to_artifactplans.sql ---------------


--------------- Fragment begins: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1607001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1607001_create_agent_metadata_job_table.sql');
COMMIT;


-- Change script: #1607001: 1607001_create_agent_metadata_job_table.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE SEQUENCE jobagentmetadata_id_seq START WITH 1;
CREATE TABLE jobagentmetadata (
  id              BIGINT DEFAULT nextval('jobagentmetadata_id_seq') PRIMARY KEY,
  jobId           BIGINT UNIQUE NOT NULL,
  metadata        TEXT NOT NULL,
  metadataVersion VARCHAR(50),
  UNIQUE (jobId)
);

ALTER TABLE jobagentmetadata ADD CONSTRAINT fk_jobagentmetadata_jobs FOREIGN KEY (jobId) REFERENCES builds (id)
  ON DELETE CASCADE;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1607001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------


--------------- Fragment begins: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1610001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1610001_add_index_to_modifiedfiles.sql');
COMMIT;


-- Change script: #1610001: 1610001_add_index_to_modifiedfiles.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX CONCURRENTLY idx_modifiedfiles_modification_id ON modifiedfiles(modificationid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1610001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------


--------------- Fragment begins: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701001_remove_gadget_oauth_tables.sql');
COMMIT;


-- Change script: #1701001: 1701001_remove_gadget_oauth_tables.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

DROP TABLE gadgetOauthAuthorizationCodes;
DROP TABLE gadgetOauthAccessTokens;
DROP TABLE gadgetOauthClients;

DROP SEQUENCE gadgetOauthClients_id_seq;
DROP SEQUENCE gadgetOauthAccessTokens_id_seq;
DROP SEQUENCE gadgetOauthAuthorizationCodes_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------


--------------- Fragment begins: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701002_remove_materialproperties_id_seq.sql');
COMMIT;


-- Change script: #1701002: 1701002_remove_materialproperties_id_seq.sql
DROP SEQUENCE IF EXISTS materialProperties_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------


--------------- Fragment begins: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1702001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1702001_remove_build_cause_buffer_table.sql');
COMMIT;


-- Change script: #1702001: 1702001_remove_build_cause_buffer_table.sql
DROP TABLE BuildCauseBuffer;
DROP SEQUENCE buildcausebuffer_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1702001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------


--------------- Fragment begins: #1704001: 1704001_widen_agents_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704001_widen_agents_uuid_column.sql');
COMMIT;


-- Change script: #1704001: 1704001_widen_agents_uuid_column.sql

ALTER TABLE agents ALTER COLUMN uuid TYPE VARCHAR(255);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704001: 1704001_widen_agents_uuid_column.sql ---------------


--------------- Fragment begins: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704002_widen_builds_agent_uuid_column.sql');
COMMIT;


-- Change script: #1704002: 1704002_widen_builds_agent_uuid_column.sql

DROP VIEW _builds;

ALTER TABLE builds ALTER COLUMN agentUuid TYPE VARCHAR(255);

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------


--------------- Fragment begins: #1704003: 1704003_pipeline_state_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704003_pipeline_state_table.sql');
COMMIT;


-- Change script: #1704003: 1704003_pipeline_state_table.sql
CREATE SEQUENCE pipelinestates_id_seq START WITH 1;
CREATE TABLE PipelineStates (
    id                      BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pipelineName            CITEXT NOT NULL,
    locked                  BOOLEAN,
    lockedByPipelineId              BIGINT
);

ALTER TABLE PipelineStates ADD CONSTRAINT unique_pipeline_state UNIQUE (pipelineName);

INSERT INTO PipelineStates (pipelineName, locked, lockedByPipelineId) (select name, locked, id from pipelines where id in (select max(id) from pipelines where locked = true group by name));

DROP VIEW _stages;

CREATE VIEW _stages AS
    SELECT s.*,
      p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, ps.locked, p.naturalOrder
    FROM stages s
    INNER JOIN pipelines p ON p.id = s.pipelineId
    LEFT OUTER JOIN PipelineStates ps on ps.lockedByPipelineId = s.pipelineId;


ALTER TABLE pipelines drop column locked;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704003: 1704003_pipeline_state_table.sql ---------------


--------------- Fragment begins: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704004_pipeline_states_sequence_reset.sql');
COMMIT;


-- Change script: #1704004: 1704004_pipeline_states_sequence_reset.sql
-- As part of 1704003_pipeline_state_table.sql, PipelineStates was incorrectly setup to use plugins_id_seq instead of pipelinestates_id_seq.
-- This migration resets the sequence pipelinestates_id_seq to be the max(id) of PipelineStates, and alters PipelineStates to use the correct sequence.
-- Since sequences are not explicitly defined for H2, a corresponding migration for H2 is not required.

-- This delta is being backported to all releases starting from 17.4 until 17.10 as part of the patch release.

do $$
declare maxid int;
begin
    select max(id) from pipelinestates into maxid;
    IF maxid IS NULL THEN
        maxid = 1;
    END IF;
    execute 'alter SEQUENCE pipelinestates_id_seq RESTART with '|| maxid;
end;
$$ language plpgsql;

ALTER table PipelineStates alter column ID set default nextval('pipelinestates_id_seq');



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------


--------------- Fragment begins: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1708001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1708001_add_hostname_and_ip_to_agents_table.sql');
COMMIT;


-- Change script: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql
ALTER TABLE agents ADD COLUMN hostname VARCHAR(255) DEFAULT NULL;
ALTER TABLE agents ADD COLUMN ipaddress VARCHAR(50) DEFAULT NULL;
CREATE INDEX idx_agent_uuid ON AGENTS(UUID);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1708001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------


--------------- Fragment begins: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801001_remove_regex_generator_type_from_artifact_properties_generator.sql');
COMMIT;


-- Change script: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql
ALTER TABLE artifactpropertiesgenerator DROP COLUMN regex;
ALTER TABLE artifactpropertiesgenerator DROP COLUMN generatorType;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------


--------------- Fragment begins: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql');
COMMIT;


-- Change script: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql
ALTER TABLE artifactplans ADD COLUMN pluggableArtifactConfigJson TEXT DEFAULT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------


--------------- Fragment begins: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801003_remove_environment_variables_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM environmentVariables
-- WHERE environmentVariables.id IN (
--   SELECT environmentVariables.id
--   FROM environmentVariables
--   INNER JOIN builds
--   ON
--     builds.id = environmentVariables.entityId
--   WHERE
--       environmentVariables.entityType = 'Job'
--     AND
--       builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801004_remove_artifact_plans_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPlans
-- WHERE artifactPlans.id IN (
--   SELECT artifactPlans.id
--   FROM artifactPlans
--   INNER JOIN builds
--     ON builds.id = artifactPlans.buildId
--   WHERE
--       artifactPlans.artifactType = 'file'
--     AND
--       builds.state = 'Completed'
-- );




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801005, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801005_remove_artifact_properties_generator_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPropertiesGenerator
-- WHERE ID IN (
--   SELECT artifactPropertiesGenerator.id
--   FROM artifactPropertiesGenerator
--   INNER JOIN builds
--     ON builds.id = artifactPropertiesGenerator.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801005 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801006, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801006_remove_resources_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801006: 1801006_remove_resources_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.
-- DELETE FROM resources
-- WHERE resources.id IN (
--   SELECT resources.id
--   FROM resources
--   INNER JOIN builds
--     ON builds.id = resources.buildId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801006 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801007, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801007_remove_job_agent_metadata_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM jobAgentMetadata
-- WHERE jobAgentMetadata.id IN (
--   SELECT jobAgentMetadata.id
--   FROM jobAgentMetadata
--   INNER JOIN builds
--     ON
--       builds.id = jobAgentMetadata.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801007 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802001_clear_username_and_comment_for_dependency_materials.sql');
COMMIT;


-- Change script: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql
UPDATE
  modifications
SET
  username = null, comment = null
WHERE
    pipelineid IS NOT NULL
  AND
    username = 'Unknown'
  AND
    comment = 'Unknown';



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------


--------------- Fragment begins: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802002_add_index_on_pipelines_name_and_id_column.sql');
COMMIT;


-- Change script: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_pipeline_name_id ON pipelines( name, id );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------


--------------- Fragment begins: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1804001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql');
COMMIT;


-- Change script: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql
ALTER TABLE PIPELINELABELCOUNTS ADD COLUMN caseInsensitivePipelineName CITEXT;
UPDATE PIPELINELABELCOUNTS set caseInsensitivePipelineName = pipelinename;
CREATE INDEX idx_pipelinelabelcounts_caseinsensitivepipelinename ON PIPELINELABELCOUNTS(caseInsensitivePipelineName);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1804001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------


--------------- Fragment begins: #1805001: 1805001_drop_preferred_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1805001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1805001_drop_preferred_table.sql');
COMMIT;


-- Change script: #1805001: 1805001_drop_preferred_table.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- See `230006_make_user_name_case_insensitive.sql`
-- This was a temp table created to make users' login-name case-insensitive
DROP TABLE preffered;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1805001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1805001: 1805001_drop_preferred_table.sql ---------------


--------------- Fragment begins: #1807001: 1807001_data_sharing_settings_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807001_data_sharing_settings_table.sql');
COMMIT;


-- Change script: #1807001: 1807001_data_sharing_settings_table.sql
CREATE SEQUENCE datasharingsettings_id_seq START WITH 1;

CREATE TABLE DataSharingSettings (
  id             BIGINT DEFAULT nextval('datasharingsettings_id_seq') PRIMARY KEY,
  allowSharing        BOOLEAN NOT NULL,
  updatedBy    VARCHAR(255),
  updatedOn    TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807001: 1807001_data_sharing_settings_table.sql ---------------


--------------- Fragment begins: #1807002: 1807002_usage_data_reporting_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807002_usage_data_reporting_table.sql');
COMMIT;


-- Change script: #1807002: 1807002_usage_data_reporting_table.sql
CREATE SEQUENCE usagedatareporting_id_seq START WITH 1;

CREATE TABLE UsageDataReporting (
  id             BIGINT DEFAULT nextval('usagedatareporting_id_seq') PRIMARY KEY,
  serverId       VARCHAR(255) NOT NULL,
  lastReportedAt TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807002: 1807002_usage_data_reporting_table.sql ---------------


--------------- Fragment begins: #1808001: 1808001_remove_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808001_remove_oauth_tables.sql');
COMMIT;


-- Change script: #1808001: 1808001_remove_oauth_tables.sql
DROP TABLE oauthtokens;
DROP SEQUENCE oauthtokens_id_seq;

DROP TABLE oauthauthorizations;
DROP SEQUENCE oauthauthorizations_id_seq;

DROP TABLE oauthclients;
DROP SEQUENCE oauthclients_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808001: 1808001_remove_oauth_tables.sql ---------------


--------------- Fragment begins: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808002_add_filters_and_version_to_pipeline_selections.sql');
COMMIT;


-- Change script: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

ALTER TABLE PipelineSelections ADD COLUMN filters TEXT;
ALTER TABLE PipelineSelections ADD COLUMN version INT DEFAULT 0 NOT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------

]; nested exception is org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1100)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getSingletonFactoryBeanForTypeCheck(AbstractAutowireCapableBeanFactory.java:928)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:805)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:564)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:432)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:403)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:206)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1265)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1099)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1064)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	... 52 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'databaseUpgraderDataSourceFactory': Invocation of init method failed; nested exception is java.lang.RuntimeException: org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [

--------------- Fragment begins: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303001_add_additional_data_field_to_modifications_table.sql');
COMMIT;


-- Change script: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql
ALTER TABLE modifications ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------


--------------- Fragment begins: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303002_add_index_to_builds_on_stageId.sql');
COMMIT;


-- Change script: #1303002: 1303002_add_index_to_builds_on_stageId.sql
CREATE INDEX idx_builds_stageId ON builds(stageId);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------


--------------- Fragment begins: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303003_add_index_to_stages_resources_tables.sql');
COMMIT;


-- Change script: #1303003: 1303003_add_index_to_stages_resources_tables.sql
CREATE INDEX idx_stages_pipelineId ON stages(pipelineid);
CREATE INDEX idx_resources_buildId ON resources(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------


--------------- Fragment begins: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303004_indexes_based_on_purge_tool.sql');
COMMIT;


-- Change script: #1303004: 1303004_indexes_based_on_purge_tool.sql
CREATE INDEX idx_properties_buildId ON properties(buildId);
CREATE INDEX idx_materials_pipelinename ON materials(pipelinename);
CREATE INDEX idx_artifactpropertiesgenerator_jobid ON artifactpropertiesgenerator(jobid);
CREATE INDEX idx_environmentvariables_entitytype ON environmentvariables(entitytype);
CREATE INDEX idx_stageartifactcleanupprohibited_pipelinename ON stageartifactcleanupprohibited(pipelinename);
CREATE INDEX idx_pipelineLabelCounts_pipelinename ON pipelineLabelCounts(pipelinename);




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------


--------------- Fragment begins: #1304001: 1304001_remove_luau_related_entries.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1304001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1304001_remove_luau_related_entries.sql');
COMMIT;


-- Change script: #1304001: 1304001_remove_luau_related_entries.sql
DROP TABLE IF EXISTS luau_groups_users;
DROP TABLE IF EXISTS luau_groups;
DROP TABLE IF EXISTS luaustate;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1304001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1304001: 1304001_remove_luau_related_entries.sql ---------------


--------------- Fragment begins: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1401001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1401001_recreating_trigger_because_of_cruise_to_go_change.sql');
COMMIT;


-- Change script: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql
SELECT (1);


UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1401001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------


--------------- Fragment begins: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403001_fix_null_artifacttype_on_artifactplans_table.sql');
COMMIT;


-- Change script: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql
UPDATE ARTIFACTPLANS SET ARTIFACTTYPE='file' WHERE ARTIFACTTYPE IS NULL;
COMMIT;

-- No undo as adding default value to mandatory field



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------


--------------- Fragment begins: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql');
COMMIT;


-- Change script: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

alter table builds add column runMultipleInstance boolean default false;

DROP VIEW _builds;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------


--------------- Fragment begins: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql');
COMMIT;


-- Change script: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelineselections RENAME COLUMN unselectedpipelines TO selections;

ALTER TABLE pipelineselections ADD COLUMN isblacklist BOOLEAN DEFAULT true;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------


--------------- Fragment begins: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501002_add_comment_column_to_pipelines.sql');
COMMIT;


-- Change script: #1501002: 1501002_add_comment_column_to_pipelines.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelines ADD COLUMN comment TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------


--------------- Fragment begins: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501003_add_additional_data_field_to_materials_table.sql');
COMMIT;


-- Change script: #1501003: 1501003_add_additional_data_field_to_materials_table.sql
ALTER TABLE materials ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------


--------------- Fragment begins: #1502001: 1502001_create_plugins_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1502001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1502001_create_plugins_table.sql');
COMMIT;


-- Change script: #1502001: 1502001_create_plugins_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE plugins_id_seq START WITH 1;
CREATE TABLE plugins (
    id              BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pluginId        VARCHAR(255) Not NULL,
    configuration   TEXT,
    UNIQUE (pluginId)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1502001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1502001: 1502001_create_plugins_table.sql ---------------


--------------- Fragment begins: #1503001: 1503001_remove_licensing_from_users.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503001_remove_licensing_from_users.sql');
COMMIT;


-- Change script: #1503001: 1503001_remove_licensing_from_users.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE users DROP COLUMN disableLicenseExpiryWarning;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503001: 1503001_remove_licensing_from_users.sql ---------------


--------------- Fragment begins: #1503002: 1503002_create_version_infos_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503002_create_version_infos_table.sql');
COMMIT;


-- Change script: #1503002: 1503002_create_version_infos_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2015 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE versioninfos_id_seq START WITH 1;
CREATE TABLE versioninfos (
    id                      BIGINT DEFAULT nextval('versioninfos_id_seq') PRIMARY KEY,
    componentName           VARCHAR(255) Not NULL,
    installedVersion        VARCHAR(100) Not NULL,
    latestVersion           VARCHAR(50),
    latestVersionUpdatedAt  TIMESTAMP,
    UNIQUE (componentName)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503002: 1503002_create_version_infos_table.sql ---------------


--------------- Fragment begins: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606001_add_index_to_buildstatetransitions.sql');
COMMIT;


-- Change script: #1606001: 1606001_add_index_to_buildstatetransitions.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_buildstatetransition_build_id ON buildstatetransitions(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------


--------------- Fragment begins: #1606002: 1606002_add_index_to_artifactplans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606002_add_index_to_artifactplans.sql');
COMMIT;


-- Change script: #1606002: 1606002_add_index_to_artifactplans.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_artifactplan_build_id ON artifactplans(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606002: 1606002_add_index_to_artifactplans.sql ---------------


--------------- Fragment begins: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1607001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1607001_create_agent_metadata_job_table.sql');
COMMIT;


-- Change script: #1607001: 1607001_create_agent_metadata_job_table.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE SEQUENCE jobagentmetadata_id_seq START WITH 1;
CREATE TABLE jobagentmetadata (
  id              BIGINT DEFAULT nextval('jobagentmetadata_id_seq') PRIMARY KEY,
  jobId           BIGINT UNIQUE NOT NULL,
  metadata        TEXT NOT NULL,
  metadataVersion VARCHAR(50),
  UNIQUE (jobId)
);

ALTER TABLE jobagentmetadata ADD CONSTRAINT fk_jobagentmetadata_jobs FOREIGN KEY (jobId) REFERENCES builds (id)
  ON DELETE CASCADE;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1607001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------


--------------- Fragment begins: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1610001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1610001_add_index_to_modifiedfiles.sql');
COMMIT;


-- Change script: #1610001: 1610001_add_index_to_modifiedfiles.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX CONCURRENTLY idx_modifiedfiles_modification_id ON modifiedfiles(modificationid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1610001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------


--------------- Fragment begins: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701001_remove_gadget_oauth_tables.sql');
COMMIT;


-- Change script: #1701001: 1701001_remove_gadget_oauth_tables.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

DROP TABLE gadgetOauthAuthorizationCodes;
DROP TABLE gadgetOauthAccessTokens;
DROP TABLE gadgetOauthClients;

DROP SEQUENCE gadgetOauthClients_id_seq;
DROP SEQUENCE gadgetOauthAccessTokens_id_seq;
DROP SEQUENCE gadgetOauthAuthorizationCodes_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------


--------------- Fragment begins: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701002_remove_materialproperties_id_seq.sql');
COMMIT;


-- Change script: #1701002: 1701002_remove_materialproperties_id_seq.sql
DROP SEQUENCE IF EXISTS materialProperties_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------


--------------- Fragment begins: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1702001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1702001_remove_build_cause_buffer_table.sql');
COMMIT;


-- Change script: #1702001: 1702001_remove_build_cause_buffer_table.sql
DROP TABLE BuildCauseBuffer;
DROP SEQUENCE buildcausebuffer_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1702001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------


--------------- Fragment begins: #1704001: 1704001_widen_agents_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704001_widen_agents_uuid_column.sql');
COMMIT;


-- Change script: #1704001: 1704001_widen_agents_uuid_column.sql

ALTER TABLE agents ALTER COLUMN uuid TYPE VARCHAR(255);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704001: 1704001_widen_agents_uuid_column.sql ---------------


--------------- Fragment begins: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704002_widen_builds_agent_uuid_column.sql');
COMMIT;


-- Change script: #1704002: 1704002_widen_builds_agent_uuid_column.sql

DROP VIEW _builds;

ALTER TABLE builds ALTER COLUMN agentUuid TYPE VARCHAR(255);

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------


--------------- Fragment begins: #1704003: 1704003_pipeline_state_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704003_pipeline_state_table.sql');
COMMIT;


-- Change script: #1704003: 1704003_pipeline_state_table.sql
CREATE SEQUENCE pipelinestates_id_seq START WITH 1;
CREATE TABLE PipelineStates (
    id                      BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pipelineName            CITEXT NOT NULL,
    locked                  BOOLEAN,
    lockedByPipelineId              BIGINT
);

ALTER TABLE PipelineStates ADD CONSTRAINT unique_pipeline_state UNIQUE (pipelineName);

INSERT INTO PipelineStates (pipelineName, locked, lockedByPipelineId) (select name, locked, id from pipelines where id in (select max(id) from pipelines where locked = true group by name));

DROP VIEW _stages;

CREATE VIEW _stages AS
    SELECT s.*,
      p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, ps.locked, p.naturalOrder
    FROM stages s
    INNER JOIN pipelines p ON p.id = s.pipelineId
    LEFT OUTER JOIN PipelineStates ps on ps.lockedByPipelineId = s.pipelineId;


ALTER TABLE pipelines drop column locked;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704003: 1704003_pipeline_state_table.sql ---------------


--------------- Fragment begins: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704004_pipeline_states_sequence_reset.sql');
COMMIT;


-- Change script: #1704004: 1704004_pipeline_states_sequence_reset.sql
-- As part of 1704003_pipeline_state_table.sql, PipelineStates was incorrectly setup to use plugins_id_seq instead of pipelinestates_id_seq.
-- This migration resets the sequence pipelinestates_id_seq to be the max(id) of PipelineStates, and alters PipelineStates to use the correct sequence.
-- Since sequences are not explicitly defined for H2, a corresponding migration for H2 is not required.

-- This delta is being backported to all releases starting from 17.4 until 17.10 as part of the patch release.

do $$
declare maxid int;
begin
    select max(id) from pipelinestates into maxid;
    IF maxid IS NULL THEN
        maxid = 1;
    END IF;
    execute 'alter SEQUENCE pipelinestates_id_seq RESTART with '|| maxid;
end;
$$ language plpgsql;

ALTER table PipelineStates alter column ID set default nextval('pipelinestates_id_seq');



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------


--------------- Fragment begins: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1708001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1708001_add_hostname_and_ip_to_agents_table.sql');
COMMIT;


-- Change script: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql
ALTER TABLE agents ADD COLUMN hostname VARCHAR(255) DEFAULT NULL;
ALTER TABLE agents ADD COLUMN ipaddress VARCHAR(50) DEFAULT NULL;
CREATE INDEX idx_agent_uuid ON AGENTS(UUID);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1708001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------


--------------- Fragment begins: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801001_remove_regex_generator_type_from_artifact_properties_generator.sql');
COMMIT;


-- Change script: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql
ALTER TABLE artifactpropertiesgenerator DROP COLUMN regex;
ALTER TABLE artifactpropertiesgenerator DROP COLUMN generatorType;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------


--------------- Fragment begins: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql');
COMMIT;


-- Change script: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql
ALTER TABLE artifactplans ADD COLUMN pluggableArtifactConfigJson TEXT DEFAULT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------


--------------- Fragment begins: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801003_remove_environment_variables_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM environmentVariables
-- WHERE environmentVariables.id IN (
--   SELECT environmentVariables.id
--   FROM environmentVariables
--   INNER JOIN builds
--   ON
--     builds.id = environmentVariables.entityId
--   WHERE
--       environmentVariables.entityType = 'Job'
--     AND
--       builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801004_remove_artifact_plans_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPlans
-- WHERE artifactPlans.id IN (
--   SELECT artifactPlans.id
--   FROM artifactPlans
--   INNER JOIN builds
--     ON builds.id = artifactPlans.buildId
--   WHERE
--       artifactPlans.artifactType = 'file'
--     AND
--       builds.state = 'Completed'
-- );




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801005, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801005_remove_artifact_properties_generator_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPropertiesGenerator
-- WHERE ID IN (
--   SELECT artifactPropertiesGenerator.id
--   FROM artifactPropertiesGenerator
--   INNER JOIN builds
--     ON builds.id = artifactPropertiesGenerator.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801005 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801006, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801006_remove_resources_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801006: 1801006_remove_resources_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.
-- DELETE FROM resources
-- WHERE resources.id IN (
--   SELECT resources.id
--   FROM resources
--   INNER JOIN builds
--     ON builds.id = resources.buildId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801006 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801007, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801007_remove_job_agent_metadata_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM jobAgentMetadata
-- WHERE jobAgentMetadata.id IN (
--   SELECT jobAgentMetadata.id
--   FROM jobAgentMetadata
--   INNER JOIN builds
--     ON
--       builds.id = jobAgentMetadata.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801007 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802001_clear_username_and_comment_for_dependency_materials.sql');
COMMIT;


-- Change script: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql
UPDATE
  modifications
SET
  username = null, comment = null
WHERE
    pipelineid IS NOT NULL
  AND
    username = 'Unknown'
  AND
    comment = 'Unknown';



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------


--------------- Fragment begins: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802002_add_index_on_pipelines_name_and_id_column.sql');
COMMIT;


-- Change script: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_pipeline_name_id ON pipelines( name, id );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------


--------------- Fragment begins: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1804001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql');
COMMIT;


-- Change script: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql
ALTER TABLE PIPELINELABELCOUNTS ADD COLUMN caseInsensitivePipelineName CITEXT;
UPDATE PIPELINELABELCOUNTS set caseInsensitivePipelineName = pipelinename;
CREATE INDEX idx_pipelinelabelcounts_caseinsensitivepipelinename ON PIPELINELABELCOUNTS(caseInsensitivePipelineName);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1804001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------


--------------- Fragment begins: #1805001: 1805001_drop_preferred_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1805001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1805001_drop_preferred_table.sql');
COMMIT;


-- Change script: #1805001: 1805001_drop_preferred_table.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- See `230006_make_user_name_case_insensitive.sql`
-- This was a temp table created to make users' login-name case-insensitive
DROP TABLE preffered;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1805001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1805001: 1805001_drop_preferred_table.sql ---------------


--------------- Fragment begins: #1807001: 1807001_data_sharing_settings_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807001_data_sharing_settings_table.sql');
COMMIT;


-- Change script: #1807001: 1807001_data_sharing_settings_table.sql
CREATE SEQUENCE datasharingsettings_id_seq START WITH 1;

CREATE TABLE DataSharingSettings (
  id             BIGINT DEFAULT nextval('datasharingsettings_id_seq') PRIMARY KEY,
  allowSharing        BOOLEAN NOT NULL,
  updatedBy    VARCHAR(255),
  updatedOn    TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807001: 1807001_data_sharing_settings_table.sql ---------------


--------------- Fragment begins: #1807002: 1807002_usage_data_reporting_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807002_usage_data_reporting_table.sql');
COMMIT;


-- Change script: #1807002: 1807002_usage_data_reporting_table.sql
CREATE SEQUENCE usagedatareporting_id_seq START WITH 1;

CREATE TABLE UsageDataReporting (
  id             BIGINT DEFAULT nextval('usagedatareporting_id_seq') PRIMARY KEY,
  serverId       VARCHAR(255) NOT NULL,
  lastReportedAt TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807002: 1807002_usage_data_reporting_table.sql ---------------


--------------- Fragment begins: #1808001: 1808001_remove_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808001_remove_oauth_tables.sql');
COMMIT;


-- Change script: #1808001: 1808001_remove_oauth_tables.sql
DROP TABLE oauthtokens;
DROP SEQUENCE oauthtokens_id_seq;

DROP TABLE oauthauthorizations;
DROP SEQUENCE oauthauthorizations_id_seq;

DROP TABLE oauthclients;
DROP SEQUENCE oauthclients_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808001: 1808001_remove_oauth_tables.sql ---------------


--------------- Fragment begins: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808002_add_filters_and_version_to_pipeline_selections.sql');
COMMIT;


-- Change script: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

ALTER TABLE PipelineSelections ADD COLUMN filters TEXT;
ALTER TABLE PipelineSelections ADD COLUMN version INT DEFAULT 0 NOT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------

]; nested exception is org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:137)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:407)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1623)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1178)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1136)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1064)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	... 66 common frames omitted
Caused by: java.lang.RuntimeException: org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [

--------------- Fragment begins: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303001_add_additional_data_field_to_modifications_table.sql');
COMMIT;


-- Change script: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql
ALTER TABLE modifications ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------


--------------- Fragment begins: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303002_add_index_to_builds_on_stageId.sql');
COMMIT;


-- Change script: #1303002: 1303002_add_index_to_builds_on_stageId.sql
CREATE INDEX idx_builds_stageId ON builds(stageId);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------


--------------- Fragment begins: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303003_add_index_to_stages_resources_tables.sql');
COMMIT;


-- Change script: #1303003: 1303003_add_index_to_stages_resources_tables.sql
CREATE INDEX idx_stages_pipelineId ON stages(pipelineid);
CREATE INDEX idx_resources_buildId ON resources(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------


--------------- Fragment begins: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303004_indexes_based_on_purge_tool.sql');
COMMIT;


-- Change script: #1303004: 1303004_indexes_based_on_purge_tool.sql
CREATE INDEX idx_properties_buildId ON properties(buildId);
CREATE INDEX idx_materials_pipelinename ON materials(pipelinename);
CREATE INDEX idx_artifactpropertiesgenerator_jobid ON artifactpropertiesgenerator(jobid);
CREATE INDEX idx_environmentvariables_entitytype ON environmentvariables(entitytype);
CREATE INDEX idx_stageartifactcleanupprohibited_pipelinename ON stageartifactcleanupprohibited(pipelinename);
CREATE INDEX idx_pipelineLabelCounts_pipelinename ON pipelineLabelCounts(pipelinename);




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------


--------------- Fragment begins: #1304001: 1304001_remove_luau_related_entries.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1304001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1304001_remove_luau_related_entries.sql');
COMMIT;


-- Change script: #1304001: 1304001_remove_luau_related_entries.sql
DROP TABLE IF EXISTS luau_groups_users;
DROP TABLE IF EXISTS luau_groups;
DROP TABLE IF EXISTS luaustate;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1304001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1304001: 1304001_remove_luau_related_entries.sql ---------------


--------------- Fragment begins: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1401001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1401001_recreating_trigger_because_of_cruise_to_go_change.sql');
COMMIT;


-- Change script: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql
SELECT (1);


UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1401001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------


--------------- Fragment begins: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403001_fix_null_artifacttype_on_artifactplans_table.sql');
COMMIT;


-- Change script: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql
UPDATE ARTIFACTPLANS SET ARTIFACTTYPE='file' WHERE ARTIFACTTYPE IS NULL;
COMMIT;

-- No undo as adding default value to mandatory field



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------


--------------- Fragment begins: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql');
COMMIT;


-- Change script: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

alter table builds add column runMultipleInstance boolean default false;

DROP VIEW _builds;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------


--------------- Fragment begins: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql');
COMMIT;


-- Change script: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelineselections RENAME COLUMN unselectedpipelines TO selections;

ALTER TABLE pipelineselections ADD COLUMN isblacklist BOOLEAN DEFAULT true;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------


--------------- Fragment begins: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501002_add_comment_column_to_pipelines.sql');
COMMIT;


-- Change script: #1501002: 1501002_add_comment_column_to_pipelines.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelines ADD COLUMN comment TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------


--------------- Fragment begins: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501003_add_additional_data_field_to_materials_table.sql');
COMMIT;


-- Change script: #1501003: 1501003_add_additional_data_field_to_materials_table.sql
ALTER TABLE materials ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------


--------------- Fragment begins: #1502001: 1502001_create_plugins_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1502001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1502001_create_plugins_table.sql');
COMMIT;


-- Change script: #1502001: 1502001_create_plugins_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE plugins_id_seq START WITH 1;
CREATE TABLE plugins (
    id              BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pluginId        VARCHAR(255) Not NULL,
    configuration   TEXT,
    UNIQUE (pluginId)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1502001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1502001: 1502001_create_plugins_table.sql ---------------


--------------- Fragment begins: #1503001: 1503001_remove_licensing_from_users.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503001_remove_licensing_from_users.sql');
COMMIT;


-- Change script: #1503001: 1503001_remove_licensing_from_users.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE users DROP COLUMN disableLicenseExpiryWarning;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503001: 1503001_remove_licensing_from_users.sql ---------------


--------------- Fragment begins: #1503002: 1503002_create_version_infos_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503002_create_version_infos_table.sql');
COMMIT;


-- Change script: #1503002: 1503002_create_version_infos_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2015 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE versioninfos_id_seq START WITH 1;
CREATE TABLE versioninfos (
    id                      BIGINT DEFAULT nextval('versioninfos_id_seq') PRIMARY KEY,
    componentName           VARCHAR(255) Not NULL,
    installedVersion        VARCHAR(100) Not NULL,
    latestVersion           VARCHAR(50),
    latestVersionUpdatedAt  TIMESTAMP,
    UNIQUE (componentName)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503002: 1503002_create_version_infos_table.sql ---------------


--------------- Fragment begins: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606001_add_index_to_buildstatetransitions.sql');
COMMIT;


-- Change script: #1606001: 1606001_add_index_to_buildstatetransitions.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_buildstatetransition_build_id ON buildstatetransitions(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------


--------------- Fragment begins: #1606002: 1606002_add_index_to_artifactplans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606002_add_index_to_artifactplans.sql');
COMMIT;


-- Change script: #1606002: 1606002_add_index_to_artifactplans.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_artifactplan_build_id ON artifactplans(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606002: 1606002_add_index_to_artifactplans.sql ---------------


--------------- Fragment begins: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1607001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1607001_create_agent_metadata_job_table.sql');
COMMIT;


-- Change script: #1607001: 1607001_create_agent_metadata_job_table.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE SEQUENCE jobagentmetadata_id_seq START WITH 1;
CREATE TABLE jobagentmetadata (
  id              BIGINT DEFAULT nextval('jobagentmetadata_id_seq') PRIMARY KEY,
  jobId           BIGINT UNIQUE NOT NULL,
  metadata        TEXT NOT NULL,
  metadataVersion VARCHAR(50),
  UNIQUE (jobId)
);

ALTER TABLE jobagentmetadata ADD CONSTRAINT fk_jobagentmetadata_jobs FOREIGN KEY (jobId) REFERENCES builds (id)
  ON DELETE CASCADE;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1607001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------


--------------- Fragment begins: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1610001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1610001_add_index_to_modifiedfiles.sql');
COMMIT;


-- Change script: #1610001: 1610001_add_index_to_modifiedfiles.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX CONCURRENTLY idx_modifiedfiles_modification_id ON modifiedfiles(modificationid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1610001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------


--------------- Fragment begins: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701001_remove_gadget_oauth_tables.sql');
COMMIT;


-- Change script: #1701001: 1701001_remove_gadget_oauth_tables.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

DROP TABLE gadgetOauthAuthorizationCodes;
DROP TABLE gadgetOauthAccessTokens;
DROP TABLE gadgetOauthClients;

DROP SEQUENCE gadgetOauthClients_id_seq;
DROP SEQUENCE gadgetOauthAccessTokens_id_seq;
DROP SEQUENCE gadgetOauthAuthorizationCodes_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------


--------------- Fragment begins: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701002_remove_materialproperties_id_seq.sql');
COMMIT;


-- Change script: #1701002: 1701002_remove_materialproperties_id_seq.sql
DROP SEQUENCE IF EXISTS materialProperties_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------


--------------- Fragment begins: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1702001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1702001_remove_build_cause_buffer_table.sql');
COMMIT;


-- Change script: #1702001: 1702001_remove_build_cause_buffer_table.sql
DROP TABLE BuildCauseBuffer;
DROP SEQUENCE buildcausebuffer_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1702001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------


--------------- Fragment begins: #1704001: 1704001_widen_agents_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704001_widen_agents_uuid_column.sql');
COMMIT;


-- Change script: #1704001: 1704001_widen_agents_uuid_column.sql

ALTER TABLE agents ALTER COLUMN uuid TYPE VARCHAR(255);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704001: 1704001_widen_agents_uuid_column.sql ---------------


--------------- Fragment begins: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704002_widen_builds_agent_uuid_column.sql');
COMMIT;


-- Change script: #1704002: 1704002_widen_builds_agent_uuid_column.sql

DROP VIEW _builds;

ALTER TABLE builds ALTER COLUMN agentUuid TYPE VARCHAR(255);

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------


--------------- Fragment begins: #1704003: 1704003_pipeline_state_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704003_pipeline_state_table.sql');
COMMIT;


-- Change script: #1704003: 1704003_pipeline_state_table.sql
CREATE SEQUENCE pipelinestates_id_seq START WITH 1;
CREATE TABLE PipelineStates (
    id                      BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pipelineName            CITEXT NOT NULL,
    locked                  BOOLEAN,
    lockedByPipelineId              BIGINT
);

ALTER TABLE PipelineStates ADD CONSTRAINT unique_pipeline_state UNIQUE (pipelineName);

INSERT INTO PipelineStates (pipelineName, locked, lockedByPipelineId) (select name, locked, id from pipelines where id in (select max(id) from pipelines where locked = true group by name));

DROP VIEW _stages;

CREATE VIEW _stages AS
    SELECT s.*,
      p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, ps.locked, p.naturalOrder
    FROM stages s
    INNER JOIN pipelines p ON p.id = s.pipelineId
    LEFT OUTER JOIN PipelineStates ps on ps.lockedByPipelineId = s.pipelineId;


ALTER TABLE pipelines drop column locked;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704003: 1704003_pipeline_state_table.sql ---------------


--------------- Fragment begins: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704004_pipeline_states_sequence_reset.sql');
COMMIT;


-- Change script: #1704004: 1704004_pipeline_states_sequence_reset.sql
-- As part of 1704003_pipeline_state_table.sql, PipelineStates was incorrectly setup to use plugins_id_seq instead of pipelinestates_id_seq.
-- This migration resets the sequence pipelinestates_id_seq to be the max(id) of PipelineStates, and alters PipelineStates to use the correct sequence.
-- Since sequences are not explicitly defined for H2, a corresponding migration for H2 is not required.

-- This delta is being backported to all releases starting from 17.4 until 17.10 as part of the patch release.

do $$
declare maxid int;
begin
    select max(id) from pipelinestates into maxid;
    IF maxid IS NULL THEN
        maxid = 1;
    END IF;
    execute 'alter SEQUENCE pipelinestates_id_seq RESTART with '|| maxid;
end;
$$ language plpgsql;

ALTER table PipelineStates alter column ID set default nextval('pipelinestates_id_seq');



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------


--------------- Fragment begins: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1708001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1708001_add_hostname_and_ip_to_agents_table.sql');
COMMIT;


-- Change script: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql
ALTER TABLE agents ADD COLUMN hostname VARCHAR(255) DEFAULT NULL;
ALTER TABLE agents ADD COLUMN ipaddress VARCHAR(50) DEFAULT NULL;
CREATE INDEX idx_agent_uuid ON AGENTS(UUID);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1708001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------


--------------- Fragment begins: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801001_remove_regex_generator_type_from_artifact_properties_generator.sql');
COMMIT;


-- Change script: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql
ALTER TABLE artifactpropertiesgenerator DROP COLUMN regex;
ALTER TABLE artifactpropertiesgenerator DROP COLUMN generatorType;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------


--------------- Fragment begins: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql');
COMMIT;


-- Change script: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql
ALTER TABLE artifactplans ADD COLUMN pluggableArtifactConfigJson TEXT DEFAULT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------


--------------- Fragment begins: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801003_remove_environment_variables_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM environmentVariables
-- WHERE environmentVariables.id IN (
--   SELECT environmentVariables.id
--   FROM environmentVariables
--   INNER JOIN builds
--   ON
--     builds.id = environmentVariables.entityId
--   WHERE
--       environmentVariables.entityType = 'Job'
--     AND
--       builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801004_remove_artifact_plans_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPlans
-- WHERE artifactPlans.id IN (
--   SELECT artifactPlans.id
--   FROM artifactPlans
--   INNER JOIN builds
--     ON builds.id = artifactPlans.buildId
--   WHERE
--       artifactPlans.artifactType = 'file'
--     AND
--       builds.state = 'Completed'
-- );




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801005, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801005_remove_artifact_properties_generator_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPropertiesGenerator
-- WHERE ID IN (
--   SELECT artifactPropertiesGenerator.id
--   FROM artifactPropertiesGenerator
--   INNER JOIN builds
--     ON builds.id = artifactPropertiesGenerator.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801005 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801006, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801006_remove_resources_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801006: 1801006_remove_resources_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.
-- DELETE FROM resources
-- WHERE resources.id IN (
--   SELECT resources.id
--   FROM resources
--   INNER JOIN builds
--     ON builds.id = resources.buildId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801006 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801007, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801007_remove_job_agent_metadata_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM jobAgentMetadata
-- WHERE jobAgentMetadata.id IN (
--   SELECT jobAgentMetadata.id
--   FROM jobAgentMetadata
--   INNER JOIN builds
--     ON
--       builds.id = jobAgentMetadata.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801007 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802001_clear_username_and_comment_for_dependency_materials.sql');
COMMIT;


-- Change script: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql
UPDATE
  modifications
SET
  username = null, comment = null
WHERE
    pipelineid IS NOT NULL
  AND
    username = 'Unknown'
  AND
    comment = 'Unknown';



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------


--------------- Fragment begins: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802002_add_index_on_pipelines_name_and_id_column.sql');
COMMIT;


-- Change script: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_pipeline_name_id ON pipelines( name, id );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------


--------------- Fragment begins: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1804001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql');
COMMIT;


-- Change script: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql
ALTER TABLE PIPELINELABELCOUNTS ADD COLUMN caseInsensitivePipelineName CITEXT;
UPDATE PIPELINELABELCOUNTS set caseInsensitivePipelineName = pipelinename;
CREATE INDEX idx_pipelinelabelcounts_caseinsensitivepipelinename ON PIPELINELABELCOUNTS(caseInsensitivePipelineName);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1804001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------


--------------- Fragment begins: #1805001: 1805001_drop_preferred_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1805001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1805001_drop_preferred_table.sql');
COMMIT;


-- Change script: #1805001: 1805001_drop_preferred_table.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- See `230006_make_user_name_case_insensitive.sql`
-- This was a temp table created to make users' login-name case-insensitive
DROP TABLE preffered;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1805001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1805001: 1805001_drop_preferred_table.sql ---------------


--------------- Fragment begins: #1807001: 1807001_data_sharing_settings_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807001_data_sharing_settings_table.sql');
COMMIT;


-- Change script: #1807001: 1807001_data_sharing_settings_table.sql
CREATE SEQUENCE datasharingsettings_id_seq START WITH 1;

CREATE TABLE DataSharingSettings (
  id             BIGINT DEFAULT nextval('datasharingsettings_id_seq') PRIMARY KEY,
  allowSharing        BOOLEAN NOT NULL,
  updatedBy    VARCHAR(255),
  updatedOn    TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807001: 1807001_data_sharing_settings_table.sql ---------------


--------------- Fragment begins: #1807002: 1807002_usage_data_reporting_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807002_usage_data_reporting_table.sql');
COMMIT;


-- Change script: #1807002: 1807002_usage_data_reporting_table.sql
CREATE SEQUENCE usagedatareporting_id_seq START WITH 1;

CREATE TABLE UsageDataReporting (
  id             BIGINT DEFAULT nextval('usagedatareporting_id_seq') PRIMARY KEY,
  serverId       VARCHAR(255) NOT NULL,
  lastReportedAt TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807002: 1807002_usage_data_reporting_table.sql ---------------


--------------- Fragment begins: #1808001: 1808001_remove_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808001_remove_oauth_tables.sql');
COMMIT;


-- Change script: #1808001: 1808001_remove_oauth_tables.sql
DROP TABLE oauthtokens;
DROP SEQUENCE oauthtokens_id_seq;

DROP TABLE oauthauthorizations;
DROP SEQUENCE oauthauthorizations_id_seq;

DROP TABLE oauthclients;
DROP SEQUENCE oauthclients_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808001: 1808001_remove_oauth_tables.sql ---------------


--------------- Fragment begins: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808002_add_filters_and_version_to_pipeline_selections.sql');
COMMIT;


-- Change script: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

ALTER TABLE PipelineSelections ADD COLUMN filters TEXT;
ALTER TABLE PipelineSelections ADD COLUMN version INT DEFAULT 0 NOT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------

]; nested exception is org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at com.thoughtworks.go.postgresql.PostgresqlDatabase.upgrade(PostgresqlDatabase.java:110)
	at com.thoughtworks.go.server.database.DatabaseStrategy.upgrade(DatabaseStrategy.java:59)
	at com.thoughtworks.go.server.util.DatabaseUpgraderDataSourceFactory.upgradeDb(DatabaseUpgraderDataSourceFactory.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:311)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:134)
	... 88 common frames omitted
Caused by: org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [

--------------- Fragment begins: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303001_add_additional_data_field_to_modifications_table.sql');
COMMIT;


-- Change script: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql
ALTER TABLE modifications ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------


--------------- Fragment begins: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303002_add_index_to_builds_on_stageId.sql');
COMMIT;


-- Change script: #1303002: 1303002_add_index_to_builds_on_stageId.sql
CREATE INDEX idx_builds_stageId ON builds(stageId);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------


--------------- Fragment begins: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303003_add_index_to_stages_resources_tables.sql');
COMMIT;


-- Change script: #1303003: 1303003_add_index_to_stages_resources_tables.sql
CREATE INDEX idx_stages_pipelineId ON stages(pipelineid);
CREATE INDEX idx_resources_buildId ON resources(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------


--------------- Fragment begins: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303004_indexes_based_on_purge_tool.sql');
COMMIT;


-- Change script: #1303004: 1303004_indexes_based_on_purge_tool.sql
CREATE INDEX idx_properties_buildId ON properties(buildId);
CREATE INDEX idx_materials_pipelinename ON materials(pipelinename);
CREATE INDEX idx_artifactpropertiesgenerator_jobid ON artifactpropertiesgenerator(jobid);
CREATE INDEX idx_environmentvariables_entitytype ON environmentvariables(entitytype);
CREATE INDEX idx_stageartifactcleanupprohibited_pipelinename ON stageartifactcleanupprohibited(pipelinename);
CREATE INDEX idx_pipelineLabelCounts_pipelinename ON pipelineLabelCounts(pipelinename);




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------


--------------- Fragment begins: #1304001: 1304001_remove_luau_related_entries.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1304001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1304001_remove_luau_related_entries.sql');
COMMIT;


-- Change script: #1304001: 1304001_remove_luau_related_entries.sql
DROP TABLE IF EXISTS luau_groups_users;
DROP TABLE IF EXISTS luau_groups;
DROP TABLE IF EXISTS luaustate;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1304001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1304001: 1304001_remove_luau_related_entries.sql ---------------


--------------- Fragment begins: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1401001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1401001_recreating_trigger_because_of_cruise_to_go_change.sql');
COMMIT;


-- Change script: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql
SELECT (1);


UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1401001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------


--------------- Fragment begins: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403001_fix_null_artifacttype_on_artifactplans_table.sql');
COMMIT;


-- Change script: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql
UPDATE ARTIFACTPLANS SET ARTIFACTTYPE='file' WHERE ARTIFACTTYPE IS NULL;
COMMIT;

-- No undo as adding default value to mandatory field



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------


--------------- Fragment begins: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql');
COMMIT;


-- Change script: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

alter table builds add column runMultipleInstance boolean default false;

DROP VIEW _builds;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------


--------------- Fragment begins: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql');
COMMIT;


-- Change script: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelineselections RENAME COLUMN unselectedpipelines TO selections;

ALTER TABLE pipelineselections ADD COLUMN isblacklist BOOLEAN DEFAULT true;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------


--------------- Fragment begins: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501002_add_comment_column_to_pipelines.sql');
COMMIT;


-- Change script: #1501002: 1501002_add_comment_column_to_pipelines.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelines ADD COLUMN comment TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------


--------------- Fragment begins: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501003_add_additional_data_field_to_materials_table.sql');
COMMIT;


-- Change script: #1501003: 1501003_add_additional_data_field_to_materials_table.sql
ALTER TABLE materials ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------


--------------- Fragment begins: #1502001: 1502001_create_plugins_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1502001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1502001_create_plugins_table.sql');
COMMIT;


-- Change script: #1502001: 1502001_create_plugins_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE plugins_id_seq START WITH 1;
CREATE TABLE plugins (
    id              BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pluginId        VARCHAR(255) Not NULL,
    configuration   TEXT,
    UNIQUE (pluginId)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1502001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1502001: 1502001_create_plugins_table.sql ---------------


--------------- Fragment begins: #1503001: 1503001_remove_licensing_from_users.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503001_remove_licensing_from_users.sql');
COMMIT;


-- Change script: #1503001: 1503001_remove_licensing_from_users.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE users DROP COLUMN disableLicenseExpiryWarning;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503001: 1503001_remove_licensing_from_users.sql ---------------


--------------- Fragment begins: #1503002: 1503002_create_version_infos_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503002_create_version_infos_table.sql');
COMMIT;


-- Change script: #1503002: 1503002_create_version_infos_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2015 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE versioninfos_id_seq START WITH 1;
CREATE TABLE versioninfos (
    id                      BIGINT DEFAULT nextval('versioninfos_id_seq') PRIMARY KEY,
    componentName           VARCHAR(255) Not NULL,
    installedVersion        VARCHAR(100) Not NULL,
    latestVersion           VARCHAR(50),
    latestVersionUpdatedAt  TIMESTAMP,
    UNIQUE (componentName)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503002: 1503002_create_version_infos_table.sql ---------------


--------------- Fragment begins: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606001_add_index_to_buildstatetransitions.sql');
COMMIT;


-- Change script: #1606001: 1606001_add_index_to_buildstatetransitions.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_buildstatetransition_build_id ON buildstatetransitions(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------


--------------- Fragment begins: #1606002: 1606002_add_index_to_artifactplans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606002_add_index_to_artifactplans.sql');
COMMIT;


-- Change script: #1606002: 1606002_add_index_to_artifactplans.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_artifactplan_build_id ON artifactplans(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606002: 1606002_add_index_to_artifactplans.sql ---------------


--------------- Fragment begins: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1607001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1607001_create_agent_metadata_job_table.sql');
COMMIT;


-- Change script: #1607001: 1607001_create_agent_metadata_job_table.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE SEQUENCE jobagentmetadata_id_seq START WITH 1;
CREATE TABLE jobagentmetadata (
  id              BIGINT DEFAULT nextval('jobagentmetadata_id_seq') PRIMARY KEY,
  jobId           BIGINT UNIQUE NOT NULL,
  metadata        TEXT NOT NULL,
  metadataVersion VARCHAR(50),
  UNIQUE (jobId)
);

ALTER TABLE jobagentmetadata ADD CONSTRAINT fk_jobagentmetadata_jobs FOREIGN KEY (jobId) REFERENCES builds (id)
  ON DELETE CASCADE;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1607001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------


--------------- Fragment begins: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1610001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1610001_add_index_to_modifiedfiles.sql');
COMMIT;


-- Change script: #1610001: 1610001_add_index_to_modifiedfiles.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX CONCURRENTLY idx_modifiedfiles_modification_id ON modifiedfiles(modificationid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1610001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------


--------------- Fragment begins: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701001_remove_gadget_oauth_tables.sql');
COMMIT;


-- Change script: #1701001: 1701001_remove_gadget_oauth_tables.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

DROP TABLE gadgetOauthAuthorizationCodes;
DROP TABLE gadgetOauthAccessTokens;
DROP TABLE gadgetOauthClients;

DROP SEQUENCE gadgetOauthClients_id_seq;
DROP SEQUENCE gadgetOauthAccessTokens_id_seq;
DROP SEQUENCE gadgetOauthAuthorizationCodes_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------


--------------- Fragment begins: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701002_remove_materialproperties_id_seq.sql');
COMMIT;


-- Change script: #1701002: 1701002_remove_materialproperties_id_seq.sql
DROP SEQUENCE IF EXISTS materialProperties_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------


--------------- Fragment begins: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1702001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1702001_remove_build_cause_buffer_table.sql');
COMMIT;


-- Change script: #1702001: 1702001_remove_build_cause_buffer_table.sql
DROP TABLE BuildCauseBuffer;
DROP SEQUENCE buildcausebuffer_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1702001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------


--------------- Fragment begins: #1704001: 1704001_widen_agents_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704001_widen_agents_uuid_column.sql');
COMMIT;


-- Change script: #1704001: 1704001_widen_agents_uuid_column.sql

ALTER TABLE agents ALTER COLUMN uuid TYPE VARCHAR(255);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704001: 1704001_widen_agents_uuid_column.sql ---------------


--------------- Fragment begins: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704002_widen_builds_agent_uuid_column.sql');
COMMIT;


-- Change script: #1704002: 1704002_widen_builds_agent_uuid_column.sql

DROP VIEW _builds;

ALTER TABLE builds ALTER COLUMN agentUuid TYPE VARCHAR(255);

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------


--------------- Fragment begins: #1704003: 1704003_pipeline_state_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704003_pipeline_state_table.sql');
COMMIT;


-- Change script: #1704003: 1704003_pipeline_state_table.sql
CREATE SEQUENCE pipelinestates_id_seq START WITH 1;
CREATE TABLE PipelineStates (
    id                      BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pipelineName            CITEXT NOT NULL,
    locked                  BOOLEAN,
    lockedByPipelineId              BIGINT
);

ALTER TABLE PipelineStates ADD CONSTRAINT unique_pipeline_state UNIQUE (pipelineName);

INSERT INTO PipelineStates (pipelineName, locked, lockedByPipelineId) (select name, locked, id from pipelines where id in (select max(id) from pipelines where locked = true group by name));

DROP VIEW _stages;

CREATE VIEW _stages AS
    SELECT s.*,
      p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, ps.locked, p.naturalOrder
    FROM stages s
    INNER JOIN pipelines p ON p.id = s.pipelineId
    LEFT OUTER JOIN PipelineStates ps on ps.lockedByPipelineId = s.pipelineId;


ALTER TABLE pipelines drop column locked;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704003: 1704003_pipeline_state_table.sql ---------------


--------------- Fragment begins: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704004_pipeline_states_sequence_reset.sql');
COMMIT;


-- Change script: #1704004: 1704004_pipeline_states_sequence_reset.sql
-- As part of 1704003_pipeline_state_table.sql, PipelineStates was incorrectly setup to use plugins_id_seq instead of pipelinestates_id_seq.
-- This migration resets the sequence pipelinestates_id_seq to be the max(id) of PipelineStates, and alters PipelineStates to use the correct sequence.
-- Since sequences are not explicitly defined for H2, a corresponding migration for H2 is not required.

-- This delta is being backported to all releases starting from 17.4 until 17.10 as part of the patch release.

do $$
declare maxid int;
begin
    select max(id) from pipelinestates into maxid;
    IF maxid IS NULL THEN
        maxid = 1;
    END IF;
    execute 'alter SEQUENCE pipelinestates_id_seq RESTART with '|| maxid;
end;
$$ language plpgsql;

ALTER table PipelineStates alter column ID set default nextval('pipelinestates_id_seq');



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------


--------------- Fragment begins: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1708001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1708001_add_hostname_and_ip_to_agents_table.sql');
COMMIT;


-- Change script: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql
ALTER TABLE agents ADD COLUMN hostname VARCHAR(255) DEFAULT NULL;
ALTER TABLE agents ADD COLUMN ipaddress VARCHAR(50) DEFAULT NULL;
CREATE INDEX idx_agent_uuid ON AGENTS(UUID);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1708001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------


--------------- Fragment begins: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801001_remove_regex_generator_type_from_artifact_properties_generator.sql');
COMMIT;


-- Change script: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql
ALTER TABLE artifactpropertiesgenerator DROP COLUMN regex;
ALTER TABLE artifactpropertiesgenerator DROP COLUMN generatorType;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------


--------------- Fragment begins: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql');
COMMIT;


-- Change script: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql
ALTER TABLE artifactplans ADD COLUMN pluggableArtifactConfigJson TEXT DEFAULT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------


--------------- Fragment begins: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801003_remove_environment_variables_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM environmentVariables
-- WHERE environmentVariables.id IN (
--   SELECT environmentVariables.id
--   FROM environmentVariables
--   INNER JOIN builds
--   ON
--     builds.id = environmentVariables.entityId
--   WHERE
--       environmentVariables.entityType = 'Job'
--     AND
--       builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801004_remove_artifact_plans_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPlans
-- WHERE artifactPlans.id IN (
--   SELECT artifactPlans.id
--   FROM artifactPlans
--   INNER JOIN builds
--     ON builds.id = artifactPlans.buildId
--   WHERE
--       artifactPlans.artifactType = 'file'
--     AND
--       builds.state = 'Completed'
-- );




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801005, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801005_remove_artifact_properties_generator_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPropertiesGenerator
-- WHERE ID IN (
--   SELECT artifactPropertiesGenerator.id
--   FROM artifactPropertiesGenerator
--   INNER JOIN builds
--     ON builds.id = artifactPropertiesGenerator.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801005 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801006, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801006_remove_resources_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801006: 1801006_remove_resources_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.
-- DELETE FROM resources
-- WHERE resources.id IN (
--   SELECT resources.id
--   FROM resources
--   INNER JOIN builds
--     ON builds.id = resources.buildId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801006 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801007, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801007_remove_job_agent_metadata_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM jobAgentMetadata
-- WHERE jobAgentMetadata.id IN (
--   SELECT jobAgentMetadata.id
--   FROM jobAgentMetadata
--   INNER JOIN builds
--     ON
--       builds.id = jobAgentMetadata.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801007 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802001_clear_username_and_comment_for_dependency_materials.sql');
COMMIT;


-- Change script: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql
UPDATE
  modifications
SET
  username = null, comment = null
WHERE
    pipelineid IS NOT NULL
  AND
    username = 'Unknown'
  AND
    comment = 'Unknown';



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------


--------------- Fragment begins: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802002_add_index_on_pipelines_name_and_id_column.sql');
COMMIT;


-- Change script: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_pipeline_name_id ON pipelines( name, id );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------


--------------- Fragment begins: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1804001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql');
COMMIT;


-- Change script: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql
ALTER TABLE PIPELINELABELCOUNTS ADD COLUMN caseInsensitivePipelineName CITEXT;
UPDATE PIPELINELABELCOUNTS set caseInsensitivePipelineName = pipelinename;
CREATE INDEX idx_pipelinelabelcounts_caseinsensitivepipelinename ON PIPELINELABELCOUNTS(caseInsensitivePipelineName);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1804001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------


--------------- Fragment begins: #1805001: 1805001_drop_preferred_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1805001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1805001_drop_preferred_table.sql');
COMMIT;


-- Change script: #1805001: 1805001_drop_preferred_table.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- See `230006_make_user_name_case_insensitive.sql`
-- This was a temp table created to make users' login-name case-insensitive
DROP TABLE preffered;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1805001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1805001: 1805001_drop_preferred_table.sql ---------------


--------------- Fragment begins: #1807001: 1807001_data_sharing_settings_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807001_data_sharing_settings_table.sql');
COMMIT;


-- Change script: #1807001: 1807001_data_sharing_settings_table.sql
CREATE SEQUENCE datasharingsettings_id_seq START WITH 1;

CREATE TABLE DataSharingSettings (
  id             BIGINT DEFAULT nextval('datasharingsettings_id_seq') PRIMARY KEY,
  allowSharing        BOOLEAN NOT NULL,
  updatedBy    VARCHAR(255),
  updatedOn    TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807001: 1807001_data_sharing_settings_table.sql ---------------


--------------- Fragment begins: #1807002: 1807002_usage_data_reporting_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807002_usage_data_reporting_table.sql');
COMMIT;


-- Change script: #1807002: 1807002_usage_data_reporting_table.sql
CREATE SEQUENCE usagedatareporting_id_seq START WITH 1;

CREATE TABLE UsageDataReporting (
  id             BIGINT DEFAULT nextval('usagedatareporting_id_seq') PRIMARY KEY,
  serverId       VARCHAR(255) NOT NULL,
  lastReportedAt TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807002: 1807002_usage_data_reporting_table.sql ---------------


--------------- Fragment begins: #1808001: 1808001_remove_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808001_remove_oauth_tables.sql');
COMMIT;


-- Change script: #1808001: 1808001_remove_oauth_tables.sql
DROP TABLE oauthtokens;
DROP SEQUENCE oauthtokens_id_seq;

DROP TABLE oauthauthorizations;
DROP SEQUENCE oauthauthorizations_id_seq;

DROP TABLE oauthclients;
DROP SEQUENCE oauthclients_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808001: 1808001_remove_oauth_tables.sql ---------------


--------------- Fragment begins: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808002_add_filters_and_version_to_pipeline_selections.sql');
COMMIT;


-- Change script: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

ALTER TABLE PipelineSelections ADD COLUMN filters TEXT;
ALTER TABLE PipelineSelections ADD COLUMN version INT DEFAULT 0 NOT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------

]; nested exception is org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:230)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:419)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:445)
	at com.thoughtworks.go.postgresql.PostgresqlDatabase.upgrade(PostgresqlDatabase.java:107)
	... 97 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2157)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1886)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:255)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:555)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:403)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:395)
	at org.apache.commons.dbcp.DelegatingStatement.execute(DelegatingStatement.java:264)
	at org.apache.commons.dbcp.DelegatingStatement.execute(DelegatingStatement.java:264)
	at org.springframework.jdbc.core.JdbcTemplate$1ExecuteStatementCallback.doInStatement(JdbcTemplate.java:436)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:408)
	... 99 common frames omitted
2018-12-18 11:15:25,419 ERROR [main] GoServer:76 - ERROR: Failed to start GoCD server.
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stagesQuery' defined in ServletContext resource [/WEB-INF/applicationContext-shine-server.xml]: Cannot resolve reference to bean 'lazyStageGraphLoader' while setting constructor argument; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'lazyStageGraphLoader' defined in file [/go-working-dir/work/jetty-0.0.0.0-8153-cruise.war-_go-any-/webapp/WEB-INF/classes/com/thoughtworks/studios/shine/cruise/stage/details/LazyStageGraphLoader.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlMapClient' defined in ServletContext resource [/WEB-INF/applicationContext-dataLocalAccess.xml]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'databaseUpgraderDataSourceFactory': Invocation of init method failed; nested exception is java.lang.RuntimeException: org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [

--------------- Fragment begins: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303001_add_additional_data_field_to_modifications_table.sql');
COMMIT;


-- Change script: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql
ALTER TABLE modifications ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------


--------------- Fragment begins: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303002_add_index_to_builds_on_stageId.sql');
COMMIT;


-- Change script: #1303002: 1303002_add_index_to_builds_on_stageId.sql
CREATE INDEX idx_builds_stageId ON builds(stageId);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------


--------------- Fragment begins: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303003_add_index_to_stages_resources_tables.sql');
COMMIT;


-- Change script: #1303003: 1303003_add_index_to_stages_resources_tables.sql
CREATE INDEX idx_stages_pipelineId ON stages(pipelineid);
CREATE INDEX idx_resources_buildId ON resources(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------


--------------- Fragment begins: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303004_indexes_based_on_purge_tool.sql');
COMMIT;


-- Change script: #1303004: 1303004_indexes_based_on_purge_tool.sql
CREATE INDEX idx_properties_buildId ON properties(buildId);
CREATE INDEX idx_materials_pipelinename ON materials(pipelinename);
CREATE INDEX idx_artifactpropertiesgenerator_jobid ON artifactpropertiesgenerator(jobid);
CREATE INDEX idx_environmentvariables_entitytype ON environmentvariables(entitytype);
CREATE INDEX idx_stageartifactcleanupprohibited_pipelinename ON stageartifactcleanupprohibited(pipelinename);
CREATE INDEX idx_pipelineLabelCounts_pipelinename ON pipelineLabelCounts(pipelinename);




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------


--------------- Fragment begins: #1304001: 1304001_remove_luau_related_entries.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1304001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1304001_remove_luau_related_entries.sql');
COMMIT;


-- Change script: #1304001: 1304001_remove_luau_related_entries.sql
DROP TABLE IF EXISTS luau_groups_users;
DROP TABLE IF EXISTS luau_groups;
DROP TABLE IF EXISTS luaustate;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1304001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1304001: 1304001_remove_luau_related_entries.sql ---------------


--------------- Fragment begins: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1401001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1401001_recreating_trigger_because_of_cruise_to_go_change.sql');
COMMIT;


-- Change script: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql
SELECT (1);


UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1401001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------


--------------- Fragment begins: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403001_fix_null_artifacttype_on_artifactplans_table.sql');
COMMIT;


-- Change script: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql
UPDATE ARTIFACTPLANS SET ARTIFACTTYPE='file' WHERE ARTIFACTTYPE IS NULL;
COMMIT;

-- No undo as adding default value to mandatory field



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------


--------------- Fragment begins: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql');
COMMIT;


-- Change script: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

alter table builds add column runMultipleInstance boolean default false;

DROP VIEW _builds;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------


--------------- Fragment begins: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql');
COMMIT;


-- Change script: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelineselections RENAME COLUMN unselectedpipelines TO selections;

ALTER TABLE pipelineselections ADD COLUMN isblacklist BOOLEAN DEFAULT true;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------


--------------- Fragment begins: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501002_add_comment_column_to_pipelines.sql');
COMMIT;


-- Change script: #1501002: 1501002_add_comment_column_to_pipelines.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelines ADD COLUMN comment TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------


--------------- Fragment begins: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501003_add_additional_data_field_to_materials_table.sql');
COMMIT;


-- Change script: #1501003: 1501003_add_additional_data_field_to_materials_table.sql
ALTER TABLE materials ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------


--------------- Fragment begins: #1502001: 1502001_create_plugins_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1502001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1502001_create_plugins_table.sql');
COMMIT;


-- Change script: #1502001: 1502001_create_plugins_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE plugins_id_seq START WITH 1;
CREATE TABLE plugins (
    id              BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pluginId        VARCHAR(255) Not NULL,
    configuration   TEXT,
    UNIQUE (pluginId)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1502001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1502001: 1502001_create_plugins_table.sql ---------------


--------------- Fragment begins: #1503001: 1503001_remove_licensing_from_users.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503001_remove_licensing_from_users.sql');
COMMIT;


-- Change script: #1503001: 1503001_remove_licensing_from_users.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE users DROP COLUMN disableLicenseExpiryWarning;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503001: 1503001_remove_licensing_from_users.sql ---------------


--------------- Fragment begins: #1503002: 1503002_create_version_infos_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503002_create_version_infos_table.sql');
COMMIT;


-- Change script: #1503002: 1503002_create_version_infos_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2015 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE versioninfos_id_seq START WITH 1;
CREATE TABLE versioninfos (
    id                      BIGINT DEFAULT nextval('versioninfos_id_seq') PRIMARY KEY,
    componentName           VARCHAR(255) Not NULL,
    installedVersion        VARCHAR(100) Not NULL,
    latestVersion           VARCHAR(50),
    latestVersionUpdatedAt  TIMESTAMP,
    UNIQUE (componentName)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503002: 1503002_create_version_infos_table.sql ---------------


--------------- Fragment begins: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606001_add_index_to_buildstatetransitions.sql');
COMMIT;


-- Change script: #1606001: 1606001_add_index_to_buildstatetransitions.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_buildstatetransition_build_id ON buildstatetransitions(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------


--------------- Fragment begins: #1606002: 1606002_add_index_to_artifactplans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606002_add_index_to_artifactplans.sql');
COMMIT;


-- Change script: #1606002: 1606002_add_index_to_artifactplans.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_artifactplan_build_id ON artifactplans(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606002: 1606002_add_index_to_artifactplans.sql ---------------


--------------- Fragment begins: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1607001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1607001_create_agent_metadata_job_table.sql');
COMMIT;


-- Change script: #1607001: 1607001_create_agent_metadata_job_table.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE SEQUENCE jobagentmetadata_id_seq START WITH 1;
CREATE TABLE jobagentmetadata (
  id              BIGINT DEFAULT nextval('jobagentmetadata_id_seq') PRIMARY KEY,
  jobId           BIGINT UNIQUE NOT NULL,
  metadata        TEXT NOT NULL,
  metadataVersion VARCHAR(50),
  UNIQUE (jobId)
);

ALTER TABLE jobagentmetadata ADD CONSTRAINT fk_jobagentmetadata_jobs FOREIGN KEY (jobId) REFERENCES builds (id)
  ON DELETE CASCADE;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1607001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------


--------------- Fragment begins: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1610001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1610001_add_index_to_modifiedfiles.sql');
COMMIT;


-- Change script: #1610001: 1610001_add_index_to_modifiedfiles.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX CONCURRENTLY idx_modifiedfiles_modification_id ON modifiedfiles(modificationid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1610001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------


--------------- Fragment begins: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701001_remove_gadget_oauth_tables.sql');
COMMIT;


-- Change script: #1701001: 1701001_remove_gadget_oauth_tables.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

DROP TABLE gadgetOauthAuthorizationCodes;
DROP TABLE gadgetOauthAccessTokens;
DROP TABLE gadgetOauthClients;

DROP SEQUENCE gadgetOauthClients_id_seq;
DROP SEQUENCE gadgetOauthAccessTokens_id_seq;
DROP SEQUENCE gadgetOauthAuthorizationCodes_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------


--------------- Fragment begins: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701002_remove_materialproperties_id_seq.sql');
COMMIT;


-- Change script: #1701002: 1701002_remove_materialproperties_id_seq.sql
DROP SEQUENCE IF EXISTS materialProperties_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------


--------------- Fragment begins: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1702001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1702001_remove_build_cause_buffer_table.sql');
COMMIT;


-- Change script: #1702001: 1702001_remove_build_cause_buffer_table.sql
DROP TABLE BuildCauseBuffer;
DROP SEQUENCE buildcausebuffer_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1702001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------


--------------- Fragment begins: #1704001: 1704001_widen_agents_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704001_widen_agents_uuid_column.sql');
COMMIT;


-- Change script: #1704001: 1704001_widen_agents_uuid_column.sql

ALTER TABLE agents ALTER COLUMN uuid TYPE VARCHAR(255);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704001: 1704001_widen_agents_uuid_column.sql ---------------


--------------- Fragment begins: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704002_widen_builds_agent_uuid_column.sql');
COMMIT;


-- Change script: #1704002: 1704002_widen_builds_agent_uuid_column.sql

DROP VIEW _builds;

ALTER TABLE builds ALTER COLUMN agentUuid TYPE VARCHAR(255);

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------


--------------- Fragment begins: #1704003: 1704003_pipeline_state_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704003_pipeline_state_table.sql');
COMMIT;


-- Change script: #1704003: 1704003_pipeline_state_table.sql
CREATE SEQUENCE pipelinestates_id_seq START WITH 1;
CREATE TABLE PipelineStates (
    id                      BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pipelineName            CITEXT NOT NULL,
    locked                  BOOLEAN,
    lockedByPipelineId              BIGINT
);

ALTER TABLE PipelineStates ADD CONSTRAINT unique_pipeline_state UNIQUE (pipelineName);

INSERT INTO PipelineStates (pipelineName, locked, lockedByPipelineId) (select name, locked, id from pipelines where id in (select max(id) from pipelines where locked = true group by name));

DROP VIEW _stages;

CREATE VIEW _stages AS
    SELECT s.*,
      p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, ps.locked, p.naturalOrder
    FROM stages s
    INNER JOIN pipelines p ON p.id = s.pipelineId
    LEFT OUTER JOIN PipelineStates ps on ps.lockedByPipelineId = s.pipelineId;


ALTER TABLE pipelines drop column locked;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704003: 1704003_pipeline_state_table.sql ---------------


--------------- Fragment begins: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704004_pipeline_states_sequence_reset.sql');
COMMIT;


-- Change script: #1704004: 1704004_pipeline_states_sequence_reset.sql
-- As part of 1704003_pipeline_state_table.sql, PipelineStates was incorrectly setup to use plugins_id_seq instead of pipelinestates_id_seq.
-- This migration resets the sequence pipelinestates_id_seq to be the max(id) of PipelineStates, and alters PipelineStates to use the correct sequence.
-- Since sequences are not explicitly defined for H2, a corresponding migration for H2 is not required.

-- This delta is being backported to all releases starting from 17.4 until 17.10 as part of the patch release.

do $$
declare maxid int;
begin
    select max(id) from pipelinestates into maxid;
    IF maxid IS NULL THEN
        maxid = 1;
    END IF;
    execute 'alter SEQUENCE pipelinestates_id_seq RESTART with '|| maxid;
end;
$$ language plpgsql;

ALTER table PipelineStates alter column ID set default nextval('pipelinestates_id_seq');



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------


--------------- Fragment begins: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1708001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1708001_add_hostname_and_ip_to_agents_table.sql');
COMMIT;


-- Change script: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql
ALTER TABLE agents ADD COLUMN hostname VARCHAR(255) DEFAULT NULL;
ALTER TABLE agents ADD COLUMN ipaddress VARCHAR(50) DEFAULT NULL;
CREATE INDEX idx_agent_uuid ON AGENTS(UUID);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1708001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------


--------------- Fragment begins: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801001_remove_regex_generator_type_from_artifact_properties_generator.sql');
COMMIT;


-- Change script: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql
ALTER TABLE artifactpropertiesgenerator DROP COLUMN regex;
ALTER TABLE artifactpropertiesgenerator DROP COLUMN generatorType;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------


--------------- Fragment begins: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql');
COMMIT;


-- Change script: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql
ALTER TABLE artifactplans ADD COLUMN pluggableArtifactConfigJson TEXT DEFAULT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------


--------------- Fragment begins: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801003_remove_environment_variables_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM environmentVariables
-- WHERE environmentVariables.id IN (
--   SELECT environmentVariables.id
--   FROM environmentVariables
--   INNER JOIN builds
--   ON
--     builds.id = environmentVariables.entityId
--   WHERE
--       environmentVariables.entityType = 'Job'
--     AND
--       builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801004_remove_artifact_plans_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPlans
-- WHERE artifactPlans.id IN (
--   SELECT artifactPlans.id
--   FROM artifactPlans
--   INNER JOIN builds
--     ON builds.id = artifactPlans.buildId
--   WHERE
--       artifactPlans.artifactType = 'file'
--     AND
--       builds.state = 'Completed'
-- );




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801005, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801005_remove_artifact_properties_generator_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPropertiesGenerator
-- WHERE ID IN (
--   SELECT artifactPropertiesGenerator.id
--   FROM artifactPropertiesGenerator
--   INNER JOIN builds
--     ON builds.id = artifactPropertiesGenerator.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801005 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801006, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801006_remove_resources_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801006: 1801006_remove_resources_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.
-- DELETE FROM resources
-- WHERE resources.id IN (
--   SELECT resources.id
--   FROM resources
--   INNER JOIN builds
--     ON builds.id = resources.buildId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801006 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801007, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801007_remove_job_agent_metadata_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM jobAgentMetadata
-- WHERE jobAgentMetadata.id IN (
--   SELECT jobAgentMetadata.id
--   FROM jobAgentMetadata
--   INNER JOIN builds
--     ON
--       builds.id = jobAgentMetadata.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801007 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802001_clear_username_and_comment_for_dependency_materials.sql');
COMMIT;


-- Change script: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql
UPDATE
  modifications
SET
  username = null, comment = null
WHERE
    pipelineid IS NOT NULL
  AND
    username = 'Unknown'
  AND
    comment = 'Unknown';



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------


--------------- Fragment begins: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802002_add_index_on_pipelines_name_and_id_column.sql');
COMMIT;


-- Change script: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_pipeline_name_id ON pipelines( name, id );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------


--------------- Fragment begins: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1804001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql');
COMMIT;


-- Change script: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql
ALTER TABLE PIPELINELABELCOUNTS ADD COLUMN caseInsensitivePipelineName CITEXT;
UPDATE PIPELINELABELCOUNTS set caseInsensitivePipelineName = pipelinename;
CREATE INDEX idx_pipelinelabelcounts_caseinsensitivepipelinename ON PIPELINELABELCOUNTS(caseInsensitivePipelineName);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1804001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------


--------------- Fragment begins: #1805001: 1805001_drop_preferred_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1805001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1805001_drop_preferred_table.sql');
COMMIT;


-- Change script: #1805001: 1805001_drop_preferred_table.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- See `230006_make_user_name_case_insensitive.sql`
-- This was a temp table created to make users' login-name case-insensitive
DROP TABLE preffered;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1805001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1805001: 1805001_drop_preferred_table.sql ---------------


--------------- Fragment begins: #1807001: 1807001_data_sharing_settings_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807001_data_sharing_settings_table.sql');
COMMIT;


-- Change script: #1807001: 1807001_data_sharing_settings_table.sql
CREATE SEQUENCE datasharingsettings_id_seq START WITH 1;

CREATE TABLE DataSharingSettings (
  id             BIGINT DEFAULT nextval('datasharingsettings_id_seq') PRIMARY KEY,
  allowSharing        BOOLEAN NOT NULL,
  updatedBy    VARCHAR(255),
  updatedOn    TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807001: 1807001_data_sharing_settings_table.sql ---------------


--------------- Fragment begins: #1807002: 1807002_usage_data_reporting_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807002_usage_data_reporting_table.sql');
COMMIT;


-- Change script: #1807002: 1807002_usage_data_reporting_table.sql
CREATE SEQUENCE usagedatareporting_id_seq START WITH 1;

CREATE TABLE UsageDataReporting (
  id             BIGINT DEFAULT nextval('usagedatareporting_id_seq') PRIMARY KEY,
  serverId       VARCHAR(255) NOT NULL,
  lastReportedAt TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807002: 1807002_usage_data_reporting_table.sql ---------------


--------------- Fragment begins: #1808001: 1808001_remove_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808001_remove_oauth_tables.sql');
COMMIT;


-- Change script: #1808001: 1808001_remove_oauth_tables.sql
DROP TABLE oauthtokens;
DROP SEQUENCE oauthtokens_id_seq;

DROP TABLE oauthauthorizations;
DROP SEQUENCE oauthauthorizations_id_seq;

DROP TABLE oauthclients;
DROP SEQUENCE oauthclients_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808001: 1808001_remove_oauth_tables.sql ---------------


--------------- Fragment begins: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808002_add_filters_and_version_to_pipeline_selections.sql');
COMMIT;


-- Change script: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

ALTER TABLE PipelineSelections ADD COLUMN filters TEXT;
ALTER TABLE PipelineSelections ADD COLUMN version INT DEFAULT 0 NOT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------

]; nested exception is org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:359)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:634)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:145)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1100)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:443)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:325)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:890)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:532)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:853)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:344)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1515)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1477)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:785)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:261)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:41)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:188)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:150)
	at com.thoughtworks.go.server.Jetty9Server.startHandlers(Jetty9Server.java:187)
	at com.thoughtworks.go.server.Jetty9Server.start(Jetty9Server.java:137)
	at com.thoughtworks.go.server.GoServer.startServer(GoServer.java:72)
	at com.thoughtworks.go.server.GoServer.go(GoServer.java:64)
	at com.thoughtworks.go.server.util.GoLauncher.main(GoLauncher.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.thoughtworks.gocd.Boot.run(Boot.java:111)
	at com.thoughtworks.gocd.Boot.main(Boot.java:57)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'lazyStageGraphLoader' defined in file [/go-working-dir/work/jetty-0.0.0.0-8153-cruise.war-_go-any-/webapp/WEB-INF/classes/com/thoughtworks/studios/shine/cruise/stage/details/LazyStageGraphLoader.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlMapClient' defined in ServletContext resource [/WEB-INF/applicationContext-dataLocalAccess.xml]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'databaseUpgraderDataSourceFactory': Invocation of init method failed; nested exception is java.lang.RuntimeException: org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [

--------------- Fragment begins: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303001_add_additional_data_field_to_modifications_table.sql');
COMMIT;


-- Change script: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql
ALTER TABLE modifications ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------


--------------- Fragment begins: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303002_add_index_to_builds_on_stageId.sql');
COMMIT;


-- Change script: #1303002: 1303002_add_index_to_builds_on_stageId.sql
CREATE INDEX idx_builds_stageId ON builds(stageId);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------


--------------- Fragment begins: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303003_add_index_to_stages_resources_tables.sql');
COMMIT;


-- Change script: #1303003: 1303003_add_index_to_stages_resources_tables.sql
CREATE INDEX idx_stages_pipelineId ON stages(pipelineid);
CREATE INDEX idx_resources_buildId ON resources(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------


--------------- Fragment begins: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303004_indexes_based_on_purge_tool.sql');
COMMIT;


-- Change script: #1303004: 1303004_indexes_based_on_purge_tool.sql
CREATE INDEX idx_properties_buildId ON properties(buildId);
CREATE INDEX idx_materials_pipelinename ON materials(pipelinename);
CREATE INDEX idx_artifactpropertiesgenerator_jobid ON artifactpropertiesgenerator(jobid);
CREATE INDEX idx_environmentvariables_entitytype ON environmentvariables(entitytype);
CREATE INDEX idx_stageartifactcleanupprohibited_pipelinename ON stageartifactcleanupprohibited(pipelinename);
CREATE INDEX idx_pipelineLabelCounts_pipelinename ON pipelineLabelCounts(pipelinename);




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------


--------------- Fragment begins: #1304001: 1304001_remove_luau_related_entries.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1304001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1304001_remove_luau_related_entries.sql');
COMMIT;


-- Change script: #1304001: 1304001_remove_luau_related_entries.sql
DROP TABLE IF EXISTS luau_groups_users;
DROP TABLE IF EXISTS luau_groups;
DROP TABLE IF EXISTS luaustate;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1304001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1304001: 1304001_remove_luau_related_entries.sql ---------------


--------------- Fragment begins: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1401001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1401001_recreating_trigger_because_of_cruise_to_go_change.sql');
COMMIT;


-- Change script: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql
SELECT (1);


UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1401001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------


--------------- Fragment begins: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403001_fix_null_artifacttype_on_artifactplans_table.sql');
COMMIT;


-- Change script: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql
UPDATE ARTIFACTPLANS SET ARTIFACTTYPE='file' WHERE ARTIFACTTYPE IS NULL;
COMMIT;

-- No undo as adding default value to mandatory field



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------


--------------- Fragment begins: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql');
COMMIT;


-- Change script: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

alter table builds add column runMultipleInstance boolean default false;

DROP VIEW _builds;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------


--------------- Fragment begins: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql');
COMMIT;


-- Change script: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelineselections RENAME COLUMN unselectedpipelines TO selections;

ALTER TABLE pipelineselections ADD COLUMN isblacklist BOOLEAN DEFAULT true;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------


--------------- Fragment begins: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501002_add_comment_column_to_pipelines.sql');
COMMIT;


-- Change script: #1501002: 1501002_add_comment_column_to_pipelines.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelines ADD COLUMN comment TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------


--------------- Fragment begins: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501003_add_additional_data_field_to_materials_table.sql');
COMMIT;


-- Change script: #1501003: 1501003_add_additional_data_field_to_materials_table.sql
ALTER TABLE materials ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------


--------------- Fragment begins: #1502001: 1502001_create_plugins_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1502001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1502001_create_plugins_table.sql');
COMMIT;


-- Change script: #1502001: 1502001_create_plugins_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE plugins_id_seq START WITH 1;
CREATE TABLE plugins (
    id              BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pluginId        VARCHAR(255) Not NULL,
    configuration   TEXT,
    UNIQUE (pluginId)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1502001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1502001: 1502001_create_plugins_table.sql ---------------


--------------- Fragment begins: #1503001: 1503001_remove_licensing_from_users.sql ---------------
ERROR: Failed to start GoCD server. Please check the logs.
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503001_remove_licensing_from_users.sql');
COMMIT;


-- Change script: #1503001: 1503001_remove_licensing_from_users.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE users DROP COLUMN disableLicenseExpiryWarning;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503001: 1503001_remove_licensing_from_users.sql ---------------


--------------- Fragment begins: #1503002: 1503002_create_version_infos_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503002_create_version_infos_table.sql');
COMMIT;


-- Change script: #1503002: 1503002_create_version_infos_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2015 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE versioninfos_id_seq START WITH 1;
CREATE TABLE versioninfos (
    id                      BIGINT DEFAULT nextval('versioninfos_id_seq') PRIMARY KEY,
    componentName           VARCHAR(255) Not NULL,
    installedVersion        VARCHAR(100) Not NULL,
    latestVersion           VARCHAR(50),
    latestVersionUpdatedAt  TIMESTAMP,
    UNIQUE (componentName)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503002: 1503002_create_version_infos_table.sql ---------------


--------------- Fragment begins: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606001_add_index_to_buildstatetransitions.sql');
COMMIT;


-- Change script: #1606001: 1606001_add_index_to_buildstatetransitions.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_buildstatetransition_build_id ON buildstatetransitions(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------


--------------- Fragment begins: #1606002: 1606002_add_index_to_artifactplans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606002_add_index_to_artifactplans.sql');
COMMIT;


-- Change script: #1606002: 1606002_add_index_to_artifactplans.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_artifactplan_build_id ON artifactplans(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606002: 1606002_add_index_to_artifactplans.sql ---------------


--------------- Fragment begins: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1607001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1607001_create_agent_metadata_job_table.sql');
COMMIT;


-- Change script: #1607001: 1607001_create_agent_metadata_job_table.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE SEQUENCE jobagentmetadata_id_seq START WITH 1;
CREATE TABLE jobagentmetadata (
  id              BIGINT DEFAULT nextval('jobagentmetadata_id_seq') PRIMARY KEY,
  jobId           BIGINT UNIQUE NOT NULL,
  metadata        TEXT NOT NULL,
  metadataVersion VARCHAR(50),
  UNIQUE (jobId)
);

ALTER TABLE jobagentmetadata ADD CONSTRAINT fk_jobagentmetadata_jobs FOREIGN KEY (jobId) REFERENCES builds (id)
  ON DELETE CASCADE;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1607001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------


--------------- Fragment begins: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1610001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1610001_add_index_to_modifiedfiles.sql');
COMMIT;


-- Change script: #1610001: 1610001_add_index_to_modifiedfiles.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX CONCURRENTLY idx_modifiedfiles_modification_id ON modifiedfiles(modificationid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1610001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------


--------------- Fragment begins: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701001_remove_gadget_oauth_tables.sql');
COMMIT;


-- Change script: #1701001: 1701001_remove_gadget_oauth_tables.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

DROP TABLE gadgetOauthAuthorizationCodes;
DROP TABLE gadgetOauthAccessTokens;
DROP TABLE gadgetOauthClients;

DROP SEQUENCE gadgetOauthClients_id_seq;
DROP SEQUENCE gadgetOauthAccessTokens_id_seq;
DROP SEQUENCE gadgetOauthAuthorizationCodes_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------


--------------- Fragment begins: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701002_remove_materialproperties_id_seq.sql');
COMMIT;


-- Change script: #1701002: 1701002_remove_materialproperties_id_seq.sql
DROP SEQUENCE IF EXISTS materialProperties_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------


--------------- Fragment begins: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1702001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1702001_remove_build_cause_buffer_table.sql');
COMMIT;


-- Change script: #1702001: 1702001_remove_build_cause_buffer_table.sql
DROP TABLE BuildCauseBuffer;
DROP SEQUENCE buildcausebuffer_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1702001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------


--------------- Fragment begins: #1704001: 1704001_widen_agents_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704001_widen_agents_uuid_column.sql');
COMMIT;


-- Change script: #1704001: 1704001_widen_agents_uuid_column.sql

ALTER TABLE agents ALTER COLUMN uuid TYPE VARCHAR(255);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704001: 1704001_widen_agents_uuid_column.sql ---------------


--------------- Fragment begins: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704002_widen_builds_agent_uuid_column.sql');
COMMIT;


-- Change script: #1704002: 1704002_widen_builds_agent_uuid_column.sql

DROP VIEW _builds;

ALTER TABLE builds ALTER COLUMN agentUuid TYPE VARCHAR(255);

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------


--------------- Fragment begins: #1704003: 1704003_pipeline_state_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704003_pipeline_state_table.sql');
COMMIT;


-- Change script: #1704003: 1704003_pipeline_state_table.sql
CREATE SEQUENCE pipelinestates_id_seq START WITH 1;
CREATE TABLE PipelineStates (
    id                      BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pipelineName            CITEXT NOT NULL,
    locked                  BOOLEAN,
    lockedByPipelineId              BIGINT
);

ALTER TABLE PipelineStates ADD CONSTRAINT unique_pipeline_state UNIQUE (pipelineName);

INSERT INTO PipelineStates (pipelineName, locked, lockedByPipelineId) (select name, locked, id from pipelines where id in (select max(id) from pipelines where locked = true group by name));

DROP VIEW _stages;

CREATE VIEW _stages AS
    SELECT s.*,
      p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, ps.locked, p.naturalOrder
    FROM stages s
    INNER JOIN pipelines p ON p.id = s.pipelineId
    LEFT OUTER JOIN PipelineStates ps on ps.lockedByPipelineId = s.pipelineId;


ALTER TABLE pipelines drop column locked;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704003: 1704003_pipeline_state_table.sql ---------------


--------------- Fragment begins: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704004_pipeline_states_sequence_reset.sql');
COMMIT;


-- Change script: #1704004: 1704004_pipeline_states_sequence_reset.sql
-- As part of 1704003_pipeline_state_table.sql, PipelineStates was incorrectly setup to use plugins_id_seq instead of pipelinestates_id_seq.
-- This migration resets the sequence pipelinestates_id_seq to be the max(id) of PipelineStates, and alters PipelineStates to use the correct sequence.
-- Since sequences are not explicitly defined for H2, a corresponding migration for H2 is not required.

-- This delta is being backported to all releases starting from 17.4 until 17.10 as part of the patch release.

do $$
declare maxid int;
begin
    select max(id) from pipelinestates into maxid;
    IF maxid IS NULL THEN
        maxid = 1;
    END IF;
    execute 'alter SEQUENCE pipelinestates_id_seq RESTART with '|| maxid;
end;
$$ language plpgsql;

ALTER table PipelineStates alter column ID set default nextval('pipelinestates_id_seq');



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------


--------------- Fragment begins: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1708001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1708001_add_hostname_and_ip_to_agents_table.sql');
COMMIT;


-- Change script: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql
ALTER TABLE agents ADD COLUMN hostname VARCHAR(255) DEFAULT NULL;
ALTER TABLE agents ADD COLUMN ipaddress VARCHAR(50) DEFAULT NULL;
CREATE INDEX idx_agent_uuid ON AGENTS(UUID);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1708001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------


--------------- Fragment begins: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801001_remove_regex_generator_type_from_artifact_properties_generator.sql');
COMMIT;


-- Change script: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql
ALTER TABLE artifactpropertiesgenerator DROP COLUMN regex;
ALTER TABLE artifactpropertiesgenerator DROP COLUMN generatorType;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------


--------------- Fragment begins: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql');
COMMIT;


-- Change script: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql
ALTER TABLE artifactplans ADD COLUMN pluggableArtifactConfigJson TEXT DEFAULT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------


--------------- Fragment begins: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801003_remove_environment_variables_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM environmentVariables
-- WHERE environmentVariables.id IN (
--   SELECT environmentVariables.id
--   FROM environmentVariables
--   INNER JOIN builds
--   ON
--     builds.id = environmentVariables.entityId
--   WHERE
--       environmentVariables.entityType = 'Job'
--     AND
--       builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801004_remove_artifact_plans_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPlans
-- WHERE artifactPlans.id IN (
--   SELECT artifactPlans.id
--   FROM artifactPlans
--   INNER JOIN builds
--     ON builds.id = artifactPlans.buildId
--   WHERE
--       artifactPlans.artifactType = 'file'
--     AND
--       builds.state = 'Completed'
-- );




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801005, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801005_remove_artifact_properties_generator_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPropertiesGenerator
-- WHERE ID IN (
--   SELECT artifactPropertiesGenerator.id
--   FROM artifactPropertiesGenerator
--   INNER JOIN builds
--     ON builds.id = artifactPropertiesGenerator.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801005 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801006, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801006_remove_resources_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801006: 1801006_remove_resources_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.
-- DELETE FROM resources
-- WHERE resources.id IN (
--   SELECT resources.id
--   FROM resources
--   INNER JOIN builds
--     ON builds.id = resources.buildId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801006 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801007, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801007_remove_job_agent_metadata_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM jobAgentMetadata
-- WHERE jobAgentMetadata.id IN (
--   SELECT jobAgentMetadata.id
--   FROM jobAgentMetadata
--   INNER JOIN builds
--     ON
--       builds.id = jobAgentMetadata.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801007 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802001_clear_username_and_comment_for_dependency_materials.sql');
COMMIT;


-- Change script: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql
UPDATE
  modifications
SET
  username = null, comment = null
WHERE
    pipelineid IS NOT NULL
  AND
    username = 'Unknown'
  AND
    comment = 'Unknown';



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------


--------------- Fragment begins: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802002_add_index_on_pipelines_name_and_id_column.sql');
COMMIT;


-- Change script: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_pipeline_name_id ON pipelines( name, id );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------


--------------- Fragment begins: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1804001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql');
COMMIT;


-- Change script: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql
ALTER TABLE PIPELINELABELCOUNTS ADD COLUMN caseInsensitivePipelineName CITEXT;
UPDATE PIPELINELABELCOUNTS set caseInsensitivePipelineName = pipelinename;
CREATE INDEX idx_pipelinelabelcounts_caseinsensitivepipelinename ON PIPELINELABELCOUNTS(caseInsensitivePipelineName);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1804001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------


--------------- Fragment begins: #1805001: 1805001_drop_preferred_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1805001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1805001_drop_preferred_table.sql');
COMMIT;


-- Change script: #1805001: 1805001_drop_preferred_table.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- See `230006_make_user_name_case_insensitive.sql`
-- This was a temp table created to make users' login-name case-insensitive
DROP TABLE preffered;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1805001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1805001: 1805001_drop_preferred_table.sql ---------------


--------------- Fragment begins: #1807001: 1807001_data_sharing_settings_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807001_data_sharing_settings_table.sql');
COMMIT;


-- Change script: #1807001: 1807001_data_sharing_settings_table.sql
CREATE SEQUENCE datasharingsettings_id_seq START WITH 1;

CREATE TABLE DataSharingSettings (
  id             BIGINT DEFAULT nextval('datasharingsettings_id_seq') PRIMARY KEY,
  allowSharing        BOOLEAN NOT NULL,
  updatedBy    VARCHAR(255),
  updatedOn    TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807001: 1807001_data_sharing_settings_table.sql ---------------


--------------- Fragment begins: #1807002: 1807002_usage_data_reporting_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807002_usage_data_reporting_table.sql');
COMMIT;


-- Change script: #1807002: 1807002_usage_data_reporting_table.sql
CREATE SEQUENCE usagedatareporting_id_seq START WITH 1;

CREATE TABLE UsageDataReporting (
  id             BIGINT DEFAULT nextval('usagedatareporting_id_seq') PRIMARY KEY,
  serverId       VARCHAR(255) NOT NULL,
  lastReportedAt TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807002: 1807002_usage_data_reporting_table.sql ---------------


--------------- Fragment begins: #1808001: 1808001_remove_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808001_remove_oauth_tables.sql');
COMMIT;


-- Change script: #1808001: 1808001_remove_oauth_tables.sql
DROP TABLE oauthtokens;
DROP SEQUENCE oauthtokens_id_seq;

DROP TABLE oauthauthorizations;
DROP SEQUENCE oauthauthorizations_id_seq;

DROP TABLE oauthclients;
DROP SEQUENCE oauthclients_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808001: 1808001_remove_oauth_tables.sql ---------------


--------------- Fragment begins: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808002_add_filters_and_version_to_pipeline_selections.sql');
COMMIT;


-- Change script: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

ALTER TABLE PipelineSelections ADD COLUMN filters TEXT;
ALTER TABLE PipelineSelections ADD COLUMN version INT DEFAULT 0 NOT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------

]; nested exception is org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1100)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	... 42 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlMapClient' defined in ServletContext resource [/WEB-INF/applicationContext-dataLocalAccess.xml]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'databaseUpgraderDataSourceFactory': Invocation of init method failed; nested exception is java.lang.RuntimeException: org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [

--------------- Fragment begins: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303001_add_additional_data_field_to_modifications_table.sql');
COMMIT;


-- Change script: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql
ALTER TABLE modifications ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------


--------------- Fragment begins: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303002_add_index_to_builds_on_stageId.sql');
COMMIT;


-- Change script: #1303002: 1303002_add_index_to_builds_on_stageId.sql
CREATE INDEX idx_builds_stageId ON builds(stageId);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------


--------------- Fragment begins: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303003_add_index_to_stages_resources_tables.sql');
COMMIT;


-- Change script: #1303003: 1303003_add_index_to_stages_resources_tables.sql
CREATE INDEX idx_stages_pipelineId ON stages(pipelineid);
CREATE INDEX idx_resources_buildId ON resources(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------


--------------- Fragment begins: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303004_indexes_based_on_purge_tool.sql');
COMMIT;


-- Change script: #1303004: 1303004_indexes_based_on_purge_tool.sql
CREATE INDEX idx_properties_buildId ON properties(buildId);
CREATE INDEX idx_materials_pipelinename ON materials(pipelinename);
CREATE INDEX idx_artifactpropertiesgenerator_jobid ON artifactpropertiesgenerator(jobid);
CREATE INDEX idx_environmentvariables_entitytype ON environmentvariables(entitytype);
CREATE INDEX idx_stageartifactcleanupprohibited_pipelinename ON stageartifactcleanupprohibited(pipelinename);
CREATE INDEX idx_pipelineLabelCounts_pipelinename ON pipelineLabelCounts(pipelinename);




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------


--------------- Fragment begins: #1304001: 1304001_remove_luau_related_entries.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1304001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1304001_remove_luau_related_entries.sql');
COMMIT;


-- Change script: #1304001: 1304001_remove_luau_related_entries.sql
DROP TABLE IF EXISTS luau_groups_users;
DROP TABLE IF EXISTS luau_groups;
DROP TABLE IF EXISTS luaustate;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1304001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1304001: 1304001_remove_luau_related_entries.sql ---------------


--------------- Fragment begins: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1401001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1401001_recreating_trigger_because_of_cruise_to_go_change.sql');
COMMIT;


-- Change script: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql
SELECT (1);


UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1401001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------


--------------- Fragment begins: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403001_fix_null_artifacttype_on_artifactplans_table.sql');
COMMIT;


-- Change script: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql
UPDATE ARTIFACTPLANS SET ARTIFACTTYPE='file' WHERE ARTIFACTTYPE IS NULL;
COMMIT;

-- No undo as adding default value to mandatory field



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------


--------------- Fragment begins: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql');
COMMIT;


-- Change script: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

alter table builds add column runMultipleInstance boolean default false;

DROP VIEW _builds;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------


--------------- Fragment begins: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql');
COMMIT;


-- Change script: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelineselections RENAME COLUMN unselectedpipelines TO selections;

ALTER TABLE pipelineselections ADD COLUMN isblacklist BOOLEAN DEFAULT true;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------


--------------- Fragment begins: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501002_add_comment_column_to_pipelines.sql');
COMMIT;


-- Change script: #1501002: 1501002_add_comment_column_to_pipelines.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelines ADD COLUMN comment TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------


--------------- Fragment begins: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501003_add_additional_data_field_to_materials_table.sql');
COMMIT;


-- Change script: #1501003: 1501003_add_additional_data_field_to_materials_table.sql
ALTER TABLE materials ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------


--------------- Fragment begins: #1502001: 1502001_create_plugins_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1502001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1502001_create_plugins_table.sql');
COMMIT;


-- Change script: #1502001: 1502001_create_plugins_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE plugins_id_seq START WITH 1;
CREATE TABLE plugins (
    id              BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pluginId        VARCHAR(255) Not NULL,
    configuration   TEXT,
    UNIQUE (pluginId)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1502001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1502001: 1502001_create_plugins_table.sql ---------------


--------------- Fragment begins: #1503001: 1503001_remove_licensing_from_users.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503001_remove_licensing_from_users.sql');
COMMIT;


-- Change script: #1503001: 1503001_remove_licensing_from_users.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE users DROP COLUMN disableLicenseExpiryWarning;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503001: 1503001_remove_licensing_from_users.sql ---------------


--------------- Fragment begins: #1503002: 1503002_create_version_infos_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503002_create_version_infos_table.sql');
COMMIT;


-- Change script: #1503002: 1503002_create_version_infos_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2015 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE versioninfos_id_seq START WITH 1;
CREATE TABLE versioninfos (
    id                      BIGINT DEFAULT nextval('versioninfos_id_seq') PRIMARY KEY,
    componentName           VARCHAR(255) Not NULL,
    installedVersion        VARCHAR(100) Not NULL,
    latestVersion           VARCHAR(50),
    latestVersionUpdatedAt  TIMESTAMP,
    UNIQUE (componentName)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503002: 1503002_create_version_infos_table.sql ---------------


--------------- Fragment begins: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606001_add_index_to_buildstatetransitions.sql');
COMMIT;


-- Change script: #1606001: 1606001_add_index_to_buildstatetransitions.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_buildstatetransition_build_id ON buildstatetransitions(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------


--------------- Fragment begins: #1606002: 1606002_add_index_to_artifactplans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606002_add_index_to_artifactplans.sql');
COMMIT;


-- Change script: #1606002: 1606002_add_index_to_artifactplans.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_artifactplan_build_id ON artifactplans(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606002: 1606002_add_index_to_artifactplans.sql ---------------


--------------- Fragment begins: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1607001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1607001_create_agent_metadata_job_table.sql');
COMMIT;


-- Change script: #1607001: 1607001_create_agent_metadata_job_table.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE SEQUENCE jobagentmetadata_id_seq START WITH 1;
CREATE TABLE jobagentmetadata (
  id              BIGINT DEFAULT nextval('jobagentmetadata_id_seq') PRIMARY KEY,
  jobId           BIGINT UNIQUE NOT NULL,
  metadata        TEXT NOT NULL,
  metadataVersion VARCHAR(50),
  UNIQUE (jobId)
);

ALTER TABLE jobagentmetadata ADD CONSTRAINT fk_jobagentmetadata_jobs FOREIGN KEY (jobId) REFERENCES builds (id)
  ON DELETE CASCADE;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1607001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------


--------------- Fragment begins: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1610001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1610001_add_index_to_modifiedfiles.sql');
COMMIT;


-- Change script: #1610001: 1610001_add_index_to_modifiedfiles.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX CONCURRENTLY idx_modifiedfiles_modification_id ON modifiedfiles(modificationid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1610001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------


--------------- Fragment begins: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701001_remove_gadget_oauth_tables.sql');
COMMIT;


-- Change script: #1701001: 1701001_remove_gadget_oauth_tables.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

DROP TABLE gadgetOauthAuthorizationCodes;
DROP TABLE gadgetOauthAccessTokens;
DROP TABLE gadgetOauthClients;

DROP SEQUENCE gadgetOauthClients_id_seq;
DROP SEQUENCE gadgetOauthAccessTokens_id_seq;
DROP SEQUENCE gadgetOauthAuthorizationCodes_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------


--------------- Fragment begins: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701002_remove_materialproperties_id_seq.sql');
COMMIT;


-- Change script: #1701002: 1701002_remove_materialproperties_id_seq.sql
DROP SEQUENCE IF EXISTS materialProperties_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------


--------------- Fragment begins: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1702001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1702001_remove_build_cause_buffer_table.sql');
COMMIT;


-- Change script: #1702001: 1702001_remove_build_cause_buffer_table.sql
DROP TABLE BuildCauseBuffer;
DROP SEQUENCE buildcausebuffer_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1702001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------


--------------- Fragment begins: #1704001: 1704001_widen_agents_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704001_widen_agents_uuid_column.sql');
COMMIT;


-- Change script: #1704001: 1704001_widen_agents_uuid_column.sql

ALTER TABLE agents ALTER COLUMN uuid TYPE VARCHAR(255);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704001: 1704001_widen_agents_uuid_column.sql ---------------


--------------- Fragment begins: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704002_widen_builds_agent_uuid_column.sql');
COMMIT;


-- Change script: #1704002: 1704002_widen_builds_agent_uuid_column.sql

DROP VIEW _builds;

ALTER TABLE builds ALTER COLUMN agentUuid TYPE VARCHAR(255);

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------


--------------- Fragment begins: #1704003: 1704003_pipeline_state_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704003_pipeline_state_table.sql');
COMMIT;


-- Change script: #1704003: 1704003_pipeline_state_table.sql
CREATE SEQUENCE pipelinestates_id_seq START WITH 1;
CREATE TABLE PipelineStates (
    id                      BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pipelineName            CITEXT NOT NULL,
    locked                  BOOLEAN,
    lockedByPipelineId              BIGINT
);

ALTER TABLE PipelineStates ADD CONSTRAINT unique_pipeline_state UNIQUE (pipelineName);

INSERT INTO PipelineStates (pipelineName, locked, lockedByPipelineId) (select name, locked, id from pipelines where id in (select max(id) from pipelines where locked = true group by name));

DROP VIEW _stages;

CREATE VIEW _stages AS
    SELECT s.*,
      p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, ps.locked, p.naturalOrder
    FROM stages s
    INNER JOIN pipelines p ON p.id = s.pipelineId
    LEFT OUTER JOIN PipelineStates ps on ps.lockedByPipelineId = s.pipelineId;


ALTER TABLE pipelines drop column locked;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704003: 1704003_pipeline_state_table.sql ---------------


--------------- Fragment begins: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704004_pipeline_states_sequence_reset.sql');
COMMIT;


-- Change script: #1704004: 1704004_pipeline_states_sequence_reset.sql
-- As part of 1704003_pipeline_state_table.sql, PipelineStates was incorrectly setup to use plugins_id_seq instead of pipelinestates_id_seq.
-- This migration resets the sequence pipelinestates_id_seq to be the max(id) of PipelineStates, and alters PipelineStates to use the correct sequence.
-- Since sequences are not explicitly defined for H2, a corresponding migration for H2 is not required.

-- This delta is being backported to all releases starting from 17.4 until 17.10 as part of the patch release.

do $$
declare maxid int;
begin
    select max(id) from pipelinestates into maxid;
    IF maxid IS NULL THEN
        maxid = 1;
    END IF;
    execute 'alter SEQUENCE pipelinestates_id_seq RESTART with '|| maxid;
end;
$$ language plpgsql;

ALTER table PipelineStates alter column ID set default nextval('pipelinestates_id_seq');



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------


--------------- Fragment begins: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1708001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1708001_add_hostname_and_ip_to_agents_table.sql');
COMMIT;


-- Change script: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql
ALTER TABLE agents ADD COLUMN hostname VARCHAR(255) DEFAULT NULL;
ALTER TABLE agents ADD COLUMN ipaddress VARCHAR(50) DEFAULT NULL;
CREATE INDEX idx_agent_uuid ON AGENTS(UUID);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1708001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------


--------------- Fragment begins: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801001_remove_regex_generator_type_from_artifact_properties_generator.sql');
COMMIT;


-- Change script: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql
ALTER TABLE artifactpropertiesgenerator DROP COLUMN regex;
ALTER TABLE artifactpropertiesgenerator DROP COLUMN generatorType;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------


--------------- Fragment begins: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql');
COMMIT;


-- Change script: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql
ALTER TABLE artifactplans ADD COLUMN pluggableArtifactConfigJson TEXT DEFAULT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------


--------------- Fragment begins: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801003_remove_environment_variables_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM environmentVariables
-- WHERE environmentVariables.id IN (
--   SELECT environmentVariables.id
--   FROM environmentVariables
--   INNER JOIN builds
--   ON
--     builds.id = environmentVariables.entityId
--   WHERE
--       environmentVariables.entityType = 'Job'
--     AND
--       builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801004_remove_artifact_plans_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPlans
-- WHERE artifactPlans.id IN (
--   SELECT artifactPlans.id
--   FROM artifactPlans
--   INNER JOIN builds
--     ON builds.id = artifactPlans.buildId
--   WHERE
--       artifactPlans.artifactType = 'file'
--     AND
--       builds.state = 'Completed'
-- );




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801005, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801005_remove_artifact_properties_generator_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPropertiesGenerator
-- WHERE ID IN (
--   SELECT artifactPropertiesGenerator.id
--   FROM artifactPropertiesGenerator
--   INNER JOIN builds
--     ON builds.id = artifactPropertiesGenerator.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801005 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801006, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801006_remove_resources_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801006: 1801006_remove_resources_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.
-- DELETE FROM resources
-- WHERE resources.id IN (
--   SELECT resources.id
--   FROM resources
--   INNER JOIN builds
--     ON builds.id = resources.buildId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801006 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801007, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801007_remove_job_agent_metadata_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM jobAgentMetadata
-- WHERE jobAgentMetadata.id IN (
--   SELECT jobAgentMetadata.id
--   FROM jobAgentMetadata
--   INNER JOIN builds
--     ON
--       builds.id = jobAgentMetadata.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801007 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802001_clear_username_and_comment_for_dependency_materials.sql');
COMMIT;


-- Change script: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql
UPDATE
  modifications
SET
  username = null, comment = null
WHERE
    pipelineid IS NOT NULL
  AND
    username = 'Unknown'
  AND
    comment = 'Unknown';



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------


--------------- Fragment begins: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802002_add_index_on_pipelines_name_and_id_column.sql');
COMMIT;


-- Change script: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_pipeline_name_id ON pipelines( name, id );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------


--------------- Fragment begins: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1804001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql');
COMMIT;


-- Change script: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql
ALTER TABLE PIPELINELABELCOUNTS ADD COLUMN caseInsensitivePipelineName CITEXT;
UPDATE PIPELINELABELCOUNTS set caseInsensitivePipelineName = pipelinename;
CREATE INDEX idx_pipelinelabelcounts_caseinsensitivepipelinename ON PIPELINELABELCOUNTS(caseInsensitivePipelineName);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1804001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------


--------------- Fragment begins: #1805001: 1805001_drop_preferred_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1805001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1805001_drop_preferred_table.sql');
COMMIT;


-- Change script: #1805001: 1805001_drop_preferred_table.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- See `230006_make_user_name_case_insensitive.sql`
-- This was a temp table created to make users' login-name case-insensitive
DROP TABLE preffered;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1805001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1805001: 1805001_drop_preferred_table.sql ---------------


--------------- Fragment begins: #1807001: 1807001_data_sharing_settings_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807001_data_sharing_settings_table.sql');
COMMIT;


-- Change script: #1807001: 1807001_data_sharing_settings_table.sql
CREATE SEQUENCE datasharingsettings_id_seq START WITH 1;

CREATE TABLE DataSharingSettings (
  id             BIGINT DEFAULT nextval('datasharingsettings_id_seq') PRIMARY KEY,
  allowSharing        BOOLEAN NOT NULL,
  updatedBy    VARCHAR(255),
  updatedOn    TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807001: 1807001_data_sharing_settings_table.sql ---------------


--------------- Fragment begins: #1807002: 1807002_usage_data_reporting_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807002_usage_data_reporting_table.sql');
COMMIT;


-- Change script: #1807002: 1807002_usage_data_reporting_table.sql
CREATE SEQUENCE usagedatareporting_id_seq START WITH 1;

CREATE TABLE UsageDataReporting (
  id             BIGINT DEFAULT nextval('usagedatareporting_id_seq') PRIMARY KEY,
  serverId       VARCHAR(255) NOT NULL,
  lastReportedAt TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807002: 1807002_usage_data_reporting_table.sql ---------------


--------------- Fragment begins: #1808001: 1808001_remove_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808001_remove_oauth_tables.sql');
COMMIT;


-- Change script: #1808001: 1808001_remove_oauth_tables.sql
DROP TABLE oauthtokens;
DROP SEQUENCE oauthtokens_id_seq;

DROP TABLE oauthauthorizations;
DROP SEQUENCE oauthauthorizations_id_seq;

DROP TABLE oauthclients;
DROP SEQUENCE oauthclients_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808001: 1808001_remove_oauth_tables.sql ---------------


--------------- Fragment begins: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808002_add_filters_and_version_to_pipeline_selections.sql');
COMMIT;


-- Change script: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

ALTER TABLE PipelineSelections ADD COLUMN filters TEXT;
ALTER TABLE PipelineSelections ADD COLUMN version INT DEFAULT 0 NOT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------

]; nested exception is org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1100)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getSingletonFactoryBeanForTypeCheck(AbstractAutowireCapableBeanFactory.java:928)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:805)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:564)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:432)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:403)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:206)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1265)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1099)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1064)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	... 52 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'databaseUpgraderDataSourceFactory': Invocation of init method failed; nested exception is java.lang.RuntimeException: org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [

--------------- Fragment begins: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303001_add_additional_data_field_to_modifications_table.sql');
COMMIT;


-- Change script: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql
ALTER TABLE modifications ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------


--------------- Fragment begins: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303002_add_index_to_builds_on_stageId.sql');
COMMIT;


-- Change script: #1303002: 1303002_add_index_to_builds_on_stageId.sql
CREATE INDEX idx_builds_stageId ON builds(stageId);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------


--------------- Fragment begins: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303003_add_index_to_stages_resources_tables.sql');
COMMIT;


-- Change script: #1303003: 1303003_add_index_to_stages_resources_tables.sql
CREATE INDEX idx_stages_pipelineId ON stages(pipelineid);
CREATE INDEX idx_resources_buildId ON resources(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------


--------------- Fragment begins: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303004_indexes_based_on_purge_tool.sql');
COMMIT;


-- Change script: #1303004: 1303004_indexes_based_on_purge_tool.sql
CREATE INDEX idx_properties_buildId ON properties(buildId);
CREATE INDEX idx_materials_pipelinename ON materials(pipelinename);
CREATE INDEX idx_artifactpropertiesgenerator_jobid ON artifactpropertiesgenerator(jobid);
CREATE INDEX idx_environmentvariables_entitytype ON environmentvariables(entitytype);
CREATE INDEX idx_stageartifactcleanupprohibited_pipelinename ON stageartifactcleanupprohibited(pipelinename);
CREATE INDEX idx_pipelineLabelCounts_pipelinename ON pipelineLabelCounts(pipelinename);




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------


--------------- Fragment begins: #1304001: 1304001_remove_luau_related_entries.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1304001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1304001_remove_luau_related_entries.sql');
COMMIT;


-- Change script: #1304001: 1304001_remove_luau_related_entries.sql
DROP TABLE IF EXISTS luau_groups_users;
DROP TABLE IF EXISTS luau_groups;
DROP TABLE IF EXISTS luaustate;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1304001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1304001: 1304001_remove_luau_related_entries.sql ---------------


--------------- Fragment begins: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1401001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1401001_recreating_trigger_because_of_cruise_to_go_change.sql');
COMMIT;


-- Change script: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql
SELECT (1);


UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1401001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------


--------------- Fragment begins: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403001_fix_null_artifacttype_on_artifactplans_table.sql');
COMMIT;


-- Change script: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql
UPDATE ARTIFACTPLANS SET ARTIFACTTYPE='file' WHERE ARTIFACTTYPE IS NULL;
COMMIT;

-- No undo as adding default value to mandatory field



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------


--------------- Fragment begins: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql');
COMMIT;


-- Change script: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

alter table builds add column runMultipleInstance boolean default false;

DROP VIEW _builds;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------


--------------- Fragment begins: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql');
COMMIT;


-- Change script: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelineselections RENAME COLUMN unselectedpipelines TO selections;

ALTER TABLE pipelineselections ADD COLUMN isblacklist BOOLEAN DEFAULT true;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------


--------------- Fragment begins: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501002_add_comment_column_to_pipelines.sql');
COMMIT;


-- Change script: #1501002: 1501002_add_comment_column_to_pipelines.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelines ADD COLUMN comment TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------


--------------- Fragment begins: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501003_add_additional_data_field_to_materials_table.sql');
COMMIT;


-- Change script: #1501003: 1501003_add_additional_data_field_to_materials_table.sql
ALTER TABLE materials ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------


--------------- Fragment begins: #1502001: 1502001_create_plugins_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1502001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1502001_create_plugins_table.sql');
COMMIT;


-- Change script: #1502001: 1502001_create_plugins_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE plugins_id_seq START WITH 1;
CREATE TABLE plugins (
    id              BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pluginId        VARCHAR(255) Not NULL,
    configuration   TEXT,
    UNIQUE (pluginId)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1502001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1502001: 1502001_create_plugins_table.sql ---------------


--------------- Fragment begins: #1503001: 1503001_remove_licensing_from_users.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503001_remove_licensing_from_users.sql');
COMMIT;


-- Change script: #1503001: 1503001_remove_licensing_from_users.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE users DROP COLUMN disableLicenseExpiryWarning;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503001: 1503001_remove_licensing_from_users.sql ---------------


--------------- Fragment begins: #1503002: 1503002_create_version_infos_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503002_create_version_infos_table.sql');
COMMIT;


-- Change script: #1503002: 1503002_create_version_infos_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2015 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE versioninfos_id_seq START WITH 1;
CREATE TABLE versioninfos (
    id                      BIGINT DEFAULT nextval('versioninfos_id_seq') PRIMARY KEY,
    componentName           VARCHAR(255) Not NULL,
    installedVersion        VARCHAR(100) Not NULL,
    latestVersion           VARCHAR(50),
    latestVersionUpdatedAt  TIMESTAMP,
    UNIQUE (componentName)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503002: 1503002_create_version_infos_table.sql ---------------


--------------- Fragment begins: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606001_add_index_to_buildstatetransitions.sql');
COMMIT;


-- Change script: #1606001: 1606001_add_index_to_buildstatetransitions.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_buildstatetransition_build_id ON buildstatetransitions(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------


--------------- Fragment begins: #1606002: 1606002_add_index_to_artifactplans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606002_add_index_to_artifactplans.sql');
COMMIT;


-- Change script: #1606002: 1606002_add_index_to_artifactplans.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_artifactplan_build_id ON artifactplans(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606002: 1606002_add_index_to_artifactplans.sql ---------------


--------------- Fragment begins: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1607001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1607001_create_agent_metadata_job_table.sql');
COMMIT;


-- Change script: #1607001: 1607001_create_agent_metadata_job_table.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE SEQUENCE jobagentmetadata_id_seq START WITH 1;
CREATE TABLE jobagentmetadata (
  id              BIGINT DEFAULT nextval('jobagentmetadata_id_seq') PRIMARY KEY,
  jobId           BIGINT UNIQUE NOT NULL,
  metadata        TEXT NOT NULL,
  metadataVersion VARCHAR(50),
  UNIQUE (jobId)
);

ALTER TABLE jobagentmetadata ADD CONSTRAINT fk_jobagentmetadata_jobs FOREIGN KEY (jobId) REFERENCES builds (id)
  ON DELETE CASCADE;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1607001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------


--------------- Fragment begins: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1610001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1610001_add_index_to_modifiedfiles.sql');
COMMIT;


-- Change script: #1610001: 1610001_add_index_to_modifiedfiles.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX CONCURRENTLY idx_modifiedfiles_modification_id ON modifiedfiles(modificationid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1610001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------


--------------- Fragment begins: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701001_remove_gadget_oauth_tables.sql');
COMMIT;


-- Change script: #1701001: 1701001_remove_gadget_oauth_tables.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

DROP TABLE gadgetOauthAuthorizationCodes;
DROP TABLE gadgetOauthAccessTokens;
DROP TABLE gadgetOauthClients;

DROP SEQUENCE gadgetOauthClients_id_seq;
DROP SEQUENCE gadgetOauthAccessTokens_id_seq;
DROP SEQUENCE gadgetOauthAuthorizationCodes_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------


--------------- Fragment begins: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701002_remove_materialproperties_id_seq.sql');
COMMIT;


-- Change script: #1701002: 1701002_remove_materialproperties_id_seq.sql
DROP SEQUENCE IF EXISTS materialProperties_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------


--------------- Fragment begins: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1702001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1702001_remove_build_cause_buffer_table.sql');
COMMIT;


-- Change script: #1702001: 1702001_remove_build_cause_buffer_table.sql
DROP TABLE BuildCauseBuffer;
DROP SEQUENCE buildcausebuffer_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1702001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------


--------------- Fragment begins: #1704001: 1704001_widen_agents_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704001_widen_agents_uuid_column.sql');
COMMIT;


-- Change script: #1704001: 1704001_widen_agents_uuid_column.sql

ALTER TABLE agents ALTER COLUMN uuid TYPE VARCHAR(255);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704001: 1704001_widen_agents_uuid_column.sql ---------------


--------------- Fragment begins: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704002_widen_builds_agent_uuid_column.sql');
COMMIT;


-- Change script: #1704002: 1704002_widen_builds_agent_uuid_column.sql

DROP VIEW _builds;

ALTER TABLE builds ALTER COLUMN agentUuid TYPE VARCHAR(255);

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------


--------------- Fragment begins: #1704003: 1704003_pipeline_state_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704003_pipeline_state_table.sql');
COMMIT;


-- Change script: #1704003: 1704003_pipeline_state_table.sql
CREATE SEQUENCE pipelinestates_id_seq START WITH 1;
CREATE TABLE PipelineStates (
    id                      BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pipelineName            CITEXT NOT NULL,
    locked                  BOOLEAN,
    lockedByPipelineId              BIGINT
);

ALTER TABLE PipelineStates ADD CONSTRAINT unique_pipeline_state UNIQUE (pipelineName);

INSERT INTO PipelineStates (pipelineName, locked, lockedByPipelineId) (select name, locked, id from pipelines where id in (select max(id) from pipelines where locked = true group by name));

DROP VIEW _stages;

CREATE VIEW _stages AS
    SELECT s.*,
      p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, ps.locked, p.naturalOrder
    FROM stages s
    INNER JOIN pipelines p ON p.id = s.pipelineId
    LEFT OUTER JOIN PipelineStates ps on ps.lockedByPipelineId = s.pipelineId;


ALTER TABLE pipelines drop column locked;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704003: 1704003_pipeline_state_table.sql ---------------


--------------- Fragment begins: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704004_pipeline_states_sequence_reset.sql');
COMMIT;


-- Change script: #1704004: 1704004_pipeline_states_sequence_reset.sql
-- As part of 1704003_pipeline_state_table.sql, PipelineStates was incorrectly setup to use plugins_id_seq instead of pipelinestates_id_seq.
-- This migration resets the sequence pipelinestates_id_seq to be the max(id) of PipelineStates, and alters PipelineStates to use the correct sequence.
-- Since sequences are not explicitly defined for H2, a corresponding migration for H2 is not required.

-- This delta is being backported to all releases starting from 17.4 until 17.10 as part of the patch release.

do $$
declare maxid int;
begin
    select max(id) from pipelinestates into maxid;
    IF maxid IS NULL THEN
        maxid = 1;
    END IF;
    execute 'alter SEQUENCE pipelinestates_id_seq RESTART with '|| maxid;
end;
$$ language plpgsql;

ALTER table PipelineStates alter column ID set default nextval('pipelinestates_id_seq');



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------


--------------- Fragment begins: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1708001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1708001_add_hostname_and_ip_to_agents_table.sql');
COMMIT;


-- Change script: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql
ALTER TABLE agents ADD COLUMN hostname VARCHAR(255) DEFAULT NULL;
ALTER TABLE agents ADD COLUMN ipaddress VARCHAR(50) DEFAULT NULL;
CREATE INDEX idx_agent_uuid ON AGENTS(UUID);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1708001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------


--------------- Fragment begins: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801001_remove_regex_generator_type_from_artifact_properties_generator.sql');
COMMIT;


-- Change script: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql
ALTER TABLE artifactpropertiesgenerator DROP COLUMN regex;
ALTER TABLE artifactpropertiesgenerator DROP COLUMN generatorType;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------


--------------- Fragment begins: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql');
COMMIT;


-- Change script: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql
ALTER TABLE artifactplans ADD COLUMN pluggableArtifactConfigJson TEXT DEFAULT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------


--------------- Fragment begins: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801003_remove_environment_variables_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM environmentVariables
-- WHERE environmentVariables.id IN (
--   SELECT environmentVariables.id
--   FROM environmentVariables
--   INNER JOIN builds
--   ON
--     builds.id = environmentVariables.entityId
--   WHERE
--       environmentVariables.entityType = 'Job'
--     AND
--       builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801004_remove_artifact_plans_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPlans
-- WHERE artifactPlans.id IN (
--   SELECT artifactPlans.id
--   FROM artifactPlans
--   INNER JOIN builds
--     ON builds.id = artifactPlans.buildId
--   WHERE
--       artifactPlans.artifactType = 'file'
--     AND
--       builds.state = 'Completed'
-- );




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801005, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801005_remove_artifact_properties_generator_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPropertiesGenerator
-- WHERE ID IN (
--   SELECT artifactPropertiesGenerator.id
--   FROM artifactPropertiesGenerator
--   INNER JOIN builds
--     ON builds.id = artifactPropertiesGenerator.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801005 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801006, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801006_remove_resources_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801006: 1801006_remove_resources_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.
-- DELETE FROM resources
-- WHERE resources.id IN (
--   SELECT resources.id
--   FROM resources
--   INNER JOIN builds
--     ON builds.id = resources.buildId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801006 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801007, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801007_remove_job_agent_metadata_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM jobAgentMetadata
-- WHERE jobAgentMetadata.id IN (
--   SELECT jobAgentMetadata.id
--   FROM jobAgentMetadata
--   INNER JOIN builds
--     ON
--       builds.id = jobAgentMetadata.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801007 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802001_clear_username_and_comment_for_dependency_materials.sql');
COMMIT;


-- Change script: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql
UPDATE
  modifications
SET
  username = null, comment = null
WHERE
    pipelineid IS NOT NULL
  AND
    username = 'Unknown'
  AND
    comment = 'Unknown';



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------


--------------- Fragment begins: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802002_add_index_on_pipelines_name_and_id_column.sql');
COMMIT;


-- Change script: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_pipeline_name_id ON pipelines( name, id );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------


--------------- Fragment begins: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1804001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql');
COMMIT;


-- Change script: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql
ALTER TABLE PIPELINELABELCOUNTS ADD COLUMN caseInsensitivePipelineName CITEXT;
UPDATE PIPELINELABELCOUNTS set caseInsensitivePipelineName = pipelinename;
CREATE INDEX idx_pipelinelabelcounts_caseinsensitivepipelinename ON PIPELINELABELCOUNTS(caseInsensitivePipelineName);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1804001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------


--------------- Fragment begins: #1805001: 1805001_drop_preferred_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1805001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1805001_drop_preferred_table.sql');
COMMIT;


-- Change script: #1805001: 1805001_drop_preferred_table.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- See `230006_make_user_name_case_insensitive.sql`
-- This was a temp table created to make users' login-name case-insensitive
DROP TABLE preffered;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1805001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1805001: 1805001_drop_preferred_table.sql ---------------


--------------- Fragment begins: #1807001: 1807001_data_sharing_settings_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807001_data_sharing_settings_table.sql');
COMMIT;


-- Change script: #1807001: 1807001_data_sharing_settings_table.sql
CREATE SEQUENCE datasharingsettings_id_seq START WITH 1;

CREATE TABLE DataSharingSettings (
  id             BIGINT DEFAULT nextval('datasharingsettings_id_seq') PRIMARY KEY,
  allowSharing        BOOLEAN NOT NULL,
  updatedBy    VARCHAR(255),
  updatedOn    TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807001: 1807001_data_sharing_settings_table.sql ---------------


--------------- Fragment begins: #1807002: 1807002_usage_data_reporting_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807002_usage_data_reporting_table.sql');
COMMIT;


-- Change script: #1807002: 1807002_usage_data_reporting_table.sql
CREATE SEQUENCE usagedatareporting_id_seq START WITH 1;

CREATE TABLE UsageDataReporting (
  id             BIGINT DEFAULT nextval('usagedatareporting_id_seq') PRIMARY KEY,
  serverId       VARCHAR(255) NOT NULL,
  lastReportedAt TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807002: 1807002_usage_data_reporting_table.sql ---------------


--------------- Fragment begins: #1808001: 1808001_remove_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808001_remove_oauth_tables.sql');
COMMIT;


-- Change script: #1808001: 1808001_remove_oauth_tables.sql
DROP TABLE oauthtokens;
DROP SEQUENCE oauthtokens_id_seq;

DROP TABLE oauthauthorizations;
DROP SEQUENCE oauthauthorizations_id_seq;

DROP TABLE oauthclients;
DROP SEQUENCE oauthclients_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808001: 1808001_remove_oauth_tables.sql ---------------


--------------- Fragment begins: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808002_add_filters_and_version_to_pipeline_selections.sql');
COMMIT;


-- Change script: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

ALTER TABLE PipelineSelections ADD COLUMN filters TEXT;
ALTER TABLE PipelineSelections ADD COLUMN version INT DEFAULT 0 NOT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------

]; nested exception is org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:137)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:407)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1623)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1178)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1136)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1064)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	... 66 common frames omitted
Caused by: java.lang.RuntimeException: org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [

--------------- Fragment begins: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303001_add_additional_data_field_to_modifications_table.sql');
COMMIT;


-- Change script: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql
ALTER TABLE modifications ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------


--------------- Fragment begins: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303002_add_index_to_builds_on_stageId.sql');
COMMIT;


-- Change script: #1303002: 1303002_add_index_to_builds_on_stageId.sql
CREATE INDEX idx_builds_stageId ON builds(stageId);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------


--------------- Fragment begins: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303003_add_index_to_stages_resources_tables.sql');
COMMIT;


-- Change script: #1303003: 1303003_add_index_to_stages_resources_tables.sql
CREATE INDEX idx_stages_pipelineId ON stages(pipelineid);
CREATE INDEX idx_resources_buildId ON resources(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------


--------------- Fragment begins: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303004_indexes_based_on_purge_tool.sql');
COMMIT;


-- Change script: #1303004: 1303004_indexes_based_on_purge_tool.sql
CREATE INDEX idx_properties_buildId ON properties(buildId);
CREATE INDEX idx_materials_pipelinename ON materials(pipelinename);
CREATE INDEX idx_artifactpropertiesgenerator_jobid ON artifactpropertiesgenerator(jobid);
CREATE INDEX idx_environmentvariables_entitytype ON environmentvariables(entitytype);
CREATE INDEX idx_stageartifactcleanupprohibited_pipelinename ON stageartifactcleanupprohibited(pipelinename);
CREATE INDEX idx_pipelineLabelCounts_pipelinename ON pipelineLabelCounts(pipelinename);




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------


--------------- Fragment begins: #1304001: 1304001_remove_luau_related_entries.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1304001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1304001_remove_luau_related_entries.sql');
COMMIT;


-- Change script: #1304001: 1304001_remove_luau_related_entries.sql
DROP TABLE IF EXISTS luau_groups_users;
DROP TABLE IF EXISTS luau_groups;
DROP TABLE IF EXISTS luaustate;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1304001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1304001: 1304001_remove_luau_related_entries.sql ---------------


--------------- Fragment begins: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1401001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1401001_recreating_trigger_because_of_cruise_to_go_change.sql');
COMMIT;


-- Change script: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql
SELECT (1);


UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1401001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------


--------------- Fragment begins: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403001_fix_null_artifacttype_on_artifactplans_table.sql');
COMMIT;


-- Change script: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql
UPDATE ARTIFACTPLANS SET ARTIFACTTYPE='file' WHERE ARTIFACTTYPE IS NULL;
COMMIT;

-- No undo as adding default value to mandatory field



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------


--------------- Fragment begins: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql');
COMMIT;


-- Change script: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

alter table builds add column runMultipleInstance boolean default false;

DROP VIEW _builds;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------


--------------- Fragment begins: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql');
COMMIT;


-- Change script: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelineselections RENAME COLUMN unselectedpipelines TO selections;

ALTER TABLE pipelineselections ADD COLUMN isblacklist BOOLEAN DEFAULT true;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------


--------------- Fragment begins: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501002_add_comment_column_to_pipelines.sql');
COMMIT;


-- Change script: #1501002: 1501002_add_comment_column_to_pipelines.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelines ADD COLUMN comment TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------


--------------- Fragment begins: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501003_add_additional_data_field_to_materials_table.sql');
COMMIT;


-- Change script: #1501003: 1501003_add_additional_data_field_to_materials_table.sql
ALTER TABLE materials ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------


--------------- Fragment begins: #1502001: 1502001_create_plugins_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1502001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1502001_create_plugins_table.sql');
COMMIT;


-- Change script: #1502001: 1502001_create_plugins_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE plugins_id_seq START WITH 1;
CREATE TABLE plugins (
    id              BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pluginId        VARCHAR(255) Not NULL,
    configuration   TEXT,
    UNIQUE (pluginId)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1502001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1502001: 1502001_create_plugins_table.sql ---------------


--------------- Fragment begins: #1503001: 1503001_remove_licensing_from_users.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503001_remove_licensing_from_users.sql');
COMMIT;


-- Change script: #1503001: 1503001_remove_licensing_from_users.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE users DROP COLUMN disableLicenseExpiryWarning;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503001: 1503001_remove_licensing_from_users.sql ---------------


--------------- Fragment begins: #1503002: 1503002_create_version_infos_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503002_create_version_infos_table.sql');
COMMIT;


-- Change script: #1503002: 1503002_create_version_infos_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2015 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE versioninfos_id_seq START WITH 1;
CREATE TABLE versioninfos (
    id                      BIGINT DEFAULT nextval('versioninfos_id_seq') PRIMARY KEY,
    componentName           VARCHAR(255) Not NULL,
    installedVersion        VARCHAR(100) Not NULL,
    latestVersion           VARCHAR(50),
    latestVersionUpdatedAt  TIMESTAMP,
    UNIQUE (componentName)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503002: 1503002_create_version_infos_table.sql ---------------


--------------- Fragment begins: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606001_add_index_to_buildstatetransitions.sql');
COMMIT;


-- Change script: #1606001: 1606001_add_index_to_buildstatetransitions.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_buildstatetransition_build_id ON buildstatetransitions(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------


--------------- Fragment begins: #1606002: 1606002_add_index_to_artifactplans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606002_add_index_to_artifactplans.sql');
COMMIT;


-- Change script: #1606002: 1606002_add_index_to_artifactplans.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_artifactplan_build_id ON artifactplans(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606002: 1606002_add_index_to_artifactplans.sql ---------------


--------------- Fragment begins: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1607001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1607001_create_agent_metadata_job_table.sql');
COMMIT;


-- Change script: #1607001: 1607001_create_agent_metadata_job_table.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE SEQUENCE jobagentmetadata_id_seq START WITH 1;
CREATE TABLE jobagentmetadata (
  id              BIGINT DEFAULT nextval('jobagentmetadata_id_seq') PRIMARY KEY,
  jobId           BIGINT UNIQUE NOT NULL,
  metadata        TEXT NOT NULL,
  metadataVersion VARCHAR(50),
  UNIQUE (jobId)
);

ALTER TABLE jobagentmetadata ADD CONSTRAINT fk_jobagentmetadata_jobs FOREIGN KEY (jobId) REFERENCES builds (id)
  ON DELETE CASCADE;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1607001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------


--------------- Fragment begins: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1610001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1610001_add_index_to_modifiedfiles.sql');
COMMIT;


-- Change script: #1610001: 1610001_add_index_to_modifiedfiles.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
java.lang.RuntimeException: Failed to start GoCD server.
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX CONCURRENTLY idx_modifiedfiles_modification_id ON modifiedfiles(modificationid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1610001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------


--------------- Fragment begins: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701001_remove_gadget_oauth_tables.sql');
COMMIT;


-- Change script: #1701001: 1701001_remove_gadget_oauth_tables.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

DROP TABLE gadgetOauthAuthorizationCodes;
DROP TABLE gadgetOauthAccessTokens;
DROP TABLE gadgetOauthClients;

DROP SEQUENCE gadgetOauthClients_id_seq;
DROP SEQUENCE gadgetOauthAccessTokens_id_seq;
DROP SEQUENCE gadgetOauthAuthorizationCodes_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------


--------------- Fragment begins: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701002_remove_materialproperties_id_seq.sql');
COMMIT;


-- Change script: #1701002: 1701002_remove_materialproperties_id_seq.sql
DROP SEQUENCE IF EXISTS materialProperties_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------


--------------- Fragment begins: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1702001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1702001_remove_build_cause_buffer_table.sql');
COMMIT;


-- Change script: #1702001: 1702001_remove_build_cause_buffer_table.sql
DROP TABLE BuildCauseBuffer;
DROP SEQUENCE buildcausebuffer_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1702001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------


--------------- Fragment begins: #1704001: 1704001_widen_agents_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704001_widen_agents_uuid_column.sql');
COMMIT;


-- Change script: #1704001: 1704001_widen_agents_uuid_column.sql

ALTER TABLE agents ALTER COLUMN uuid TYPE VARCHAR(255);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704001: 1704001_widen_agents_uuid_column.sql ---------------


--------------- Fragment begins: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704002_widen_builds_agent_uuid_column.sql');
COMMIT;


-- Change script: #1704002: 1704002_widen_builds_agent_uuid_column.sql

DROP VIEW _builds;

ALTER TABLE builds ALTER COLUMN agentUuid TYPE VARCHAR(255);

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------


--------------- Fragment begins: #1704003: 1704003_pipeline_state_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704003_pipeline_state_table.sql');
COMMIT;


-- Change script: #1704003: 1704003_pipeline_state_table.sql
CREATE SEQUENCE pipelinestates_id_seq START WITH 1;
CREATE TABLE PipelineStates (
    id                      BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pipelineName            CITEXT NOT NULL,
    locked                  BOOLEAN,
    lockedByPipelineId              BIGINT
);

ALTER TABLE PipelineStates ADD CONSTRAINT unique_pipeline_state UNIQUE (pipelineName);

INSERT INTO PipelineStates (pipelineName, locked, lockedByPipelineId) (select name, locked, id from pipelines where id in (select max(id) from pipelines where locked = true group by name));

DROP VIEW _stages;

CREATE VIEW _stages AS
    SELECT s.*,
      p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, ps.locked, p.naturalOrder
    FROM stages s
    INNER JOIN pipelines p ON p.id = s.pipelineId
    LEFT OUTER JOIN PipelineStates ps on ps.lockedByPipelineId = s.pipelineId;


ALTER TABLE pipelines drop column locked;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704003: 1704003_pipeline_state_table.sql ---------------


--------------- Fragment begins: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704004_pipeline_states_sequence_reset.sql');
COMMIT;


-- Change script: #1704004: 1704004_pipeline_states_sequence_reset.sql
-- As part of 1704003_pipeline_state_table.sql, PipelineStates was incorrectly setup to use plugins_id_seq instead of pipelinestates_id_seq.
-- This migration resets the sequence pipelinestates_id_seq to be the max(id) of PipelineStates, and alters PipelineStates to use the correct sequence.
-- Since sequences are not explicitly defined for H2, a corresponding migration for H2 is not required.

-- This delta is being backported to all releases starting from 17.4 until 17.10 as part of the patch release.

do $$
declare maxid int;
begin
    select max(id) from pipelinestates into maxid;
    IF maxid IS NULL THEN
        maxid = 1;
    END IF;
    execute 'alter SEQUENCE pipelinestates_id_seq RESTART with '|| maxid;
end;
$$ language plpgsql;

ALTER table PipelineStates alter column ID set default nextval('pipelinestates_id_seq');



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------


--------------- Fragment begins: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1708001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1708001_add_hostname_and_ip_to_agents_table.sql');
COMMIT;


-- Change script: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql
ALTER TABLE agents ADD COLUMN hostname VARCHAR(255) DEFAULT NULL;
ALTER TABLE agents ADD COLUMN ipaddress VARCHAR(50) DEFAULT NULL;
CREATE INDEX idx_agent_uuid ON AGENTS(UUID);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1708001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------


--------------- Fragment begins: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801001_remove_regex_generator_type_from_artifact_properties_generator.sql');
COMMIT;


-- Change script: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql
ALTER TABLE artifactpropertiesgenerator DROP COLUMN regex;
ALTER TABLE artifactpropertiesgenerator DROP COLUMN generatorType;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------


--------------- Fragment begins: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql');
COMMIT;


-- Change script: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql
ALTER TABLE artifactplans ADD COLUMN pluggableArtifactConfigJson TEXT DEFAULT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------


--------------- Fragment begins: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801003_remove_environment_variables_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM environmentVariables
-- WHERE environmentVariables.id IN (
--   SELECT environmentVariables.id
--   FROM environmentVariables
--   INNER JOIN builds
--   ON
--     builds.id = environmentVariables.entityId
--   WHERE
--       environmentVariables.entityType = 'Job'
--     AND
--       builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801004_remove_artifact_plans_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPlans
-- WHERE artifactPlans.id IN (
--   SELECT artifactPlans.id
--   FROM artifactPlans
--   INNER JOIN builds
--     ON builds.id = artifactPlans.buildId
--   WHERE
--       artifactPlans.artifactType = 'file'
--     AND
--       builds.state = 'Completed'
-- );




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801005, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801005_remove_artifact_properties_generator_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPropertiesGenerator
-- WHERE ID IN (
--   SELECT artifactPropertiesGenerator.id
--   FROM artifactPropertiesGenerator
--   INNER JOIN builds
--     ON builds.id = artifactPropertiesGenerator.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801005 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801006, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801006_remove_resources_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801006: 1801006_remove_resources_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.
-- DELETE FROM resources
-- WHERE resources.id IN (
--   SELECT resources.id
--   FROM resources
--   INNER JOIN builds
--     ON builds.id = resources.buildId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801006 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801007, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801007_remove_job_agent_metadata_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM jobAgentMetadata
-- WHERE jobAgentMetadata.id IN (
--   SELECT jobAgentMetadata.id
--   FROM jobAgentMetadata
--   INNER JOIN builds
--     ON
--       builds.id = jobAgentMetadata.jobId
--   WHERE
--     builds.state = 'Completed'
-- );
	at com.thoughtworks.go.server.GoServer.startServer(GoServer.java:77)



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801007 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802001_clear_username_and_comment_for_dependency_materials.sql');
COMMIT;


-- Change script: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql
UPDATE
  modifications
SET
  username = null, comment = null
WHERE
    pipelineid IS NOT NULL
  AND
    username = 'Unknown'
  AND
    comment = 'Unknown';



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------


--------------- Fragment begins: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802002_add_index_on_pipelines_name_and_id_column.sql');
COMMIT;


-- Change script: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_pipeline_name_id ON pipelines( name, id );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------


--------------- Fragment begins: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1804001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql');
COMMIT;


-- Change script: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql
ALTER TABLE PIPELINELABELCOUNTS ADD COLUMN caseInsensitivePipelineName CITEXT;
UPDATE PIPELINELABELCOUNTS set caseInsensitivePipelineName = pipelinename;
CREATE INDEX idx_pipelinelabelcounts_caseinsensitivepipelinename ON PIPELINELABELCOUNTS(caseInsensitivePipelineName);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1804001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------


--------------- Fragment begins: #1805001: 1805001_drop_preferred_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1805001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1805001_drop_preferred_table.sql');
COMMIT;


-- Change script: #1805001: 1805001_drop_preferred_table.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- See `230006_make_user_name_case_insensitive.sql`
-- This was a temp table created to make users' login-name case-insensitive
DROP TABLE preffered;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1805001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1805001: 1805001_drop_preferred_table.sql ---------------


--------------- Fragment begins: #1807001: 1807001_data_sharing_settings_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807001_data_sharing_settings_table.sql');
COMMIT;


-- Change script: #1807001: 1807001_data_sharing_settings_table.sql
CREATE SEQUENCE datasharingsettings_id_seq START WITH 1;

CREATE TABLE DataSharingSettings (
  id             BIGINT DEFAULT nextval('datasharingsettings_id_seq') PRIMARY KEY,
  allowSharing        BOOLEAN NOT NULL,
  updatedBy    VARCHAR(255),
  updatedOn    TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807001: 1807001_data_sharing_settings_table.sql ---------------


--------------- Fragment begins: #1807002: 1807002_usage_data_reporting_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807002_usage_data_reporting_table.sql');
COMMIT;


-- Change script: #1807002: 1807002_usage_data_reporting_table.sql
CREATE SEQUENCE usagedatareporting_id_seq START WITH 1;

CREATE TABLE UsageDataReporting (
  id             BIGINT DEFAULT nextval('usagedatareporting_id_seq') PRIMARY KEY,
  serverId       VARCHAR(255) NOT NULL,
  lastReportedAt TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807002: 1807002_usage_data_reporting_table.sql ---------------


--------------- Fragment begins: #1808001: 1808001_remove_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808001_remove_oauth_tables.sql');
COMMIT;


-- Change script: #1808001: 1808001_remove_oauth_tables.sql
DROP TABLE oauthtokens;
DROP SEQUENCE oauthtokens_id_seq;

DROP TABLE oauthauthorizations;
DROP SEQUENCE oauthauthorizations_id_seq;

DROP TABLE oauthclients;
DROP SEQUENCE oauthclients_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808001: 1808001_remove_oauth_tables.sql ---------------


--------------- Fragment begins: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808002_add_filters_and_version_to_pipeline_selections.sql');
COMMIT;


-- Change script: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

ALTER TABLE PipelineSelections ADD COLUMN filters TEXT;
ALTER TABLE PipelineSelections ADD COLUMN version INT DEFAULT 0 NOT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------

]; nested exception is org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at com.thoughtworks.go.postgresql.PostgresqlDatabase.upgrade(PostgresqlDatabase.java:110)
	at com.thoughtworks.go.server.database.DatabaseStrategy.upgrade(DatabaseStrategy.java:59)
	at com.thoughtworks.go.server.util.DatabaseUpgraderDataSourceFactory.upgradeDb(DatabaseUpgraderDataSourceFactory.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:311)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:134)
	... 88 common frames omitted
Caused by: org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [

--------------- Fragment begins: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303001_add_additional_data_field_to_modifications_table.sql');
COMMIT;


-- Change script: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql
ALTER TABLE modifications ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------


--------------- Fragment begins: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303002_add_index_to_builds_on_stageId.sql');
COMMIT;


-- Change script: #1303002: 1303002_add_index_to_builds_on_stageId.sql
CREATE INDEX idx_builds_stageId ON builds(stageId);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------


--------------- Fragment begins: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303003_add_index_to_stages_resources_tables.sql');
COMMIT;


-- Change script: #1303003: 1303003_add_index_to_stages_resources_tables.sql
CREATE INDEX idx_stages_pipelineId ON stages(pipelineid);
CREATE INDEX idx_resources_buildId ON resources(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------


--------------- Fragment begins: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303004_indexes_based_on_purge_tool.sql');
COMMIT;


-- Change script: #1303004: 1303004_indexes_based_on_purge_tool.sql
CREATE INDEX idx_properties_buildId ON properties(buildId);
CREATE INDEX idx_materials_pipelinename ON materials(pipelinename);
CREATE INDEX idx_artifactpropertiesgenerator_jobid ON artifactpropertiesgenerator(jobid);
CREATE INDEX idx_environmentvariables_entitytype ON environmentvariables(entitytype);
CREATE INDEX idx_stageartifactcleanupprohibited_pipelinename ON stageartifactcleanupprohibited(pipelinename);
CREATE INDEX idx_pipelineLabelCounts_pipelinename ON pipelineLabelCounts(pipelinename);




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------


--------------- Fragment begins: #1304001: 1304001_remove_luau_related_entries.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1304001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1304001_remove_luau_related_entries.sql');
COMMIT;


-- Change script: #1304001: 1304001_remove_luau_related_entries.sql
DROP TABLE IF EXISTS luau_groups_users;
DROP TABLE IF EXISTS luau_groups;
DROP TABLE IF EXISTS luaustate;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1304001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1304001: 1304001_remove_luau_related_entries.sql ---------------


--------------- Fragment begins: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1401001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1401001_recreating_trigger_because_of_cruise_to_go_change.sql');
COMMIT;


-- Change script: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql
SELECT (1);


UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1401001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------


--------------- Fragment begins: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403001_fix_null_artifacttype_on_artifactplans_table.sql');
COMMIT;


-- Change script: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql
UPDATE ARTIFACTPLANS SET ARTIFACTTYPE='file' WHERE ARTIFACTTYPE IS NULL;
COMMIT;

-- No undo as adding default value to mandatory field



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------


--------------- Fragment begins: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql');
COMMIT;


-- Change script: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

alter table builds add column runMultipleInstance boolean default false;

DROP VIEW _builds;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------


--------------- Fragment begins: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql');
COMMIT;


-- Change script: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelineselections RENAME COLUMN unselectedpipelines TO selections;

ALTER TABLE pipelineselections ADD COLUMN isblacklist BOOLEAN DEFAULT true;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------


--------------- Fragment begins: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501002_add_comment_column_to_pipelines.sql');
COMMIT;


-- Change script: #1501002: 1501002_add_comment_column_to_pipelines.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelines ADD COLUMN comment TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------


--------------- Fragment begins: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501003_add_additional_data_field_to_materials_table.sql');
COMMIT;


-- Change script: #1501003: 1501003_add_additional_data_field_to_materials_table.sql
ALTER TABLE materials ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------


--------------- Fragment begins: #1502001: 1502001_create_plugins_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1502001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1502001_create_plugins_table.sql');
COMMIT;


-- Change script: #1502001: 1502001_create_plugins_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE plugins_id_seq START WITH 1;
CREATE TABLE plugins (
    id              BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pluginId        VARCHAR(255) Not NULL,
    configuration   TEXT,
    UNIQUE (pluginId)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1502001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1502001: 1502001_create_plugins_table.sql ---------------


--------------- Fragment begins: #1503001: 1503001_remove_licensing_from_users.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503001_remove_licensing_from_users.sql');
COMMIT;


-- Change script: #1503001: 1503001_remove_licensing_from_users.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE users DROP COLUMN disableLicenseExpiryWarning;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503001: 1503001_remove_licensing_from_users.sql ---------------


--------------- Fragment begins: #1503002: 1503002_create_version_infos_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503002_create_version_infos_table.sql');
COMMIT;


-- Change script: #1503002: 1503002_create_version_infos_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2015 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE versioninfos_id_seq START WITH 1;
CREATE TABLE versioninfos (
    id                      BIGINT DEFAULT nextval('versioninfos_id_seq') PRIMARY KEY,
    componentName           VARCHAR(255) Not NULL,
    installedVersion        VARCHAR(100) Not NULL,
    latestVersion           VARCHAR(50),
    latestVersionUpdatedAt  TIMESTAMP,
    UNIQUE (componentName)
);



	at com.thoughtworks.go.server.GoServer.go(GoServer.java:64)
UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503002: 1503002_create_version_infos_table.sql ---------------


--------------- Fragment begins: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606001_add_index_to_buildstatetransitions.sql');
COMMIT;


-- Change script: #1606001: 1606001_add_index_to_buildstatetransitions.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_buildstatetransition_build_id ON buildstatetransitions(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------


--------------- Fragment begins: #1606002: 1606002_add_index_to_artifactplans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606002_add_index_to_artifactplans.sql');
COMMIT;


-- Change script: #1606002: 1606002_add_index_to_artifactplans.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_artifactplan_build_id ON artifactplans(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606002: 1606002_add_index_to_artifactplans.sql ---------------


--------------- Fragment begins: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1607001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1607001_create_agent_metadata_job_table.sql');
COMMIT;


-- Change script: #1607001: 1607001_create_agent_metadata_job_table.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE SEQUENCE jobagentmetadata_id_seq START WITH 1;
CREATE TABLE jobagentmetadata (
  id              BIGINT DEFAULT nextval('jobagentmetadata_id_seq') PRIMARY KEY,
  jobId           BIGINT UNIQUE NOT NULL,
  metadata        TEXT NOT NULL,
  metadataVersion VARCHAR(50),
  UNIQUE (jobId)
);

ALTER TABLE jobagentmetadata ADD CONSTRAINT fk_jobagentmetadata_jobs FOREIGN KEY (jobId) REFERENCES builds (id)
  ON DELETE CASCADE;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1607001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------


--------------- Fragment begins: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1610001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1610001_add_index_to_modifiedfiles.sql');
COMMIT;


-- Change script: #1610001: 1610001_add_index_to_modifiedfiles.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX CONCURRENTLY idx_modifiedfiles_modification_id ON modifiedfiles(modificationid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1610001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------


--------------- Fragment begins: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701001_remove_gadget_oauth_tables.sql');
COMMIT;


-- Change script: #1701001: 1701001_remove_gadget_oauth_tables.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

DROP TABLE gadgetOauthAuthorizationCodes;
DROP TABLE gadgetOauthAccessTokens;
DROP TABLE gadgetOauthClients;

DROP SEQUENCE gadgetOauthClients_id_seq;
DROP SEQUENCE gadgetOauthAccessTokens_id_seq;
DROP SEQUENCE gadgetOauthAuthorizationCodes_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------


--------------- Fragment begins: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701002_remove_materialproperties_id_seq.sql');
COMMIT;


-- Change script: #1701002: 1701002_remove_materialproperties_id_seq.sql
DROP SEQUENCE IF EXISTS materialProperties_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------


--------------- Fragment begins: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1702001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1702001_remove_build_cause_buffer_table.sql');
COMMIT;


-- Change script: #1702001: 1702001_remove_build_cause_buffer_table.sql
DROP TABLE BuildCauseBuffer;
DROP SEQUENCE buildcausebuffer_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1702001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------


--------------- Fragment begins: #1704001: 1704001_widen_agents_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704001_widen_agents_uuid_column.sql');
COMMIT;


-- Change script: #1704001: 1704001_widen_agents_uuid_column.sql

ALTER TABLE agents ALTER COLUMN uuid TYPE VARCHAR(255);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704001: 1704001_widen_agents_uuid_column.sql ---------------


--------------- Fragment begins: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704002_widen_builds_agent_uuid_column.sql');
COMMIT;


-- Change script: #1704002: 1704002_widen_builds_agent_uuid_column.sql

DROP VIEW _builds;

ALTER TABLE builds ALTER COLUMN agentUuid TYPE VARCHAR(255);

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------


--------------- Fragment begins: #1704003: 1704003_pipeline_state_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704003_pipeline_state_table.sql');
COMMIT;


-- Change script: #1704003: 1704003_pipeline_state_table.sql
CREATE SEQUENCE pipelinestates_id_seq START WITH 1;
CREATE TABLE PipelineStates (
    id                      BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pipelineName            CITEXT NOT NULL,
    locked                  BOOLEAN,
    lockedByPipelineId              BIGINT
);

ALTER TABLE PipelineStates ADD CONSTRAINT unique_pipeline_state UNIQUE (pipelineName);

INSERT INTO PipelineStates (pipelineName, locked, lockedByPipelineId) (select name, locked, id from pipelines where id in (select max(id) from pipelines where locked = true group by name));

DROP VIEW _stages;

CREATE VIEW _stages AS
    SELECT s.*,
      p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, ps.locked, p.naturalOrder
    FROM stages s
    INNER JOIN pipelines p ON p.id = s.pipelineId
    LEFT OUTER JOIN PipelineStates ps on ps.lockedByPipelineId = s.pipelineId;


ALTER TABLE pipelines drop column locked;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704003: 1704003_pipeline_state_table.sql ---------------


--------------- Fragment begins: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704004_pipeline_states_sequence_reset.sql');
COMMIT;


-- Change script: #1704004: 1704004_pipeline_states_sequence_reset.sql
-- As part of 1704003_pipeline_state_table.sql, PipelineStates was incorrectly setup to use plugins_id_seq instead of pipelinestates_id_seq.
	at com.thoughtworks.go.server.util.GoLauncher.main(GoLauncher.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.thoughtworks.gocd.Boot.run(Boot.java:111)
	at com.thoughtworks.gocd.Boot.main(Boot.java:57)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stagesQuery' defined in ServletContext resource [/WEB-INF/applicationContext-shine-server.xml]: Cannot resolve reference to bean 'lazyStageGraphLoader' while setting constructor argument; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'lazyStageGraphLoader' defined in file [/go-working-dir/work/jetty-0.0.0.0-8153-cruise.war-_go-any-/webapp/WEB-INF/classes/com/thoughtworks/studios/shine/cruise/stage/details/LazyStageGraphLoader.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlMapClient' defined in ServletContext resource [/WEB-INF/applicationContext-dataLocalAccess.xml]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'databaseUpgraderDataSourceFactory': Invocation of init method failed; nested exception is java.lang.RuntimeException: org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [

--------------- Fragment begins: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303001_add_additional_data_field_to_modifications_table.sql');
COMMIT;


-- Change script: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql
ALTER TABLE modifications ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------


--------------- Fragment begins: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303002_add_index_to_builds_on_stageId.sql');
COMMIT;


-- Change script: #1303002: 1303002_add_index_to_builds_on_stageId.sql
CREATE INDEX idx_builds_stageId ON builds(stageId);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------


--------------- Fragment begins: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303003_add_index_to_stages_resources_tables.sql');
COMMIT;


-- Change script: #1303003: 1303003_add_index_to_stages_resources_tables.sql
CREATE INDEX idx_stages_pipelineId ON stages(pipelineid);
CREATE INDEX idx_resources_buildId ON resources(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------


--------------- Fragment begins: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303004_indexes_based_on_purge_tool.sql');
COMMIT;


-- Change script: #1303004: 1303004_indexes_based_on_purge_tool.sql
CREATE INDEX idx_properties_buildId ON properties(buildId);
CREATE INDEX idx_materials_pipelinename ON materials(pipelinename);
CREATE INDEX idx_artifactpropertiesgenerator_jobid ON artifactpropertiesgenerator(jobid);
CREATE INDEX idx_environmentvariables_entitytype ON environmentvariables(entitytype);
CREATE INDEX idx_stageartifactcleanupprohibited_pipelinename ON stageartifactcleanupprohibited(pipelinename);
CREATE INDEX idx_pipelineLabelCounts_pipelinename ON pipelineLabelCounts(pipelinename);




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------


--------------- Fragment begins: #1304001: 1304001_remove_luau_related_entries.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1304001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1304001_remove_luau_related_entries.sql');
COMMIT;


-- Change script: #1304001: 1304001_remove_luau_related_entries.sql
DROP TABLE IF EXISTS luau_groups_users;
DROP TABLE IF EXISTS luau_groups;
DROP TABLE IF EXISTS luaustate;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1304001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1304001: 1304001_remove_luau_related_entries.sql ---------------


--------------- Fragment begins: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1401001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1401001_recreating_trigger_because_of_cruise_to_go_change.sql');
COMMIT;


-- Change script: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql
SELECT (1);


UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1401001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------


--------------- Fragment begins: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403001_fix_null_artifacttype_on_artifactplans_table.sql');
COMMIT;


-- Change script: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql
UPDATE ARTIFACTPLANS SET ARTIFACTTYPE='file' WHERE ARTIFACTTYPE IS NULL;
COMMIT;

-- No undo as adding default value to mandatory field



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------


--------------- Fragment begins: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql');
COMMIT;


-- Change script: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

alter table builds add column runMultipleInstance boolean default false;

DROP VIEW _builds;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------


--------------- Fragment begins: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql');
COMMIT;


-- Change script: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelineselections RENAME COLUMN unselectedpipelines TO selections;

ALTER TABLE pipelineselections ADD COLUMN isblacklist BOOLEAN DEFAULT true;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------


--------------- Fragment begins: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501002_add_comment_column_to_pipelines.sql');
COMMIT;


-- Change script: #1501002: 1501002_add_comment_column_to_pipelines.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelines ADD COLUMN comment TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------


--------------- Fragment begins: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501003_add_additional_data_field_to_materials_table.sql');
COMMIT;


-- Change script: #1501003: 1501003_add_additional_data_field_to_materials_table.sql
ALTER TABLE materials ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------


--------------- Fragment begins: #1502001: 1502001_create_plugins_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1502001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1502001_create_plugins_table.sql');
COMMIT;


-- Change script: #1502001: 1502001_create_plugins_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE plugins_id_seq START WITH 1;
CREATE TABLE plugins (
    id              BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pluginId        VARCHAR(255) Not NULL,
    configuration   TEXT,
    UNIQUE (pluginId)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1502001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1502001: 1502001_create_plugins_table.sql ---------------


--------------- Fragment begins: #1503001: 1503001_remove_licensing_from_users.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503001_remove_licensing_from_users.sql');
COMMIT;


-- Change script: #1503001: 1503001_remove_licensing_from_users.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE users DROP COLUMN disableLicenseExpiryWarning;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503001: 1503001_remove_licensing_from_users.sql ---------------


--------------- Fragment begins: #1503002: 1503002_create_version_infos_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503002_create_version_infos_table.sql');
COMMIT;


-- Change script: #1503002: 1503002_create_version_infos_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2015 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE versioninfos_id_seq START WITH 1;
CREATE TABLE versioninfos (
    id                      BIGINT DEFAULT nextval('versioninfos_id_seq') PRIMARY KEY,
-- This migration resets the sequence pipelinestates_id_seq to be the max(id) of PipelineStates, and alters PipelineStates to use the correct sequence.
-- Since sequences are not explicitly defined for H2, a corresponding migration for H2 is not required.

-- This delta is being backported to all releases starting from 17.4 until 17.10 as part of the patch release.

do $$
declare maxid int;
begin
    select max(id) from pipelinestates into maxid;
    IF maxid IS NULL THEN
        maxid = 1;
    END IF;
    execute 'alter SEQUENCE pipelinestates_id_seq RESTART with '|| maxid;
end;
$$ language plpgsql;

ALTER table PipelineStates alter column ID set default nextval('pipelinestates_id_seq');



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------


--------------- Fragment begins: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1708001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1708001_add_hostname_and_ip_to_agents_table.sql');
COMMIT;


-- Change script: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql
ALTER TABLE agents ADD COLUMN hostname VARCHAR(255) DEFAULT NULL;
ALTER TABLE agents ADD COLUMN ipaddress VARCHAR(50) DEFAULT NULL;
CREATE INDEX idx_agent_uuid ON AGENTS(UUID);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1708001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------


--------------- Fragment begins: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801001_remove_regex_generator_type_from_artifact_properties_generator.sql');
COMMIT;


-- Change script: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql
ALTER TABLE artifactpropertiesgenerator DROP COLUMN regex;
ALTER TABLE artifactpropertiesgenerator DROP COLUMN generatorType;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------


--------------- Fragment begins: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql');
COMMIT;


-- Change script: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql
ALTER TABLE artifactplans ADD COLUMN pluggableArtifactConfigJson TEXT DEFAULT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------


--------------- Fragment begins: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801003_remove_environment_variables_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM environmentVariables
-- WHERE environmentVariables.id IN (
--   SELECT environmentVariables.id
--   FROM environmentVariables
--   INNER JOIN builds
--   ON
--     builds.id = environmentVariables.entityId
--   WHERE
--       environmentVariables.entityType = 'Job'
--     AND
--       builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801004_remove_artifact_plans_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPlans
-- WHERE artifactPlans.id IN (
--   SELECT artifactPlans.id
--   FROM artifactPlans
--   INNER JOIN builds
--     ON builds.id = artifactPlans.buildId
--   WHERE
--       artifactPlans.artifactType = 'file'
--     AND
--       builds.state = 'Completed'
-- );




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801005, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801005_remove_artifact_properties_generator_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPropertiesGenerator
-- WHERE ID IN (
--   SELECT artifactPropertiesGenerator.id
--   FROM artifactPropertiesGenerator
--   INNER JOIN builds
--     ON builds.id = artifactPropertiesGenerator.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801005 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801006, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801006_remove_resources_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801006: 1801006_remove_resources_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.
-- DELETE FROM resources
-- WHERE resources.id IN (
--   SELECT resources.id
--   FROM resources
--   INNER JOIN builds
--     ON builds.id = resources.buildId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801006 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801007, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801007_remove_job_agent_metadata_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM jobAgentMetadata
-- WHERE jobAgentMetadata.id IN (
--   SELECT jobAgentMetadata.id
--   FROM jobAgentMetadata
--   INNER JOIN builds
--     ON
--       builds.id = jobAgentMetadata.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801007 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802001_clear_username_and_comment_for_dependency_materials.sql');
COMMIT;


-- Change script: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql
UPDATE
  modifications
SET
  username = null, comment = null
WHERE
    pipelineid IS NOT NULL
  AND
    username = 'Unknown'
  AND
    comment = 'Unknown';



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------


--------------- Fragment begins: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802002_add_index_on_pipelines_name_and_id_column.sql');
COMMIT;


-- Change script: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_pipeline_name_id ON pipelines( name, id );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------


--------------- Fragment begins: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1804001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql');
COMMIT;


-- Change script: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql
ALTER TABLE PIPELINELABELCOUNTS ADD COLUMN caseInsensitivePipelineName CITEXT;
UPDATE PIPELINELABELCOUNTS set caseInsensitivePipelineName = pipelinename;
CREATE INDEX idx_pipelinelabelcounts_caseinsensitivepipelinename ON PIPELINELABELCOUNTS(caseInsensitivePipelineName);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1804001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------


--------------- Fragment begins: #1805001: 1805001_drop_preferred_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1805001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1805001_drop_preferred_table.sql');
COMMIT;


-- Change script: #1805001: 1805001_drop_preferred_table.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- See `230006_make_user_name_case_insensitive.sql`
-- This was a temp table created to make users' login-name case-insensitive
DROP TABLE preffered;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1805001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1805001: 1805001_drop_preferred_table.sql ---------------


--------------- Fragment begins: #1807001: 1807001_data_sharing_settings_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807001_data_sharing_settings_table.sql');
COMMIT;


-- Change script: #1807001: 1807001_data_sharing_settings_table.sql
CREATE SEQUENCE datasharingsettings_id_seq START WITH 1;

CREATE TABLE DataSharingSettings (
  id             BIGINT DEFAULT nextval('datasharingsettings_id_seq') PRIMARY KEY,
  allowSharing        BOOLEAN NOT NULL,
  updatedBy    VARCHAR(255),
  updatedOn    TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807001: 1807001_data_sharing_settings_table.sql ---------------


--------------- Fragment begins: #1807002: 1807002_usage_data_reporting_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807002_usage_data_reporting_table.sql');
COMMIT;


-- Change script: #1807002: 1807002_usage_data_reporting_table.sql
CREATE SEQUENCE usagedatareporting_id_seq START WITH 1;

CREATE TABLE UsageDataReporting (
  id             BIGINT DEFAULT nextval('usagedatareporting_id_seq') PRIMARY KEY,
  serverId       VARCHAR(255) NOT NULL,
  lastReportedAt TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807002: 1807002_usage_data_reporting_table.sql ---------------


--------------- Fragment begins: #1808001: 1808001_remove_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808001_remove_oauth_tables.sql');
COMMIT;


-- Change script: #1808001: 1808001_remove_oauth_tables.sql
DROP TABLE oauthtokens;
DROP SEQUENCE oauthtokens_id_seq;

DROP TABLE oauthauthorizations;
DROP SEQUENCE oauthauthorizations_id_seq;

DROP TABLE oauthclients;
DROP SEQUENCE oauthclients_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808001: 1808001_remove_oauth_tables.sql ---------------


--------------- Fragment begins: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808002_add_filters_and_version_to_pipeline_selections.sql');
COMMIT;


-- Change script: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

ALTER TABLE PipelineSelections ADD COLUMN filters TEXT;
ALTER TABLE PipelineSelections ADD COLUMN version INT DEFAULT 0 NOT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------

]; nested exception is org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:230)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:419)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:445)
	at com.thoughtworks.go.postgresql.PostgresqlDatabase.upgrade(PostgresqlDatabase.java:107)
	... 97 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2157)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1886)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:255)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:555)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:403)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:395)
	at org.apache.commons.dbcp.DelegatingStatement.execute(DelegatingStatement.java:264)
	at org.apache.commons.dbcp.DelegatingStatement.execute(DelegatingStatement.java:264)
	at org.springframework.jdbc.core.JdbcTemplate$1ExecuteStatementCallback.doInStatement(JdbcTemplate.java:436)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:408)
	... 99 common frames omitted
    componentName           VARCHAR(255) Not NULL,
    installedVersion        VARCHAR(100) Not NULL,
    latestVersion           VARCHAR(50),
    latestVersionUpdatedAt  TIMESTAMP,
    UNIQUE (componentName)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503002: 1503002_create_version_infos_table.sql ---------------


--------------- Fragment begins: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606001_add_index_to_buildstatetransitions.sql');
COMMIT;


-- Change script: #1606001: 1606001_add_index_to_buildstatetransitions.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_buildstatetransition_build_id ON buildstatetransitions(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------


--------------- Fragment begins: #1606002: 1606002_add_index_to_artifactplans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606002_add_index_to_artifactplans.sql');
COMMIT;


-- Change script: #1606002: 1606002_add_index_to_artifactplans.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_artifactplan_build_id ON artifactplans(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606002: 1606002_add_index_to_artifactplans.sql ---------------


--------------- Fragment begins: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1607001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1607001_create_agent_metadata_job_table.sql');
COMMIT;


-- Change script: #1607001: 1607001_create_agent_metadata_job_table.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE SEQUENCE jobagentmetadata_id_seq START WITH 1;
CREATE TABLE jobagentmetadata (
  id              BIGINT DEFAULT nextval('jobagentmetadata_id_seq') PRIMARY KEY,
  jobId           BIGINT UNIQUE NOT NULL,
  metadata        TEXT NOT NULL,
  metadataVersion VARCHAR(50),
  UNIQUE (jobId)
);

ALTER TABLE jobagentmetadata ADD CONSTRAINT fk_jobagentmetadata_jobs FOREIGN KEY (jobId) REFERENCES builds (id)
  ON DELETE CASCADE;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1607001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------


--------------- Fragment begins: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1610001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1610001_add_index_to_modifiedfiles.sql');
COMMIT;


-- Change script: #1610001: 1610001_add_index_to_modifiedfiles.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX CONCURRENTLY idx_modifiedfiles_modification_id ON modifiedfiles(modificationid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1610001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------


--------------- Fragment begins: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701001_remove_gadget_oauth_tables.sql');
COMMIT;


-- Change script: #1701001: 1701001_remove_gadget_oauth_tables.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

DROP TABLE gadgetOauthAuthorizationCodes;
DROP TABLE gadgetOauthAccessTokens;
DROP TABLE gadgetOauthClients;

DROP SEQUENCE gadgetOauthClients_id_seq;
DROP SEQUENCE gadgetOauthAccessTokens_id_seq;
DROP SEQUENCE gadgetOauthAuthorizationCodes_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------


--------------- Fragment begins: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701002_remove_materialproperties_id_seq.sql');
COMMIT;


-- Change script: #1701002: 1701002_remove_materialproperties_id_seq.sql
DROP SEQUENCE IF EXISTS materialProperties_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------


--------------- Fragment begins: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1702001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1702001_remove_build_cause_buffer_table.sql');
COMMIT;


-- Change script: #1702001: 1702001_remove_build_cause_buffer_table.sql
DROP TABLE BuildCauseBuffer;
DROP SEQUENCE buildcausebuffer_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1702001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------


--------------- Fragment begins: #1704001: 1704001_widen_agents_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704001_widen_agents_uuid_column.sql');
COMMIT;


-- Change script: #1704001: 1704001_widen_agents_uuid_column.sql

ALTER TABLE agents ALTER COLUMN uuid TYPE VARCHAR(255);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704001: 1704001_widen_agents_uuid_column.sql ---------------


--------------- Fragment begins: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704002_widen_builds_agent_uuid_column.sql');
COMMIT;


-- Change script: #1704002: 1704002_widen_builds_agent_uuid_column.sql

DROP VIEW _builds;

ALTER TABLE builds ALTER COLUMN agentUuid TYPE VARCHAR(255);

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------


--------------- Fragment begins: #1704003: 1704003_pipeline_state_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704003_pipeline_state_table.sql');
COMMIT;


-- Change script: #1704003: 1704003_pipeline_state_table.sql
CREATE SEQUENCE pipelinestates_id_seq START WITH 1;
CREATE TABLE PipelineStates (
    id                      BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pipelineName            CITEXT NOT NULL,
    locked                  BOOLEAN,
    lockedByPipelineId              BIGINT
);

ALTER TABLE PipelineStates ADD CONSTRAINT unique_pipeline_state UNIQUE (pipelineName);

INSERT INTO PipelineStates (pipelineName, locked, lockedByPipelineId) (select name, locked, id from pipelines where id in (select max(id) from pipelines where locked = true group by name));

DROP VIEW _stages;

CREATE VIEW _stages AS
    SELECT s.*,
      p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, ps.locked, p.naturalOrder
    FROM stages s
    INNER JOIN pipelines p ON p.id = s.pipelineId
    LEFT OUTER JOIN PipelineStates ps on ps.lockedByPipelineId = s.pipelineId;


ALTER TABLE pipelines drop column locked;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704003: 1704003_pipeline_state_table.sql ---------------


--------------- Fragment begins: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704004_pipeline_states_sequence_reset.sql');
COMMIT;


-- Change script: #1704004: 1704004_pipeline_states_sequence_reset.sql
-- As part of 1704003_pipeline_state_table.sql, PipelineStates was incorrectly setup to use plugins_id_seq instead of pipelinestates_id_seq.
-- This migration resets the sequence pipelinestates_id_seq to be the max(id) of PipelineStates, and alters PipelineStates to use the correct sequence.
-- Since sequences are not explicitly defined for H2, a corresponding migration for H2 is not required.

-- This delta is being backported to all releases starting from 17.4 until 17.10 as part of the patch release.

do $$
declare maxid int;
begin
    select max(id) from pipelinestates into maxid;
    IF maxid IS NULL THEN
        maxid = 1;
    END IF;
    execute 'alter SEQUENCE pipelinestates_id_seq RESTART with '|| maxid;
end;
$$ language plpgsql;

ALTER table PipelineStates alter column ID set default nextval('pipelinestates_id_seq');



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------


--------------- Fragment begins: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1708001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1708001_add_hostname_and_ip_to_agents_table.sql');
COMMIT;


-- Change script: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql
ALTER TABLE agents ADD COLUMN hostname VARCHAR(255) DEFAULT NULL;
ALTER TABLE agents ADD COLUMN ipaddress VARCHAR(50) DEFAULT NULL;
CREATE INDEX idx_agent_uuid ON AGENTS(UUID);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1708001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------


--------------- Fragment begins: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801001_remove_regex_generator_type_from_artifact_properties_generator.sql');
COMMIT;


-- Change script: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql
ALTER TABLE artifactpropertiesgenerator DROP COLUMN regex;
ALTER TABLE artifactpropertiesgenerator DROP COLUMN generatorType;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------


--------------- Fragment begins: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql');
COMMIT;


-- Change script: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql
ALTER TABLE artifactplans ADD COLUMN pluggableArtifactConfigJson TEXT DEFAULT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------


--------------- Fragment begins: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801003_remove_environment_variables_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM environmentVariables
-- WHERE environmentVariables.id IN (
--   SELECT environmentVariables.id
--   FROM environmentVariables
--   INNER JOIN builds
--   ON
--     builds.id = environmentVariables.entityId
--   WHERE
--       environmentVariables.entityType = 'Job'
--     AND
--       builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801004_remove_artifact_plans_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPlans
-- WHERE artifactPlans.id IN (
--   SELECT artifactPlans.id
--   FROM artifactPlans
--   INNER JOIN builds
--     ON builds.id = artifactPlans.buildId
--   WHERE
--       artifactPlans.artifactType = 'file'
--     AND
--       builds.state = 'Completed'
-- );




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801005, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801005_remove_artifact_properties_generator_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPropertiesGenerator
-- WHERE ID IN (
--   SELECT artifactPropertiesGenerator.id
--   FROM artifactPropertiesGenerator
--   INNER JOIN builds
--     ON builds.id = artifactPropertiesGenerator.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801005 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801006, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801006_remove_resources_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801006: 1801006_remove_resources_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.
-- DELETE FROM resources
-- WHERE resources.id IN (
--   SELECT resources.id
--   FROM resources
--   INNER JOIN builds
--     ON builds.id = resources.buildId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801006 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801007, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801007_remove_job_agent_metadata_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM jobAgentMetadata
-- WHERE jobAgentMetadata.id IN (
--   SELECT jobAgentMetadata.id
--   FROM jobAgentMetadata
--   INNER JOIN builds
--     ON
--       builds.id = jobAgentMetadata.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801007 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802001_clear_username_and_comment_for_dependency_materials.sql');
COMMIT;


-- Change script: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql
UPDATE
  modifications
SET
  username = null, comment = null
WHERE
    pipelineid IS NOT NULL
  AND
    username = 'Unknown'
  AND
    comment = 'Unknown';



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------


--------------- Fragment begins: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802002_add_index_on_pipelines_name_and_id_column.sql');
COMMIT;


-- Change script: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_pipeline_name_id ON pipelines( name, id );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------


--------------- Fragment begins: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1804001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql');
COMMIT;


-- Change script: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql
ALTER TABLE PIPELINELABELCOUNTS ADD COLUMN caseInsensitivePipelineName CITEXT;
UPDATE PIPELINELABELCOUNTS set caseInsensitivePipelineName = pipelinename;
CREATE INDEX idx_pipelinelabelcounts_caseinsensitivepipelinename ON PIPELINELABELCOUNTS(caseInsensitivePipelineName);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1804001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------


--------------- Fragment begins: #1805001: 1805001_drop_preferred_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1805001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1805001_drop_preferred_table.sql');
COMMIT;


-- Change script: #1805001: 1805001_drop_preferred_table.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- See `230006_make_user_name_case_insensitive.sql`
-- This was a temp table created to make users' login-name case-insensitive
DROP TABLE preffered;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1805001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1805001: 1805001_drop_preferred_table.sql ---------------


--------------- Fragment begins: #1807001: 1807001_data_sharing_settings_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807001_data_sharing_settings_table.sql');
COMMIT;


-- Change script: #1807001: 1807001_data_sharing_settings_table.sql
CREATE SEQUENCE datasharingsettings_id_seq START WITH 1;

CREATE TABLE DataSharingSettings (
  id             BIGINT DEFAULT nextval('datasharingsettings_id_seq') PRIMARY KEY,
  allowSharing        BOOLEAN NOT NULL,
  updatedBy    VARCHAR(255),
  updatedOn    TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807001: 1807001_data_sharing_settings_table.sql ---------------


--------------- Fragment begins: #1807002: 1807002_usage_data_reporting_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807002_usage_data_reporting_table.sql');
COMMIT;


-- Change script: #1807002: 1807002_usage_data_reporting_table.sql
CREATE SEQUENCE usagedatareporting_id_seq START WITH 1;

CREATE TABLE UsageDataReporting (
  id             BIGINT DEFAULT nextval('usagedatareporting_id_seq') PRIMARY KEY,
  serverId       VARCHAR(255) NOT NULL,
  lastReportedAt TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807002: 1807002_usage_data_reporting_table.sql ---------------


--------------- Fragment begins: #1808001: 1808001_remove_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808001_remove_oauth_tables.sql');
COMMIT;


-- Change script: #1808001: 1808001_remove_oauth_tables.sql
DROP TABLE oauthtokens;
DROP SEQUENCE oauthtokens_id_seq;

DROP TABLE oauthauthorizations;
DROP SEQUENCE oauthauthorizations_id_seq;

DROP TABLE oauthclients;
DROP SEQUENCE oauthclients_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808001: 1808001_remove_oauth_tables.sql ---------------


--------------- Fragment begins: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808002_add_filters_and_version_to_pipeline_selections.sql');
COMMIT;


-- Change script: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

ALTER TABLE PipelineSelections ADD COLUMN filters TEXT;
ALTER TABLE PipelineSelections ADD COLUMN version INT DEFAULT 0 NOT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------

]; nested exception is org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:359)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:634)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:145)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1100)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:443)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:325)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:890)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:532)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:853)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:344)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1515)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1477)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:785)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:261)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:41)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:188)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:150)
	at com.thoughtworks.go.server.Jetty9Server.startHandlers(Jetty9Server.java:187)
	at com.thoughtworks.go.server.Jetty9Server.start(Jetty9Server.java:137)
	at com.thoughtworks.go.server.GoServer.startServer(GoServer.java:72)
	... 8 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'lazyStageGraphLoader' defined in file [/go-working-dir/work/jetty-0.0.0.0-8153-cruise.war-_go-any-/webapp/WEB-INF/classes/com/thoughtworks/studios/shine/cruise/stage/details/LazyStageGraphLoader.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlMapClient' defined in ServletContext resource [/WEB-INF/applicationContext-dataLocalAccess.xml]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'databaseUpgraderDataSourceFactory': Invocation of init method failed; nested exception is java.lang.RuntimeException: org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [

--------------- Fragment begins: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303001_add_additional_data_field_to_modifications_table.sql');
COMMIT;


-- Change script: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql
ALTER TABLE modifications ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------


--------------- Fragment begins: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303002_add_index_to_builds_on_stageId.sql');
COMMIT;


-- Change script: #1303002: 1303002_add_index_to_builds_on_stageId.sql
CREATE INDEX idx_builds_stageId ON builds(stageId);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------


--------------- Fragment begins: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303003_add_index_to_stages_resources_tables.sql');
COMMIT;


-- Change script: #1303003: 1303003_add_index_to_stages_resources_tables.sql
CREATE INDEX idx_stages_pipelineId ON stages(pipelineid);
CREATE INDEX idx_resources_buildId ON resources(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------


--------------- Fragment begins: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303004_indexes_based_on_purge_tool.sql');
COMMIT;


-- Change script: #1303004: 1303004_indexes_based_on_purge_tool.sql
CREATE INDEX idx_properties_buildId ON properties(buildId);
CREATE INDEX idx_materials_pipelinename ON materials(pipelinename);
CREATE INDEX idx_artifactpropertiesgenerator_jobid ON artifactpropertiesgenerator(jobid);
CREATE INDEX idx_environmentvariables_entitytype ON environmentvariables(entitytype);
CREATE INDEX idx_stageartifactcleanupprohibited_pipelinename ON stageartifactcleanupprohibited(pipelinename);
CREATE INDEX idx_pipelineLabelCounts_pipelinename ON pipelineLabelCounts(pipelinename);




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------


--------------- Fragment begins: #1304001: 1304001_remove_luau_related_entries.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1304001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1304001_remove_luau_related_entries.sql');
COMMIT;


-- Change script: #1304001: 1304001_remove_luau_related_entries.sql
DROP TABLE IF EXISTS luau_groups_users;
DROP TABLE IF EXISTS luau_groups;
DROP TABLE IF EXISTS luaustate;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1304001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1304001: 1304001_remove_luau_related_entries.sql ---------------


--------------- Fragment begins: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1401001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1401001_recreating_trigger_because_of_cruise_to_go_change.sql');
COMMIT;


-- Change script: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql
SELECT (1);


UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1401001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------


--------------- Fragment begins: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403001_fix_null_artifacttype_on_artifactplans_table.sql');
COMMIT;


-- Change script: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql
UPDATE ARTIFACTPLANS SET ARTIFACTTYPE='file' WHERE ARTIFACTTYPE IS NULL;
COMMIT;

-- No undo as adding default value to mandatory field



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------


--------------- Fragment begins: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql');
COMMIT;


-- Change script: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

alter table builds add column runMultipleInstance boolean default false;

DROP VIEW _builds;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------


--------------- Fragment begins: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql');
COMMIT;


-- Change script: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelineselections RENAME COLUMN unselectedpipelines TO selections;

ALTER TABLE pipelineselections ADD COLUMN isblacklist BOOLEAN DEFAULT true;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------


--------------- Fragment begins: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501002_add_comment_column_to_pipelines.sql');
COMMIT;


-- Change script: #1501002: 1501002_add_comment_column_to_pipelines.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelines ADD COLUMN comment TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------


--------------- Fragment begins: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501003_add_additional_data_field_to_materials_table.sql');
COMMIT;


-- Change script: #1501003: 1501003_add_additional_data_field_to_materials_table.sql
ALTER TABLE materials ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------


--------------- Fragment begins: #1502001: 1502001_create_plugins_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1502001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1502001_create_plugins_table.sql');
COMMIT;


-- Change script: #1502001: 1502001_create_plugins_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE plugins_id_seq START WITH 1;
CREATE TABLE plugins (
    id              BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pluginId        VARCHAR(255) Not NULL,
    configuration   TEXT,
    UNIQUE (pluginId)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1502001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1502001: 1502001_create_plugins_table.sql ---------------


--------------- Fragment begins: #1503001: 1503001_remove_licensing_from_users.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503001_remove_licensing_from_users.sql');
COMMIT;


-- Change script: #1503001: 1503001_remove_licensing_from_users.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE users DROP COLUMN disableLicenseExpiryWarning;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503001: 1503001_remove_licensing_from_users.sql ---------------


--------------- Fragment begins: #1503002: 1503002_create_version_infos_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503002_create_version_infos_table.sql');
COMMIT;


-- Change script: #1503002: 1503002_create_version_infos_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2015 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE versioninfos_id_seq START WITH 1;
CREATE TABLE versioninfos (
    id                      BIGINT DEFAULT nextval('versioninfos_id_seq') PRIMARY KEY,
    componentName           VARCHAR(255) Not NULL,
    installedVersion        VARCHAR(100) Not NULL,
    latestVersion           VARCHAR(50),
    latestVersionUpdatedAt  TIMESTAMP,
    UNIQUE (componentName)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503002: 1503002_create_version_infos_table.sql ---------------


--------------- Fragment begins: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606001_add_index_to_buildstatetransitions.sql');
COMMIT;


-- Change script: #1606001: 1606001_add_index_to_buildstatetransitions.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_buildstatetransition_build_id ON buildstatetransitions(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------


--------------- Fragment begins: #1606002: 1606002_add_index_to_artifactplans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606002_add_index_to_artifactplans.sql');
COMMIT;


-- Change script: #1606002: 1606002_add_index_to_artifactplans.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_artifactplan_build_id ON artifactplans(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606002: 1606002_add_index_to_artifactplans.sql ---------------


--------------- Fragment begins: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1607001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1607001_create_agent_metadata_job_table.sql');
COMMIT;


-- Change script: #1607001: 1607001_create_agent_metadata_job_table.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE SEQUENCE jobagentmetadata_id_seq START WITH 1;
CREATE TABLE jobagentmetadata (
  id              BIGINT DEFAULT nextval('jobagentmetadata_id_seq') PRIMARY KEY,
  jobId           BIGINT UNIQUE NOT NULL,
  metadata        TEXT NOT NULL,
  metadataVersion VARCHAR(50),
  UNIQUE (jobId)
);

ALTER TABLE jobagentmetadata ADD CONSTRAINT fk_jobagentmetadata_jobs FOREIGN KEY (jobId) REFERENCES builds (id)
  ON DELETE CASCADE;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1607001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------


--------------- Fragment begins: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1610001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1610001_add_index_to_modifiedfiles.sql');
COMMIT;


-- Change script: #1610001: 1610001_add_index_to_modifiedfiles.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX CONCURRENTLY idx_modifiedfiles_modification_id ON modifiedfiles(modificationid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1610001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------


--------------- Fragment begins: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701001_remove_gadget_oauth_tables.sql');
COMMIT;


-- Change script: #1701001: 1701001_remove_gadget_oauth_tables.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

DROP TABLE gadgetOauthAuthorizationCodes;
DROP TABLE gadgetOauthAccessTokens;
DROP TABLE gadgetOauthClients;

DROP SEQUENCE gadgetOauthClients_id_seq;
DROP SEQUENCE gadgetOauthAccessTokens_id_seq;
DROP SEQUENCE gadgetOauthAuthorizationCodes_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------


--------------- Fragment begins: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701002_remove_materialproperties_id_seq.sql');
COMMIT;


-- Change script: #1701002: 1701002_remove_materialproperties_id_seq.sql
DROP SEQUENCE IF EXISTS materialProperties_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------


--------------- Fragment begins: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1702001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1702001_remove_build_cause_buffer_table.sql');
COMMIT;


-- Change script: #1702001: 1702001_remove_build_cause_buffer_table.sql
DROP TABLE BuildCauseBuffer;
DROP SEQUENCE buildcausebuffer_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1702001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------


--------------- Fragment begins: #1704001: 1704001_widen_agents_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704001_widen_agents_uuid_column.sql');
COMMIT;


-- Change script: #1704001: 1704001_widen_agents_uuid_column.sql

ALTER TABLE agents ALTER COLUMN uuid TYPE VARCHAR(255);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704001: 1704001_widen_agents_uuid_column.sql ---------------


--------------- Fragment begins: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704002_widen_builds_agent_uuid_column.sql');
COMMIT;


-- Change script: #1704002: 1704002_widen_builds_agent_uuid_column.sql

DROP VIEW _builds;

ALTER TABLE builds ALTER COLUMN agentUuid TYPE VARCHAR(255);

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------


--------------- Fragment begins: #1704003: 1704003_pipeline_state_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704003_pipeline_state_table.sql');
COMMIT;


-- Change script: #1704003: 1704003_pipeline_state_table.sql
CREATE SEQUENCE pipelinestates_id_seq START WITH 1;
CREATE TABLE PipelineStates (
    id                      BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pipelineName            CITEXT NOT NULL,
    locked                  BOOLEAN,
    lockedByPipelineId              BIGINT
);

ALTER TABLE PipelineStates ADD CONSTRAINT unique_pipeline_state UNIQUE (pipelineName);

INSERT INTO PipelineStates (pipelineName, locked, lockedByPipelineId) (select name, locked, id from pipelines where id in (select max(id) from pipelines where locked = true group by name));

DROP VIEW _stages;

CREATE VIEW _stages AS
    SELECT s.*,
      p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, ps.locked, p.naturalOrder
    FROM stages s
    INNER JOIN pipelines p ON p.id = s.pipelineId
    LEFT OUTER JOIN PipelineStates ps on ps.lockedByPipelineId = s.pipelineId;


ALTER TABLE pipelines drop column locked;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704003: 1704003_pipeline_state_table.sql ---------------


--------------- Fragment begins: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704004_pipeline_states_sequence_reset.sql');
COMMIT;


-- Change script: #1704004: 1704004_pipeline_states_sequence_reset.sql
-- As part of 1704003_pipeline_state_table.sql, PipelineStates was incorrectly setup to use plugins_id_seq instead of pipelinestates_id_seq.
-- This migration resets the sequence pipelinestates_id_seq to be the max(id) of PipelineStates, and alters PipelineStates to use the correct sequence.
-- Since sequences are not explicitly defined for H2, a corresponding migration for H2 is not required.

-- This delta is being backported to all releases starting from 17.4 until 17.10 as part of the patch release.

do $$
declare maxid int;
begin
    select max(id) from pipelinestates into maxid;
    IF maxid IS NULL THEN
        maxid = 1;
    END IF;
    execute 'alter SEQUENCE pipelinestates_id_seq RESTART with '|| maxid;
end;
$$ language plpgsql;

ALTER table PipelineStates alter column ID set default nextval('pipelinestates_id_seq');



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------


--------------- Fragment begins: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1708001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1708001_add_hostname_and_ip_to_agents_table.sql');
COMMIT;


-- Change script: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql
ALTER TABLE agents ADD COLUMN hostname VARCHAR(255) DEFAULT NULL;
ALTER TABLE agents ADD COLUMN ipaddress VARCHAR(50) DEFAULT NULL;
CREATE INDEX idx_agent_uuid ON AGENTS(UUID);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1708001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------


--------------- Fragment begins: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801001_remove_regex_generator_type_from_artifact_properties_generator.sql');
COMMIT;


-- Change script: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql
ALTER TABLE artifactpropertiesgenerator DROP COLUMN regex;
ALTER TABLE artifactpropertiesgenerator DROP COLUMN generatorType;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------


--------------- Fragment begins: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql');
COMMIT;


-- Change script: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql
ALTER TABLE artifactplans ADD COLUMN pluggableArtifactConfigJson TEXT DEFAULT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------


--------------- Fragment begins: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801003_remove_environment_variables_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM environmentVariables
-- WHERE environmentVariables.id IN (
--   SELECT environmentVariables.id
--   FROM environmentVariables
--   INNER JOIN builds
--   ON
--     builds.id = environmentVariables.entityId
--   WHERE
--       environmentVariables.entityType = 'Job'
--     AND
--       builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801004_remove_artifact_plans_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPlans
-- WHERE artifactPlans.id IN (
--   SELECT artifactPlans.id
--   FROM artifactPlans
--   INNER JOIN builds
--     ON builds.id = artifactPlans.buildId
--   WHERE
--       artifactPlans.artifactType = 'file'
--     AND
--       builds.state = 'Completed'
-- );




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801005, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801005_remove_artifact_properties_generator_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPropertiesGenerator
-- WHERE ID IN (
--   SELECT artifactPropertiesGenerator.id
--   FROM artifactPropertiesGenerator
--   INNER JOIN builds
--     ON builds.id = artifactPropertiesGenerator.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801005 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801006, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801006_remove_resources_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801006: 1801006_remove_resources_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.
-- DELETE FROM resources
-- WHERE resources.id IN (
--   SELECT resources.id
--   FROM resources
--   INNER JOIN builds
--     ON builds.id = resources.buildId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801006 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801007, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801007_remove_job_agent_metadata_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM jobAgentMetadata
-- WHERE jobAgentMetadata.id IN (
--   SELECT jobAgentMetadata.id
--   FROM jobAgentMetadata
--   INNER JOIN builds
--     ON
--       builds.id = jobAgentMetadata.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801007 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802001_clear_username_and_comment_for_dependency_materials.sql');
COMMIT;


-- Change script: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql
UPDATE
  modifications
SET
  username = null, comment = null
WHERE
    pipelineid IS NOT NULL
  AND
    username = 'Unknown'
  AND
    comment = 'Unknown';



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------


--------------- Fragment begins: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802002_add_index_on_pipelines_name_and_id_column.sql');
COMMIT;


-- Change script: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_pipeline_name_id ON pipelines( name, id );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------


--------------- Fragment begins: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1804001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql');
COMMIT;


-- Change script: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql
ALTER TABLE PIPELINELABELCOUNTS ADD COLUMN caseInsensitivePipelineName CITEXT;
UPDATE PIPELINELABELCOUNTS set caseInsensitivePipelineName = pipelinename;
CREATE INDEX idx_pipelinelabelcounts_caseinsensitivepipelinename ON PIPELINELABELCOUNTS(caseInsensitivePipelineName);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1804001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------


--------------- Fragment begins: #1805001: 1805001_drop_preferred_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1805001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1805001_drop_preferred_table.sql');
COMMIT;


-- Change script: #1805001: 1805001_drop_preferred_table.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- See `230006_make_user_name_case_insensitive.sql`
-- This was a temp table created to make users' login-name case-insensitive
DROP TABLE preffered;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1805001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1805001: 1805001_drop_preferred_table.sql ---------------


--------------- Fragment begins: #1807001: 1807001_data_sharing_settings_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807001_data_sharing_settings_table.sql');
COMMIT;


-- Change script: #1807001: 1807001_data_sharing_settings_table.sql
CREATE SEQUENCE datasharingsettings_id_seq START WITH 1;

CREATE TABLE DataSharingSettings (
  id             BIGINT DEFAULT nextval('datasharingsettings_id_seq') PRIMARY KEY,
  allowSharing        BOOLEAN NOT NULL,
  updatedBy    VARCHAR(255),
  updatedOn    TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807001: 1807001_data_sharing_settings_table.sql ---------------


--------------- Fragment begins: #1807002: 1807002_usage_data_reporting_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807002_usage_data_reporting_table.sql');
COMMIT;


-- Change script: #1807002: 1807002_usage_data_reporting_table.sql
CREATE SEQUENCE usagedatareporting_id_seq START WITH 1;

CREATE TABLE UsageDataReporting (
  id             BIGINT DEFAULT nextval('usagedatareporting_id_seq') PRIMARY KEY,
  serverId       VARCHAR(255) NOT NULL,
  lastReportedAt TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807002: 1807002_usage_data_reporting_table.sql ---------------


--------------- Fragment begins: #1808001: 1808001_remove_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808001_remove_oauth_tables.sql');
COMMIT;


-- Change script: #1808001: 1808001_remove_oauth_tables.sql
DROP TABLE oauthtokens;
DROP SEQUENCE oauthtokens_id_seq;

DROP TABLE oauthauthorizations;
DROP SEQUENCE oauthauthorizations_id_seq;

DROP TABLE oauthclients;
DROP SEQUENCE oauthclients_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808001: 1808001_remove_oauth_tables.sql ---------------


--------------- Fragment begins: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808002_add_filters_and_version_to_pipeline_selections.sql');
COMMIT;


-- Change script: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

ALTER TABLE PipelineSelections ADD COLUMN filters TEXT;
ALTER TABLE PipelineSelections ADD COLUMN version INT DEFAULT 0 NOT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------

]; nested exception is org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1100)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	... 42 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlMapClient' defined in ServletContext resource [/WEB-INF/applicationContext-dataLocalAccess.xml]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'databaseUpgraderDataSourceFactory': Invocation of init method failed; nested exception is java.lang.RuntimeException: org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [

--------------- Fragment begins: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303001_add_additional_data_field_to_modifications_table.sql');
COMMIT;


-- Change script: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql
ALTER TABLE modifications ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------


--------------- Fragment begins: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303002_add_index_to_builds_on_stageId.sql');
COMMIT;


-- Change script: #1303002: 1303002_add_index_to_builds_on_stageId.sql
CREATE INDEX idx_builds_stageId ON builds(stageId);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------


--------------- Fragment begins: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303003_add_index_to_stages_resources_tables.sql');
COMMIT;


-- Change script: #1303003: 1303003_add_index_to_stages_resources_tables.sql
CREATE INDEX idx_stages_pipelineId ON stages(pipelineid);
CREATE INDEX idx_resources_buildId ON resources(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------


--------------- Fragment begins: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303004_indexes_based_on_purge_tool.sql');
COMMIT;


-- Change script: #1303004: 1303004_indexes_based_on_purge_tool.sql
CREATE INDEX idx_properties_buildId ON properties(buildId);
CREATE INDEX idx_materials_pipelinename ON materials(pipelinename);
CREATE INDEX idx_artifactpropertiesgenerator_jobid ON artifactpropertiesgenerator(jobid);
CREATE INDEX idx_environmentvariables_entitytype ON environmentvariables(entitytype);
CREATE INDEX idx_stageartifactcleanupprohibited_pipelinename ON stageartifactcleanupprohibited(pipelinename);
CREATE INDEX idx_pipelineLabelCounts_pipelinename ON pipelineLabelCounts(pipelinename);




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------


--------------- Fragment begins: #1304001: 1304001_remove_luau_related_entries.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1304001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1304001_remove_luau_related_entries.sql');
COMMIT;


-- Change script: #1304001: 1304001_remove_luau_related_entries.sql
DROP TABLE IF EXISTS luau_groups_users;
DROP TABLE IF EXISTS luau_groups;
DROP TABLE IF EXISTS luaustate;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1304001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1304001: 1304001_remove_luau_related_entries.sql ---------------


--------------- Fragment begins: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1401001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1401001_recreating_trigger_because_of_cruise_to_go_change.sql');
COMMIT;


-- Change script: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql
SELECT (1);


UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1401001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------


--------------- Fragment begins: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403001_fix_null_artifacttype_on_artifactplans_table.sql');
COMMIT;


-- Change script: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql
UPDATE ARTIFACTPLANS SET ARTIFACTTYPE='file' WHERE ARTIFACTTYPE IS NULL;
COMMIT;

-- No undo as adding default value to mandatory field



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------


--------------- Fragment begins: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql');
COMMIT;


-- Change script: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

alter table builds add column runMultipleInstance boolean default false;

DROP VIEW _builds;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------


--------------- Fragment begins: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql');
COMMIT;


-- Change script: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelineselections RENAME COLUMN unselectedpipelines TO selections;

ALTER TABLE pipelineselections ADD COLUMN isblacklist BOOLEAN DEFAULT true;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------


--------------- Fragment begins: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501002_add_comment_column_to_pipelines.sql');
COMMIT;


-- Change script: #1501002: 1501002_add_comment_column_to_pipelines.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelines ADD COLUMN comment TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------


--------------- Fragment begins: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501003_add_additional_data_field_to_materials_table.sql');
COMMIT;


-- Change script: #1501003: 1501003_add_additional_data_field_to_materials_table.sql
ALTER TABLE materials ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------


--------------- Fragment begins: #1502001: 1502001_create_plugins_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1502001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1502001_create_plugins_table.sql');
COMMIT;


-- Change script: #1502001: 1502001_create_plugins_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE plugins_id_seq START WITH 1;
CREATE TABLE plugins (
    id              BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pluginId        VARCHAR(255) Not NULL,
    configuration   TEXT,
    UNIQUE (pluginId)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1502001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1502001: 1502001_create_plugins_table.sql ---------------


--------------- Fragment begins: #1503001: 1503001_remove_licensing_from_users.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503001_remove_licensing_from_users.sql');
COMMIT;


-- Change script: #1503001: 1503001_remove_licensing_from_users.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE users DROP COLUMN disableLicenseExpiryWarning;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503001: 1503001_remove_licensing_from_users.sql ---------------


--------------- Fragment begins: #1503002: 1503002_create_version_infos_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503002_create_version_infos_table.sql');
COMMIT;


-- Change script: #1503002: 1503002_create_version_infos_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2015 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE versioninfos_id_seq START WITH 1;
CREATE TABLE versioninfos (
    id                      BIGINT DEFAULT nextval('versioninfos_id_seq') PRIMARY KEY,
    componentName           VARCHAR(255) Not NULL,
    installedVersion        VARCHAR(100) Not NULL,
    latestVersion           VARCHAR(50),
    latestVersionUpdatedAt  TIMESTAMP,
    UNIQUE (componentName)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503002: 1503002_create_version_infos_table.sql ---------------


--------------- Fragment begins: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606001_add_index_to_buildstatetransitions.sql');
COMMIT;


-- Change script: #1606001: 1606001_add_index_to_buildstatetransitions.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_buildstatetransition_build_id ON buildstatetransitions(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------


--------------- Fragment begins: #1606002: 1606002_add_index_to_artifactplans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606002_add_index_to_artifactplans.sql');
COMMIT;


-- Change script: #1606002: 1606002_add_index_to_artifactplans.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_artifactplan_build_id ON artifactplans(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606002: 1606002_add_index_to_artifactplans.sql ---------------


--------------- Fragment begins: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1607001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1607001_create_agent_metadata_job_table.sql');
COMMIT;


-- Change script: #1607001: 1607001_create_agent_metadata_job_table.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE SEQUENCE jobagentmetadata_id_seq START WITH 1;
CREATE TABLE jobagentmetadata (
  id              BIGINT DEFAULT nextval('jobagentmetadata_id_seq') PRIMARY KEY,
  jobId           BIGINT UNIQUE NOT NULL,
  metadata        TEXT NOT NULL,
  metadataVersion VARCHAR(50),
  UNIQUE (jobId)
);

ALTER TABLE jobagentmetadata ADD CONSTRAINT fk_jobagentmetadata_jobs FOREIGN KEY (jobId) REFERENCES builds (id)
  ON DELETE CASCADE;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1607001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------


--------------- Fragment begins: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1610001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1610001_add_index_to_modifiedfiles.sql');
COMMIT;


-- Change script: #1610001: 1610001_add_index_to_modifiedfiles.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX CONCURRENTLY idx_modifiedfiles_modification_id ON modifiedfiles(modificationid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1610001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------


--------------- Fragment begins: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701001_remove_gadget_oauth_tables.sql');
COMMIT;


-- Change script: #1701001: 1701001_remove_gadget_oauth_tables.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

DROP TABLE gadgetOauthAuthorizationCodes;
DROP TABLE gadgetOauthAccessTokens;
DROP TABLE gadgetOauthClients;

DROP SEQUENCE gadgetOauthClients_id_seq;
DROP SEQUENCE gadgetOauthAccessTokens_id_seq;
DROP SEQUENCE gadgetOauthAuthorizationCodes_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------


--------------- Fragment begins: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701002_remove_materialproperties_id_seq.sql');
COMMIT;


-- Change script: #1701002: 1701002_remove_materialproperties_id_seq.sql
DROP SEQUENCE IF EXISTS materialProperties_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------


--------------- Fragment begins: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1702001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1702001_remove_build_cause_buffer_table.sql');
COMMIT;


-- Change script: #1702001: 1702001_remove_build_cause_buffer_table.sql
DROP TABLE BuildCauseBuffer;
DROP SEQUENCE buildcausebuffer_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1702001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------


--------------- Fragment begins: #1704001: 1704001_widen_agents_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704001_widen_agents_uuid_column.sql');
COMMIT;


-- Change script: #1704001: 1704001_widen_agents_uuid_column.sql

ALTER TABLE agents ALTER COLUMN uuid TYPE VARCHAR(255);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704001: 1704001_widen_agents_uuid_column.sql ---------------


--------------- Fragment begins: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704002_widen_builds_agent_uuid_column.sql');
COMMIT;


-- Change script: #1704002: 1704002_widen_builds_agent_uuid_column.sql

DROP VIEW _builds;

ALTER TABLE builds ALTER COLUMN agentUuid TYPE VARCHAR(255);

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------


--------------- Fragment begins: #1704003: 1704003_pipeline_state_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704003_pipeline_state_table.sql');
COMMIT;


-- Change script: #1704003: 1704003_pipeline_state_table.sql
CREATE SEQUENCE pipelinestates_id_seq START WITH 1;
CREATE TABLE PipelineStates (
    id                      BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pipelineName            CITEXT NOT NULL,
    locked                  BOOLEAN,
    lockedByPipelineId              BIGINT
);

ALTER TABLE PipelineStates ADD CONSTRAINT unique_pipeline_state UNIQUE (pipelineName);

INSERT INTO PipelineStates (pipelineName, locked, lockedByPipelineId) (select name, locked, id from pipelines where id in (select max(id) from pipelines where locked = true group by name));

DROP VIEW _stages;

CREATE VIEW _stages AS
    SELECT s.*,
      p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, ps.locked, p.naturalOrder
    FROM stages s
    INNER JOIN pipelines p ON p.id = s.pipelineId
    LEFT OUTER JOIN PipelineStates ps on ps.lockedByPipelineId = s.pipelineId;


ALTER TABLE pipelines drop column locked;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704003: 1704003_pipeline_state_table.sql ---------------


--------------- Fragment begins: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704004_pipeline_states_sequence_reset.sql');
COMMIT;


-- Change script: #1704004: 1704004_pipeline_states_sequence_reset.sql
-- As part of 1704003_pipeline_state_table.sql, PipelineStates was incorrectly setup to use plugins_id_seq instead of pipelinestates_id_seq.
-- This migration resets the sequence pipelinestates_id_seq to be the max(id) of PipelineStates, and alters PipelineStates to use the correct sequence.
-- Since sequences are not explicitly defined for H2, a corresponding migration for H2 is not required.

-- This delta is being backported to all releases starting from 17.4 until 17.10 as part of the patch release.

do $$
declare maxid int;
begin
    select max(id) from pipelinestates into maxid;
    IF maxid IS NULL THEN
        maxid = 1;
    END IF;
    execute 'alter SEQUENCE pipelinestates_id_seq RESTART with '|| maxid;
end;
$$ language plpgsql;

ALTER table PipelineStates alter column ID set default nextval('pipelinestates_id_seq');



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------


--------------- Fragment begins: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1708001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1708001_add_hostname_and_ip_to_agents_table.sql');
COMMIT;


-- Change script: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql
ALTER TABLE agents ADD COLUMN hostname VARCHAR(255) DEFAULT NULL;
ALTER TABLE agents ADD COLUMN ipaddress VARCHAR(50) DEFAULT NULL;
CREATE INDEX idx_agent_uuid ON AGENTS(UUID);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1708001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------


--------------- Fragment begins: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801001_remove_regex_generator_type_from_artifact_properties_generator.sql');
COMMIT;


-- Change script: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql
ALTER TABLE artifactpropertiesgenerator DROP COLUMN regex;
ALTER TABLE artifactpropertiesgenerator DROP COLUMN generatorType;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------


--------------- Fragment begins: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql');
COMMIT;


-- Change script: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql
ALTER TABLE artifactplans ADD COLUMN pluggableArtifactConfigJson TEXT DEFAULT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------


--------------- Fragment begins: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801003_remove_environment_variables_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM environmentVariables
-- WHERE environmentVariables.id IN (
--   SELECT environmentVariables.id
--   FROM environmentVariables
--   INNER JOIN builds
--   ON
--     builds.id = environmentVariables.entityId
--   WHERE
--       environmentVariables.entityType = 'Job'
--     AND
--       builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801004_remove_artifact_plans_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPlans
-- WHERE artifactPlans.id IN (
--   SELECT artifactPlans.id
--   FROM artifactPlans
--   INNER JOIN builds
--     ON builds.id = artifactPlans.buildId
--   WHERE
--       artifactPlans.artifactType = 'file'
--     AND
--       builds.state = 'Completed'
-- );




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801005, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801005_remove_artifact_properties_generator_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPropertiesGenerator
-- WHERE ID IN (
--   SELECT artifactPropertiesGenerator.id
--   FROM artifactPropertiesGenerator
--   INNER JOIN builds
--     ON builds.id = artifactPropertiesGenerator.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801005 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801006, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801006_remove_resources_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801006: 1801006_remove_resources_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.
-- DELETE FROM resources
-- WHERE resources.id IN (
--   SELECT resources.id
--   FROM resources
--   INNER JOIN builds
--     ON builds.id = resources.buildId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801006 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801007, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801007_remove_job_agent_metadata_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM jobAgentMetadata
-- WHERE jobAgentMetadata.id IN (
--   SELECT jobAgentMetadata.id
--   FROM jobAgentMetadata
--   INNER JOIN builds
--     ON
--       builds.id = jobAgentMetadata.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801007 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802001_clear_username_and_comment_for_dependency_materials.sql');
COMMIT;


-- Change script: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql
UPDATE
  modifications
SET
  username = null, comment = null
WHERE
    pipelineid IS NOT NULL
  AND
    username = 'Unknown'
  AND
    comment = 'Unknown';



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------


--------------- Fragment begins: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802002_add_index_on_pipelines_name_and_id_column.sql');
COMMIT;


-- Change script: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_pipeline_name_id ON pipelines( name, id );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------


--------------- Fragment begins: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1804001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql');
COMMIT;


-- Change script: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql
ALTER TABLE PIPELINELABELCOUNTS ADD COLUMN caseInsensitivePipelineName CITEXT;
UPDATE PIPELINELABELCOUNTS set caseInsensitivePipelineName = pipelinename;
CREATE INDEX idx_pipelinelabelcounts_caseinsensitivepipelinename ON PIPELINELABELCOUNTS(caseInsensitivePipelineName);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1804001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------


--------------- Fragment begins: #1805001: 1805001_drop_preferred_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1805001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1805001_drop_preferred_table.sql');
COMMIT;


-- Change script: #1805001: 1805001_drop_preferred_table.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- See `230006_make_user_name_case_insensitive.sql`
-- This was a temp table created to make users' login-name case-insensitive
DROP TABLE preffered;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1805001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1805001: 1805001_drop_preferred_table.sql ---------------


--------------- Fragment begins: #1807001: 1807001_data_sharing_settings_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807001_data_sharing_settings_table.sql');
COMMIT;


-- Change script: #1807001: 1807001_data_sharing_settings_table.sql
CREATE SEQUENCE datasharingsettings_id_seq START WITH 1;

CREATE TABLE DataSharingSettings (
  id             BIGINT DEFAULT nextval('datasharingsettings_id_seq') PRIMARY KEY,
  allowSharing        BOOLEAN NOT NULL,
  updatedBy    VARCHAR(255),
  updatedOn    TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807001: 1807001_data_sharing_settings_table.sql ---------------


--------------- Fragment begins: #1807002: 1807002_usage_data_reporting_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807002_usage_data_reporting_table.sql');
COMMIT;


-- Change script: #1807002: 1807002_usage_data_reporting_table.sql
CREATE SEQUENCE usagedatareporting_id_seq START WITH 1;

CREATE TABLE UsageDataReporting (
  id             BIGINT DEFAULT nextval('usagedatareporting_id_seq') PRIMARY KEY,
  serverId       VARCHAR(255) NOT NULL,
  lastReportedAt TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807002: 1807002_usage_data_reporting_table.sql ---------------


--------------- Fragment begins: #1808001: 1808001_remove_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808001_remove_oauth_tables.sql');
COMMIT;


-- Change script: #1808001: 1808001_remove_oauth_tables.sql
DROP TABLE oauthtokens;
DROP SEQUENCE oauthtokens_id_seq;

DROP TABLE oauthauthorizations;
DROP SEQUENCE oauthauthorizations_id_seq;

DROP TABLE oauthclients;
DROP SEQUENCE oauthclients_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808001: 1808001_remove_oauth_tables.sql ---------------


--------------- Fragment begins: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808002_add_filters_and_version_to_pipeline_selections.sql');
COMMIT;


-- Change script: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

ALTER TABLE PipelineSelections ADD COLUMN filters TEXT;
ALTER TABLE PipelineSelections ADD COLUMN version INT DEFAULT 0 NOT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------

]; nested exception is org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1100)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getSingletonFactoryBeanForTypeCheck(AbstractAutowireCapableBeanFactory.java:928)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:805)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:564)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:432)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:403)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:206)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1265)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1099)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1064)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	... 52 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'databaseUpgraderDataSourceFactory': Invocation of init method failed; nested exception is java.lang.RuntimeException: org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [

--------------- Fragment begins: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303001_add_additional_data_field_to_modifications_table.sql');
COMMIT;


-- Change script: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql
ALTER TABLE modifications ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------


--------------- Fragment begins: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303002_add_index_to_builds_on_stageId.sql');
COMMIT;


-- Change script: #1303002: 1303002_add_index_to_builds_on_stageId.sql
CREATE INDEX idx_builds_stageId ON builds(stageId);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------


--------------- Fragment begins: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303003_add_index_to_stages_resources_tables.sql');
COMMIT;


-- Change script: #1303003: 1303003_add_index_to_stages_resources_tables.sql
CREATE INDEX idx_stages_pipelineId ON stages(pipelineid);
CREATE INDEX idx_resources_buildId ON resources(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------


--------------- Fragment begins: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303004_indexes_based_on_purge_tool.sql');
COMMIT;


-- Change script: #1303004: 1303004_indexes_based_on_purge_tool.sql
CREATE INDEX idx_properties_buildId ON properties(buildId);
CREATE INDEX idx_materials_pipelinename ON materials(pipelinename);
CREATE INDEX idx_artifactpropertiesgenerator_jobid ON artifactpropertiesgenerator(jobid);
CREATE INDEX idx_environmentvariables_entitytype ON environmentvariables(entitytype);
CREATE INDEX idx_stageartifactcleanupprohibited_pipelinename ON stageartifactcleanupprohibited(pipelinename);
CREATE INDEX idx_pipelineLabelCounts_pipelinename ON pipelineLabelCounts(pipelinename);




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------


--------------- Fragment begins: #1304001: 1304001_remove_luau_related_entries.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1304001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1304001_remove_luau_related_entries.sql');
COMMIT;


-- Change script: #1304001: 1304001_remove_luau_related_entries.sql
DROP TABLE IF EXISTS luau_groups_users;
DROP TABLE IF EXISTS luau_groups;
DROP TABLE IF EXISTS luaustate;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1304001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1304001: 1304001_remove_luau_related_entries.sql ---------------


--------------- Fragment begins: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1401001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1401001_recreating_trigger_because_of_cruise_to_go_change.sql');
COMMIT;


-- Change script: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql
SELECT (1);


UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1401001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------


--------------- Fragment begins: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403001_fix_null_artifacttype_on_artifactplans_table.sql');
COMMIT;


-- Change script: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql
UPDATE ARTIFACTPLANS SET ARTIFACTTYPE='file' WHERE ARTIFACTTYPE IS NULL;
COMMIT;

-- No undo as adding default value to mandatory field



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------


--------------- Fragment begins: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql');
COMMIT;


-- Change script: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

alter table builds add column runMultipleInstance boolean default false;

DROP VIEW _builds;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------


--------------- Fragment begins: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql');
COMMIT;


-- Change script: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelineselections RENAME COLUMN unselectedpipelines TO selections;

ALTER TABLE pipelineselections ADD COLUMN isblacklist BOOLEAN DEFAULT true;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------


--------------- Fragment begins: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501002_add_comment_column_to_pipelines.sql');
COMMIT;


-- Change script: #1501002: 1501002_add_comment_column_to_pipelines.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelines ADD COLUMN comment TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------


--------------- Fragment begins: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501003_add_additional_data_field_to_materials_table.sql');
COMMIT;


-- Change script: #1501003: 1501003_add_additional_data_field_to_materials_table.sql
ALTER TABLE materials ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------


--------------- Fragment begins: #1502001: 1502001_create_plugins_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1502001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1502001_create_plugins_table.sql');
COMMIT;


-- Change script: #1502001: 1502001_create_plugins_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE plugins_id_seq START WITH 1;
CREATE TABLE plugins (
    id              BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pluginId        VARCHAR(255) Not NULL,
    configuration   TEXT,
    UNIQUE (pluginId)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1502001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1502001: 1502001_create_plugins_table.sql ---------------


--------------- Fragment begins: #1503001: 1503001_remove_licensing_from_users.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503001_remove_licensing_from_users.sql');
COMMIT;


-- Change script: #1503001: 1503001_remove_licensing_from_users.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE users DROP COLUMN disableLicenseExpiryWarning;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503001: 1503001_remove_licensing_from_users.sql ---------------


--------------- Fragment begins: #1503002: 1503002_create_version_infos_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503002_create_version_infos_table.sql');
COMMIT;


-- Change script: #1503002: 1503002_create_version_infos_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2015 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE versioninfos_id_seq START WITH 1;
CREATE TABLE versioninfos (
    id                      BIGINT DEFAULT nextval('versioninfos_id_seq') PRIMARY KEY,
    componentName           VARCHAR(255) Not NULL,
    installedVersion        VARCHAR(100) Not NULL,
    latestVersion           VARCHAR(50),
    latestVersionUpdatedAt  TIMESTAMP,
    UNIQUE (componentName)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503002: 1503002_create_version_infos_table.sql ---------------


--------------- Fragment begins: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606001_add_index_to_buildstatetransitions.sql');
COMMIT;


-- Change script: #1606001: 1606001_add_index_to_buildstatetransitions.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_buildstatetransition_build_id ON buildstatetransitions(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------


--------------- Fragment begins: #1606002: 1606002_add_index_to_artifactplans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606002_add_index_to_artifactplans.sql');
COMMIT;


-- Change script: #1606002: 1606002_add_index_to_artifactplans.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_artifactplan_build_id ON artifactplans(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606002: 1606002_add_index_to_artifactplans.sql ---------------


--------------- Fragment begins: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1607001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1607001_create_agent_metadata_job_table.sql');
COMMIT;


-- Change script: #1607001: 1607001_create_agent_metadata_job_table.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE SEQUENCE jobagentmetadata_id_seq START WITH 1;
CREATE TABLE jobagentmetadata (
  id              BIGINT DEFAULT nextval('jobagentmetadata_id_seq') PRIMARY KEY,
  jobId           BIGINT UNIQUE NOT NULL,
  metadata        TEXT NOT NULL,
  metadataVersion VARCHAR(50),
  UNIQUE (jobId)
);

ALTER TABLE jobagentmetadata ADD CONSTRAINT fk_jobagentmetadata_jobs FOREIGN KEY (jobId) REFERENCES builds (id)
  ON DELETE CASCADE;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1607001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------


--------------- Fragment begins: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1610001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1610001_add_index_to_modifiedfiles.sql');
COMMIT;


-- Change script: #1610001: 1610001_add_index_to_modifiedfiles.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX CONCURRENTLY idx_modifiedfiles_modification_id ON modifiedfiles(modificationid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1610001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------


--------------- Fragment begins: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701001_remove_gadget_oauth_tables.sql');
COMMIT;


-- Change script: #1701001: 1701001_remove_gadget_oauth_tables.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

DROP TABLE gadgetOauthAuthorizationCodes;
DROP TABLE gadgetOauthAccessTokens;
DROP TABLE gadgetOauthClients;

DROP SEQUENCE gadgetOauthClients_id_seq;
DROP SEQUENCE gadgetOauthAccessTokens_id_seq;
DROP SEQUENCE gadgetOauthAuthorizationCodes_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------


--------------- Fragment begins: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701002_remove_materialproperties_id_seq.sql');
COMMIT;


-- Change script: #1701002: 1701002_remove_materialproperties_id_seq.sql
DROP SEQUENCE IF EXISTS materialProperties_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------


--------------- Fragment begins: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1702001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1702001_remove_build_cause_buffer_table.sql');
COMMIT;


-- Change script: #1702001: 1702001_remove_build_cause_buffer_table.sql
DROP TABLE BuildCauseBuffer;
DROP SEQUENCE buildcausebuffer_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1702001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------


--------------- Fragment begins: #1704001: 1704001_widen_agents_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704001_widen_agents_uuid_column.sql');
COMMIT;


-- Change script: #1704001: 1704001_widen_agents_uuid_column.sql

ALTER TABLE agents ALTER COLUMN uuid TYPE VARCHAR(255);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704001: 1704001_widen_agents_uuid_column.sql ---------------


--------------- Fragment begins: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704002_widen_builds_agent_uuid_column.sql');
COMMIT;


-- Change script: #1704002: 1704002_widen_builds_agent_uuid_column.sql

DROP VIEW _builds;

ALTER TABLE builds ALTER COLUMN agentUuid TYPE VARCHAR(255);

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------


--------------- Fragment begins: #1704003: 1704003_pipeline_state_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704003_pipeline_state_table.sql');
COMMIT;


-- Change script: #1704003: 1704003_pipeline_state_table.sql
CREATE SEQUENCE pipelinestates_id_seq START WITH 1;
CREATE TABLE PipelineStates (
    id                      BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pipelineName            CITEXT NOT NULL,
    locked                  BOOLEAN,
    lockedByPipelineId              BIGINT
);

ALTER TABLE PipelineStates ADD CONSTRAINT unique_pipeline_state UNIQUE (pipelineName);

INSERT INTO PipelineStates (pipelineName, locked, lockedByPipelineId) (select name, locked, id from pipelines where id in (select max(id) from pipelines where locked = true group by name));

DROP VIEW _stages;

CREATE VIEW _stages AS
    SELECT s.*,
      p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, ps.locked, p.naturalOrder
    FROM stages s
    INNER JOIN pipelines p ON p.id = s.pipelineId
    LEFT OUTER JOIN PipelineStates ps on ps.lockedByPipelineId = s.pipelineId;


ALTER TABLE pipelines drop column locked;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704003: 1704003_pipeline_state_table.sql ---------------


--------------- Fragment begins: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704004_pipeline_states_sequence_reset.sql');
COMMIT;


-- Change script: #1704004: 1704004_pipeline_states_sequence_reset.sql
-- As part of 1704003_pipeline_state_table.sql, PipelineStates was incorrectly setup to use plugins_id_seq instead of pipelinestates_id_seq.
-- This migration resets the sequence pipelinestates_id_seq to be the max(id) of PipelineStates, and alters PipelineStates to use the correct sequence.
-- Since sequences are not explicitly defined for H2, a corresponding migration for H2 is not required.

-- This delta is being backported to all releases starting from 17.4 until 17.10 as part of the patch release.

do $$
declare maxid int;
begin
    select max(id) from pipelinestates into maxid;
    IF maxid IS NULL THEN
        maxid = 1;
    END IF;
    execute 'alter SEQUENCE pipelinestates_id_seq RESTART with '|| maxid;
end;
$$ language plpgsql;

ALTER table PipelineStates alter column ID set default nextval('pipelinestates_id_seq');



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------


--------------- Fragment begins: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1708001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1708001_add_hostname_and_ip_to_agents_table.sql');
COMMIT;


-- Change script: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql
ALTER TABLE agents ADD COLUMN hostname VARCHAR(255) DEFAULT NULL;
ALTER TABLE agents ADD COLUMN ipaddress VARCHAR(50) DEFAULT NULL;
CREATE INDEX idx_agent_uuid ON AGENTS(UUID);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1708001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------


--------------- Fragment begins: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801001_remove_regex_generator_type_from_artifact_properties_generator.sql');
COMMIT;


-- Change script: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql
ALTER TABLE artifactpropertiesgenerator DROP COLUMN regex;
ALTER TABLE artifactpropertiesgenerator DROP COLUMN generatorType;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------


--------------- Fragment begins: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql');
COMMIT;


-- Change script: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql
ALTER TABLE artifactplans ADD COLUMN pluggableArtifactConfigJson TEXT DEFAULT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------


--------------- Fragment begins: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801003_remove_environment_variables_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM environmentVariables
-- WHERE environmentVariables.id IN (
--   SELECT environmentVariables.id
--   FROM environmentVariables
--   INNER JOIN builds
--   ON
--     builds.id = environmentVariables.entityId
--   WHERE
--       environmentVariables.entityType = 'Job'
--     AND
--       builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801004_remove_artifact_plans_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPlans
-- WHERE artifactPlans.id IN (
--   SELECT artifactPlans.id
--   FROM artifactPlans
--   INNER JOIN builds
--     ON builds.id = artifactPlans.buildId
--   WHERE
--       artifactPlans.artifactType = 'file'
--     AND
--       builds.state = 'Completed'
-- );




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801005, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801005_remove_artifact_properties_generator_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPropertiesGenerator
-- WHERE ID IN (
--   SELECT artifactPropertiesGenerator.id
--   FROM artifactPropertiesGenerator
--   INNER JOIN builds
--     ON builds.id = artifactPropertiesGenerator.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801005 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801006, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801006_remove_resources_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801006: 1801006_remove_resources_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.
-- DELETE FROM resources
-- WHERE resources.id IN (
--   SELECT resources.id
--   FROM resources
--   INNER JOIN builds
--     ON builds.id = resources.buildId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801006 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801007, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801007_remove_job_agent_metadata_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM jobAgentMetadata
-- WHERE jobAgentMetadata.id IN (
--   SELECT jobAgentMetadata.id
--   FROM jobAgentMetadata
--   INNER JOIN builds
--     ON
--       builds.id = jobAgentMetadata.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801007 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802001_clear_username_and_comment_for_dependency_materials.sql');
COMMIT;


-- Change script: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql
UPDATE
  modifications
SET
  username = null, comment = null
WHERE
    pipelineid IS NOT NULL
  AND
    username = 'Unknown'
  AND
    comment = 'Unknown';



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------


--------------- Fragment begins: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802002_add_index_on_pipelines_name_and_id_column.sql');
COMMIT;


-- Change script: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_pipeline_name_id ON pipelines( name, id );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------


--------------- Fragment begins: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1804001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql');
COMMIT;


-- Change script: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql
ALTER TABLE PIPELINELABELCOUNTS ADD COLUMN caseInsensitivePipelineName CITEXT;
UPDATE PIPELINELABELCOUNTS set caseInsensitivePipelineName = pipelinename;
CREATE INDEX idx_pipelinelabelcounts_caseinsensitivepipelinename ON PIPELINELABELCOUNTS(caseInsensitivePipelineName);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1804001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------


--------------- Fragment begins: #1805001: 1805001_drop_preferred_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1805001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1805001_drop_preferred_table.sql');
COMMIT;


-- Change script: #1805001: 1805001_drop_preferred_table.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- See `230006_make_user_name_case_insensitive.sql`
-- This was a temp table created to make users' login-name case-insensitive
DROP TABLE preffered;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1805001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1805001: 1805001_drop_preferred_table.sql ---------------


--------------- Fragment begins: #1807001: 1807001_data_sharing_settings_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807001_data_sharing_settings_table.sql');
COMMIT;


-- Change script: #1807001: 1807001_data_sharing_settings_table.sql
CREATE SEQUENCE datasharingsettings_id_seq START WITH 1;

CREATE TABLE DataSharingSettings (
  id             BIGINT DEFAULT nextval('datasharingsettings_id_seq') PRIMARY KEY,
  allowSharing        BOOLEAN NOT NULL,
  updatedBy    VARCHAR(255),
  updatedOn    TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807001: 1807001_data_sharing_settings_table.sql ---------------


--------------- Fragment begins: #1807002: 1807002_usage_data_reporting_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807002_usage_data_reporting_table.sql');
COMMIT;


-- Change script: #1807002: 1807002_usage_data_reporting_table.sql
CREATE SEQUENCE usagedatareporting_id_seq START WITH 1;

CREATE TABLE UsageDataReporting (
  id             BIGINT DEFAULT nextval('usagedatareporting_id_seq') PRIMARY KEY,
  serverId       VARCHAR(255) NOT NULL,
  lastReportedAt TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807002: 1807002_usage_data_reporting_table.sql ---------------


--------------- Fragment begins: #1808001: 1808001_remove_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808001_remove_oauth_tables.sql');
COMMIT;


-- Change script: #1808001: 1808001_remove_oauth_tables.sql
DROP TABLE oauthtokens;
DROP SEQUENCE oauthtokens_id_seq;

DROP TABLE oauthauthorizations;
DROP SEQUENCE oauthauthorizations_id_seq;

DROP TABLE oauthclients;
DROP SEQUENCE oauthclients_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808001: 1808001_remove_oauth_tables.sql ---------------


--------------- Fragment begins: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808002_add_filters_and_version_to_pipeline_selections.sql');
COMMIT;


-- Change script: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

ALTER TABLE PipelineSelections ADD COLUMN filters TEXT;
ALTER TABLE PipelineSelections ADD COLUMN version INT DEFAULT 0 NOT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------

]; nested exception is org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:137)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:407)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1623)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1178)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1136)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1064)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	... 66 more
Caused by: java.lang.RuntimeException: org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [

--------------- Fragment begins: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303001_add_additional_data_field_to_modifications_table.sql');
COMMIT;


-- Change script: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql
ALTER TABLE modifications ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------


--------------- Fragment begins: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303002_add_index_to_builds_on_stageId.sql');
COMMIT;


-- Change script: #1303002: 1303002_add_index_to_builds_on_stageId.sql
CREATE INDEX idx_builds_stageId ON builds(stageId);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------


--------------- Fragment begins: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303003_add_index_to_stages_resources_tables.sql');
COMMIT;


-- Change script: #1303003: 1303003_add_index_to_stages_resources_tables.sql
CREATE INDEX idx_stages_pipelineId ON stages(pipelineid);
CREATE INDEX idx_resources_buildId ON resources(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------


--------------- Fragment begins: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303004_indexes_based_on_purge_tool.sql');
COMMIT;


-- Change script: #1303004: 1303004_indexes_based_on_purge_tool.sql
CREATE INDEX idx_properties_buildId ON properties(buildId);
CREATE INDEX idx_materials_pipelinename ON materials(pipelinename);
CREATE INDEX idx_artifactpropertiesgenerator_jobid ON artifactpropertiesgenerator(jobid);
CREATE INDEX idx_environmentvariables_entitytype ON environmentvariables(entitytype);
CREATE INDEX idx_stageartifactcleanupprohibited_pipelinename ON stageartifactcleanupprohibited(pipelinename);
CREATE INDEX idx_pipelineLabelCounts_pipelinename ON pipelineLabelCounts(pipelinename);




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------


--------------- Fragment begins: #1304001: 1304001_remove_luau_related_entries.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1304001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1304001_remove_luau_related_entries.sql');
COMMIT;


-- Change script: #1304001: 1304001_remove_luau_related_entries.sql
DROP TABLE IF EXISTS luau_groups_users;
DROP TABLE IF EXISTS luau_groups;
DROP TABLE IF EXISTS luaustate;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1304001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1304001: 1304001_remove_luau_related_entries.sql ---------------


--------------- Fragment begins: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1401001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1401001_recreating_trigger_because_of_cruise_to_go_change.sql');
COMMIT;


-- Change script: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql
SELECT (1);


UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1401001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------


--------------- Fragment begins: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403001_fix_null_artifacttype_on_artifactplans_table.sql');
COMMIT;


-- Change script: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql
UPDATE ARTIFACTPLANS SET ARTIFACTTYPE='file' WHERE ARTIFACTTYPE IS NULL;
COMMIT;

-- No undo as adding default value to mandatory field



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------


--------------- Fragment begins: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql');
COMMIT;


-- Change script: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

alter table builds add column runMultipleInstance boolean default false;

DROP VIEW _builds;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------


--------------- Fragment begins: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql');
COMMIT;


-- Change script: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelineselections RENAME COLUMN unselectedpipelines TO selections;

ALTER TABLE pipelineselections ADD COLUMN isblacklist BOOLEAN DEFAULT true;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------


--------------- Fragment begins: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501002_add_comment_column_to_pipelines.sql');
COMMIT;


-- Change script: #1501002: 1501002_add_comment_column_to_pipelines.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelines ADD COLUMN comment TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------


--------------- Fragment begins: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501003_add_additional_data_field_to_materials_table.sql');
COMMIT;


-- Change script: #1501003: 1501003_add_additional_data_field_to_materials_table.sql
ALTER TABLE materials ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------


--------------- Fragment begins: #1502001: 1502001_create_plugins_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1502001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1502001_create_plugins_table.sql');
COMMIT;


-- Change script: #1502001: 1502001_create_plugins_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE plugins_id_seq START WITH 1;
CREATE TABLE plugins (
    id              BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pluginId        VARCHAR(255) Not NULL,
    configuration   TEXT,
    UNIQUE (pluginId)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1502001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1502001: 1502001_create_plugins_table.sql ---------------


--------------- Fragment begins: #1503001: 1503001_remove_licensing_from_users.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503001_remove_licensing_from_users.sql');
COMMIT;


-- Change script: #1503001: 1503001_remove_licensing_from_users.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE users DROP COLUMN disableLicenseExpiryWarning;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503001: 1503001_remove_licensing_from_users.sql ---------------


--------------- Fragment begins: #1503002: 1503002_create_version_infos_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503002_create_version_infos_table.sql');
COMMIT;


-- Change script: #1503002: 1503002_create_version_infos_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2015 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE versioninfos_id_seq START WITH 1;
CREATE TABLE versioninfos (
    id                      BIGINT DEFAULT nextval('versioninfos_id_seq') PRIMARY KEY,
    componentName           VARCHAR(255) Not NULL,
    installedVersion        VARCHAR(100) Not NULL,
    latestVersion           VARCHAR(50),
    latestVersionUpdatedAt  TIMESTAMP,
    UNIQUE (componentName)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503002: 1503002_create_version_infos_table.sql ---------------


--------------- Fragment begins: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606001_add_index_to_buildstatetransitions.sql');
COMMIT;


-- Change script: #1606001: 1606001_add_index_to_buildstatetransitions.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_buildstatetransition_build_id ON buildstatetransitions(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------


--------------- Fragment begins: #1606002: 1606002_add_index_to_artifactplans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606002_add_index_to_artifactplans.sql');
COMMIT;


-- Change script: #1606002: 1606002_add_index_to_artifactplans.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_artifactplan_build_id ON artifactplans(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606002: 1606002_add_index_to_artifactplans.sql ---------------


--------------- Fragment begins: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1607001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1607001_create_agent_metadata_job_table.sql');
COMMIT;


-- Change script: #1607001: 1607001_create_agent_metadata_job_table.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE SEQUENCE jobagentmetadata_id_seq START WITH 1;
CREATE TABLE jobagentmetadata (
  id              BIGINT DEFAULT nextval('jobagentmetadata_id_seq') PRIMARY KEY,
  jobId           BIGINT UNIQUE NOT NULL,
  metadata        TEXT NOT NULL,
  metadataVersion VARCHAR(50),
  UNIQUE (jobId)
);

ALTER TABLE jobagentmetadata ADD CONSTRAINT fk_jobagentmetadata_jobs FOREIGN KEY (jobId) REFERENCES builds (id)
  ON DELETE CASCADE;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1607001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------


--------------- Fragment begins: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1610001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1610001_add_index_to_modifiedfiles.sql');
COMMIT;


-- Change script: #1610001: 1610001_add_index_to_modifiedfiles.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX CONCURRENTLY idx_modifiedfiles_modification_id ON modifiedfiles(modificationid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1610001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------


--------------- Fragment begins: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701001_remove_gadget_oauth_tables.sql');
COMMIT;


-- Change script: #1701001: 1701001_remove_gadget_oauth_tables.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

DROP TABLE gadgetOauthAuthorizationCodes;
DROP TABLE gadgetOauthAccessTokens;
DROP TABLE gadgetOauthClients;

DROP SEQUENCE gadgetOauthClients_id_seq;
DROP SEQUENCE gadgetOauthAccessTokens_id_seq;
DROP SEQUENCE gadgetOauthAuthorizationCodes_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------


--------------- Fragment begins: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701002_remove_materialproperties_id_seq.sql');
COMMIT;


-- Change script: #1701002: 1701002_remove_materialproperties_id_seq.sql
DROP SEQUENCE IF EXISTS materialProperties_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------


--------------- Fragment begins: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1702001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1702001_remove_build_cause_buffer_table.sql');
COMMIT;


-- Change script: #1702001: 1702001_remove_build_cause_buffer_table.sql
DROP TABLE BuildCauseBuffer;
DROP SEQUENCE buildcausebuffer_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1702001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------


--------------- Fragment begins: #1704001: 1704001_widen_agents_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704001_widen_agents_uuid_column.sql');
COMMIT;


-- Change script: #1704001: 1704001_widen_agents_uuid_column.sql

ALTER TABLE agents ALTER COLUMN uuid TYPE VARCHAR(255);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704001: 1704001_widen_agents_uuid_column.sql ---------------


--------------- Fragment begins: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704002_widen_builds_agent_uuid_column.sql');
COMMIT;


-- Change script: #1704002: 1704002_widen_builds_agent_uuid_column.sql

DROP VIEW _builds;

ALTER TABLE builds ALTER COLUMN agentUuid TYPE VARCHAR(255);

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------


--------------- Fragment begins: #1704003: 1704003_pipeline_state_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704003_pipeline_state_table.sql');
COMMIT;


-- Change script: #1704003: 1704003_pipeline_state_table.sql
CREATE SEQUENCE pipelinestates_id_seq START WITH 1;
CREATE TABLE PipelineStates (
    id                      BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pipelineName            CITEXT NOT NULL,
    locked                  BOOLEAN,
    lockedByPipelineId              BIGINT
);

ALTER TABLE PipelineStates ADD CONSTRAINT unique_pipeline_state UNIQUE (pipelineName);

INSERT INTO PipelineStates (pipelineName, locked, lockedByPipelineId) (select name, locked, id from pipelines where id in (select max(id) from pipelines where locked = true group by name));

DROP VIEW _stages;

CREATE VIEW _stages AS
    SELECT s.*,
      p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, ps.locked, p.naturalOrder
    FROM stages s
    INNER JOIN pipelines p ON p.id = s.pipelineId
    LEFT OUTER JOIN PipelineStates ps on ps.lockedByPipelineId = s.pipelineId;


ALTER TABLE pipelines drop column locked;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704003: 1704003_pipeline_state_table.sql ---------------


--------------- Fragment begins: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704004_pipeline_states_sequence_reset.sql');
COMMIT;


-- Change script: #1704004: 1704004_pipeline_states_sequence_reset.sql
-- As part of 1704003_pipeline_state_table.sql, PipelineStates was incorrectly setup to use plugins_id_seq instead of pipelinestates_id_seq.
-- This migration resets the sequence pipelinestates_id_seq to be the max(id) of PipelineStates, and alters PipelineStates to use the correct sequence.
-- Since sequences are not explicitly defined for H2, a corresponding migration for H2 is not required.

-- This delta is being backported to all releases starting from 17.4 until 17.10 as part of the patch release.

do $$
declare maxid int;
begin
    select max(id) from pipelinestates into maxid;
    IF maxid IS NULL THEN
        maxid = 1;
    END IF;
    execute 'alter SEQUENCE pipelinestates_id_seq RESTART with '|| maxid;
end;
$$ language plpgsql;

ALTER table PipelineStates alter column ID set default nextval('pipelinestates_id_seq');



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------


--------------- Fragment begins: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1708001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1708001_add_hostname_and_ip_to_agents_table.sql');
COMMIT;


-- Change script: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql
ALTER TABLE agents ADD COLUMN hostname VARCHAR(255) DEFAULT NULL;
ALTER TABLE agents ADD COLUMN ipaddress VARCHAR(50) DEFAULT NULL;
CREATE INDEX idx_agent_uuid ON AGENTS(UUID);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1708001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------


--------------- Fragment begins: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801001_remove_regex_generator_type_from_artifact_properties_generator.sql');
COMMIT;


-- Change script: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql
ALTER TABLE artifactpropertiesgenerator DROP COLUMN regex;
ALTER TABLE artifactpropertiesgenerator DROP COLUMN generatorType;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------


--------------- Fragment begins: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql');
COMMIT;


-- Change script: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql
ALTER TABLE artifactplans ADD COLUMN pluggableArtifactConfigJson TEXT DEFAULT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------


--------------- Fragment begins: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801003_remove_environment_variables_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM environmentVariables
-- WHERE environmentVariables.id IN (
--   SELECT environmentVariables.id
--   FROM environmentVariables
--   INNER JOIN builds
--   ON
--     builds.id = environmentVariables.entityId
--   WHERE
--       environmentVariables.entityType = 'Job'
--     AND
--       builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801004_remove_artifact_plans_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPlans
-- WHERE artifactPlans.id IN (
--   SELECT artifactPlans.id
--   FROM artifactPlans
--   INNER JOIN builds
--     ON builds.id = artifactPlans.buildId
--   WHERE
--       artifactPlans.artifactType = 'file'
--     AND
--       builds.state = 'Completed'
-- );




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801005, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801005_remove_artifact_properties_generator_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPropertiesGenerator
-- WHERE ID IN (
--   SELECT artifactPropertiesGenerator.id
--   FROM artifactPropertiesGenerator
--   INNER JOIN builds
--     ON builds.id = artifactPropertiesGenerator.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801005 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801006, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801006_remove_resources_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801006: 1801006_remove_resources_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.
-- DELETE FROM resources
-- WHERE resources.id IN (
--   SELECT resources.id
--   FROM resources
--   INNER JOIN builds
--     ON builds.id = resources.buildId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801006 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801007, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801007_remove_job_agent_metadata_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM jobAgentMetadata
-- WHERE jobAgentMetadata.id IN (
--   SELECT jobAgentMetadata.id
--   FROM jobAgentMetadata
--   INNER JOIN builds
--     ON
--       builds.id = jobAgentMetadata.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801007 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802001_clear_username_and_comment_for_dependency_materials.sql');
COMMIT;


-- Change script: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql
UPDATE
  modifications
SET
  username = null, comment = null
WHERE
    pipelineid IS NOT NULL
  AND
    username = 'Unknown'
  AND
    comment = 'Unknown';



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------


--------------- Fragment begins: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802002_add_index_on_pipelines_name_and_id_column.sql');
COMMIT;


-- Change script: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_pipeline_name_id ON pipelines( name, id );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------


--------------- Fragment begins: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1804001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql');
COMMIT;


-- Change script: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql
ALTER TABLE PIPELINELABELCOUNTS ADD COLUMN caseInsensitivePipelineName CITEXT;
UPDATE PIPELINELABELCOUNTS set caseInsensitivePipelineName = pipelinename;
CREATE INDEX idx_pipelinelabelcounts_caseinsensitivepipelinename ON PIPELINELABELCOUNTS(caseInsensitivePipelineName);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1804001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------


--------------- Fragment begins: #1805001: 1805001_drop_preferred_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1805001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1805001_drop_preferred_table.sql');
COMMIT;


-- Change script: #1805001: 1805001_drop_preferred_table.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- See `230006_make_user_name_case_insensitive.sql`
-- This was a temp table created to make users' login-name case-insensitive
DROP TABLE preffered;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1805001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1805001: 1805001_drop_preferred_table.sql ---------------


--------------- Fragment begins: #1807001: 1807001_data_sharing_settings_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807001_data_sharing_settings_table.sql');
COMMIT;


-- Change script: #1807001: 1807001_data_sharing_settings_table.sql
CREATE SEQUENCE datasharingsettings_id_seq START WITH 1;

CREATE TABLE DataSharingSettings (
  id             BIGINT DEFAULT nextval('datasharingsettings_id_seq') PRIMARY KEY,
  allowSharing        BOOLEAN NOT NULL,
  updatedBy    VARCHAR(255),
  updatedOn    TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807001: 1807001_data_sharing_settings_table.sql ---------------


--------------- Fragment begins: #1807002: 1807002_usage_data_reporting_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807002_usage_data_reporting_table.sql');
COMMIT;


-- Change script: #1807002: 1807002_usage_data_reporting_table.sql
CREATE SEQUENCE usagedatareporting_id_seq START WITH 1;

CREATE TABLE UsageDataReporting (
  id             BIGINT DEFAULT nextval('usagedatareporting_id_seq') PRIMARY KEY,
  serverId       VARCHAR(255) NOT NULL,
  lastReportedAt TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807002: 1807002_usage_data_reporting_table.sql ---------------


--------------- Fragment begins: #1808001: 1808001_remove_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808001_remove_oauth_tables.sql');
COMMIT;


-- Change script: #1808001: 1808001_remove_oauth_tables.sql
DROP TABLE oauthtokens;
DROP SEQUENCE oauthtokens_id_seq;

DROP TABLE oauthauthorizations;
DROP SEQUENCE oauthauthorizations_id_seq;

DROP TABLE oauthclients;
DROP SEQUENCE oauthclients_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808001: 1808001_remove_oauth_tables.sql ---------------


--------------- Fragment begins: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808002_add_filters_and_version_to_pipeline_selections.sql');
COMMIT;


-- Change script: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

ALTER TABLE PipelineSelections ADD COLUMN filters TEXT;
ALTER TABLE PipelineSelections ADD COLUMN version INT DEFAULT 0 NOT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------

]; nested exception is org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at com.thoughtworks.go.postgresql.PostgresqlDatabase.upgrade(PostgresqlDatabase.java:110)
	at com.thoughtworks.go.server.database.DatabaseStrategy.upgrade(DatabaseStrategy.java:59)
	at com.thoughtworks.go.server.util.DatabaseUpgraderDataSourceFactory.upgradeDb(DatabaseUpgraderDataSourceFactory.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:311)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:134)
	... 88 more
Caused by: org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [

--------------- Fragment begins: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303001_add_additional_data_field_to_modifications_table.sql');
COMMIT;


-- Change script: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql
ALTER TABLE modifications ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303001: 1303001_add_additional_data_field_to_modifications_table.sql ---------------


--------------- Fragment begins: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303002_add_index_to_builds_on_stageId.sql');
COMMIT;


-- Change script: #1303002: 1303002_add_index_to_builds_on_stageId.sql
CREATE INDEX idx_builds_stageId ON builds(stageId);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303002: 1303002_add_index_to_builds_on_stageId.sql ---------------


--------------- Fragment begins: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303003_add_index_to_stages_resources_tables.sql');
COMMIT;


-- Change script: #1303003: 1303003_add_index_to_stages_resources_tables.sql
CREATE INDEX idx_stages_pipelineId ON stages(pipelineid);
CREATE INDEX idx_resources_buildId ON resources(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303003: 1303003_add_index_to_stages_resources_tables.sql ---------------


--------------- Fragment begins: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1303004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1303004_indexes_based_on_purge_tool.sql');
COMMIT;


-- Change script: #1303004: 1303004_indexes_based_on_purge_tool.sql
CREATE INDEX idx_properties_buildId ON properties(buildId);
CREATE INDEX idx_materials_pipelinename ON materials(pipelinename);
CREATE INDEX idx_artifactpropertiesgenerator_jobid ON artifactpropertiesgenerator(jobid);
CREATE INDEX idx_environmentvariables_entitytype ON environmentvariables(entitytype);
CREATE INDEX idx_stageartifactcleanupprohibited_pipelinename ON stageartifactcleanupprohibited(pipelinename);
CREATE INDEX idx_pipelineLabelCounts_pipelinename ON pipelineLabelCounts(pipelinename);




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1303004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1303004: 1303004_indexes_based_on_purge_tool.sql ---------------


--------------- Fragment begins: #1304001: 1304001_remove_luau_related_entries.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1304001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1304001_remove_luau_related_entries.sql');
COMMIT;


-- Change script: #1304001: 1304001_remove_luau_related_entries.sql
DROP TABLE IF EXISTS luau_groups_users;
DROP TABLE IF EXISTS luau_groups;
DROP TABLE IF EXISTS luaustate;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1304001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1304001: 1304001_remove_luau_related_entries.sql ---------------


--------------- Fragment begins: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1401001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1401001_recreating_trigger_because_of_cruise_to_go_change.sql');
COMMIT;


-- Change script: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql
SELECT (1);


UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1401001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1401001: 1401001_recreating_trigger_because_of_cruise_to_go_change.sql ---------------


--------------- Fragment begins: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403001_fix_null_artifacttype_on_artifactplans_table.sql');
COMMIT;


-- Change script: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql
UPDATE ARTIFACTPLANS SET ARTIFACTTYPE='file' WHERE ARTIFACTTYPE IS NULL;
COMMIT;

-- No undo as adding default value to mandatory field



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403001: 1403001_fix_null_artifacttype_on_artifactplans_table.sql ---------------


--------------- Fragment begins: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1403002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql');
COMMIT;


-- Change script: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

alter table builds add column runMultipleInstance boolean default false;

DROP VIEW _builds;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1403002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1403002: 1403002_add_runMultipleInstance_column_on_builds_table_recreate_view.sql ---------------


--------------- Fragment begins: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql');
COMMIT;


-- Change script: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelineselections RENAME COLUMN unselectedpipelines TO selections;

ALTER TABLE pipelineselections ADD COLUMN isblacklist BOOLEAN DEFAULT true;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501001: 1501001_rename_pipeline_selections_unselected_pipelines_column_to_selections.sql ---------------


--------------- Fragment begins: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501002_add_comment_column_to_pipelines.sql');
COMMIT;


-- Change script: #1501002: 1501002_add_comment_column_to_pipelines.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE pipelines ADD COLUMN comment TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501002: 1501002_add_comment_column_to_pipelines.sql ---------------


--------------- Fragment begins: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1501003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1501003_add_additional_data_field_to_materials_table.sql');
COMMIT;


-- Change script: #1501003: 1501003_add_additional_data_field_to_materials_table.sql
ALTER TABLE materials ADD COLUMN additionalData TEXT;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1501003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1501003: 1501003_add_additional_data_field_to_materials_table.sql ---------------


--------------- Fragment begins: #1502001: 1502001_create_plugins_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1502001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1502001_create_plugins_table.sql');
COMMIT;


-- Change script: #1502001: 1502001_create_plugins_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE plugins_id_seq START WITH 1;
CREATE TABLE plugins (
    id              BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pluginId        VARCHAR(255) Not NULL,
    configuration   TEXT,
    UNIQUE (pluginId)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1502001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1502001: 1502001_create_plugins_table.sql ---------------


--------------- Fragment begins: #1503001: 1503001_remove_licensing_from_users.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503001_remove_licensing_from_users.sql');
COMMIT;


-- Change script: #1503001: 1503001_remove_licensing_from_users.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2014 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

ALTER TABLE users DROP COLUMN disableLicenseExpiryWarning;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503001: 1503001_remove_licensing_from_users.sql ---------------


--------------- Fragment begins: #1503002: 1503002_create_version_infos_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1503002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1503002_create_version_infos_table.sql');
COMMIT;


-- Change script: #1503002: 1503002_create_version_infos_table.sql
--*************************GO-LICENSE-START*********************************
-- Copyright 2015 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--*************************GO-LICENSE-END***********************************

CREATE SEQUENCE versioninfos_id_seq START WITH 1;
CREATE TABLE versioninfos (
    id                      BIGINT DEFAULT nextval('versioninfos_id_seq') PRIMARY KEY,
    componentName           VARCHAR(255) Not NULL,
    installedVersion        VARCHAR(100) Not NULL,
    latestVersion           VARCHAR(50),
    latestVersionUpdatedAt  TIMESTAMP,
    UNIQUE (componentName)
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1503002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1503002: 1503002_create_version_infos_table.sql ---------------


--------------- Fragment begins: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606001_add_index_to_buildstatetransitions.sql');
COMMIT;


-- Change script: #1606001: 1606001_add_index_to_buildstatetransitions.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_buildstatetransition_build_id ON buildstatetransitions(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606001: 1606001_add_index_to_buildstatetransitions.sql ---------------


--------------- Fragment begins: #1606002: 1606002_add_index_to_artifactplans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1606002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1606002_add_index_to_artifactplans.sql');
COMMIT;


-- Change script: #1606002: 1606002_add_index_to_artifactplans.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_artifactplan_build_id ON artifactplans(buildid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1606002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1606002: 1606002_add_index_to_artifactplans.sql ---------------


--------------- Fragment begins: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1607001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1607001_create_agent_metadata_job_table.sql');
COMMIT;


-- Change script: #1607001: 1607001_create_agent_metadata_job_table.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE SEQUENCE jobagentmetadata_id_seq START WITH 1;
CREATE TABLE jobagentmetadata (
  id              BIGINT DEFAULT nextval('jobagentmetadata_id_seq') PRIMARY KEY,
  jobId           BIGINT UNIQUE NOT NULL,
  metadata        TEXT NOT NULL,
  metadataVersion VARCHAR(50),
  UNIQUE (jobId)
);

ALTER TABLE jobagentmetadata ADD CONSTRAINT fk_jobagentmetadata_jobs FOREIGN KEY (jobId) REFERENCES builds (id)
  ON DELETE CASCADE;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1607001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1607001: 1607001_create_agent_metadata_job_table.sql ---------------


--------------- Fragment begins: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1610001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1610001_add_index_to_modifiedfiles.sql');
COMMIT;


-- Change script: #1610001: 1610001_add_index_to_modifiedfiles.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX CONCURRENTLY idx_modifiedfiles_modification_id ON modifiedfiles(modificationid);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1610001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1610001: 1610001_add_index_to_modifiedfiles.sql ---------------


--------------- Fragment begins: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701001_remove_gadget_oauth_tables.sql');
COMMIT;


-- Change script: #1701001: 1701001_remove_gadget_oauth_tables.sql
--
-- Copyright 2016 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

DROP TABLE gadgetOauthAuthorizationCodes;
DROP TABLE gadgetOauthAccessTokens;
DROP TABLE gadgetOauthClients;

DROP SEQUENCE gadgetOauthClients_id_seq;
DROP SEQUENCE gadgetOauthAccessTokens_id_seq;
DROP SEQUENCE gadgetOauthAuthorizationCodes_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701001: 1701001_remove_gadget_oauth_tables.sql ---------------


--------------- Fragment begins: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1701002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1701002_remove_materialproperties_id_seq.sql');
COMMIT;


-- Change script: #1701002: 1701002_remove_materialproperties_id_seq.sql
DROP SEQUENCE IF EXISTS materialProperties_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1701002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1701002: 1701002_remove_materialproperties_id_seq.sql ---------------


--------------- Fragment begins: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1702001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1702001_remove_build_cause_buffer_table.sql');
COMMIT;


-- Change script: #1702001: 1702001_remove_build_cause_buffer_table.sql
DROP TABLE BuildCauseBuffer;
DROP SEQUENCE buildcausebuffer_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1702001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1702001: 1702001_remove_build_cause_buffer_table.sql ---------------


--------------- Fragment begins: #1704001: 1704001_widen_agents_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704001_widen_agents_uuid_column.sql');
COMMIT;


-- Change script: #1704001: 1704001_widen_agents_uuid_column.sql

ALTER TABLE agents ALTER COLUMN uuid TYPE VARCHAR(255);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704001: 1704001_widen_agents_uuid_column.sql ---------------


--------------- Fragment begins: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704002_widen_builds_agent_uuid_column.sql');
COMMIT;


-- Change script: #1704002: 1704002_widen_builds_agent_uuid_column.sql

DROP VIEW _builds;

ALTER TABLE builds ALTER COLUMN agentUuid TYPE VARCHAR(255);

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704002: 1704002_widen_builds_agent_uuid_column.sql ---------------


--------------- Fragment begins: #1704003: 1704003_pipeline_state_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704003_pipeline_state_table.sql');
COMMIT;


-- Change script: #1704003: 1704003_pipeline_state_table.sql
CREATE SEQUENCE pipelinestates_id_seq START WITH 1;
CREATE TABLE PipelineStates (
    id                      BIGINT DEFAULT nextval('plugins_id_seq') PRIMARY KEY,
    pipelineName            CITEXT NOT NULL,
    locked                  BOOLEAN,
    lockedByPipelineId              BIGINT
);

ALTER TABLE PipelineStates ADD CONSTRAINT unique_pipeline_state UNIQUE (pipelineName);

INSERT INTO PipelineStates (pipelineName, locked, lockedByPipelineId) (select name, locked, id from pipelines where id in (select max(id) from pipelines where locked = true group by name));

DROP VIEW _stages;

CREATE VIEW _stages AS
    SELECT s.*,
      p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, ps.locked, p.naturalOrder
    FROM stages s
    INNER JOIN pipelines p ON p.id = s.pipelineId
    LEFT OUTER JOIN PipelineStates ps on ps.lockedByPipelineId = s.pipelineId;


ALTER TABLE pipelines drop column locked;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704003: 1704003_pipeline_state_table.sql ---------------


--------------- Fragment begins: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1704004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1704004_pipeline_states_sequence_reset.sql');
COMMIT;


-- Change script: #1704004: 1704004_pipeline_states_sequence_reset.sql
-- As part of 1704003_pipeline_state_table.sql, PipelineStates was incorrectly setup to use plugins_id_seq instead of pipelinestates_id_seq.
-- This migration resets the sequence pipelinestates_id_seq to be the max(id) of PipelineStates, and alters PipelineStates to use the correct sequence.
-- Since sequences are not explicitly defined for H2, a corresponding migration for H2 is not required.

-- This delta is being backported to all releases starting from 17.4 until 17.10 as part of the patch release.

do $$
declare maxid int;
begin
    select max(id) from pipelinestates into maxid;
    IF maxid IS NULL THEN
        maxid = 1;
    END IF;
    execute 'alter SEQUENCE pipelinestates_id_seq RESTART with '|| maxid;
end;
$$ language plpgsql;

ALTER table PipelineStates alter column ID set default nextval('pipelinestates_id_seq');



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1704004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1704004: 1704004_pipeline_states_sequence_reset.sql ---------------


--------------- Fragment begins: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1708001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1708001_add_hostname_and_ip_to_agents_table.sql');
COMMIT;


-- Change script: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql
ALTER TABLE agents ADD COLUMN hostname VARCHAR(255) DEFAULT NULL;
ALTER TABLE agents ADD COLUMN ipaddress VARCHAR(50) DEFAULT NULL;
CREATE INDEX idx_agent_uuid ON AGENTS(UUID);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1708001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1708001: 1708001_add_hostname_and_ip_to_agents_table.sql ---------------


--------------- Fragment begins: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801001_remove_regex_generator_type_from_artifact_properties_generator.sql');
COMMIT;


-- Change script: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql
ALTER TABLE artifactpropertiesgenerator DROP COLUMN regex;
ALTER TABLE artifactpropertiesgenerator DROP COLUMN generatorType;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801001: 1801001_remove_regex_generator_type_from_artifact_properties_generator.sql ---------------


--------------- Fragment begins: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql');
COMMIT;


-- Change script: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql
ALTER TABLE artifactplans ADD COLUMN pluggableArtifactConfigJson TEXT DEFAULT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801002: 1801002_add_pluggable_artifactconfig_json_to_artifact_plans.sql ---------------


--------------- Fragment begins: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801003, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801003_remove_environment_variables_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM environmentVariables
-- WHERE environmentVariables.id IN (
--   SELECT environmentVariables.id
--   FROM environmentVariables
--   INNER JOIN builds
--   ON
--     builds.id = environmentVariables.entityId
--   WHERE
--       environmentVariables.entityType = 'Job'
--     AND
--       builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801003 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801003: 1801003_remove_environment_variables_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801004, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801004_remove_artifact_plans_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPlans
-- WHERE artifactPlans.id IN (
--   SELECT artifactPlans.id
--   FROM artifactPlans
--   INNER JOIN builds
--     ON builds.id = artifactPlans.buildId
--   WHERE
--       artifactPlans.artifactType = 'file'
--     AND
--       builds.state = 'Completed'
-- );




UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801004 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801004: 1801004_remove_artifact_plans_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801005, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801005_remove_artifact_properties_generator_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM artifactPropertiesGenerator
-- WHERE ID IN (
--   SELECT artifactPropertiesGenerator.id
--   FROM artifactPropertiesGenerator
--   INNER JOIN builds
--     ON builds.id = artifactPropertiesGenerator.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801005 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801005: 1801005_remove_artifact_properties_generator_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801006, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801006_remove_resources_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801006: 1801006_remove_resources_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.
-- DELETE FROM resources
-- WHERE resources.id IN (
--   SELECT resources.id
--   FROM resources
--   INNER JOIN builds
--     ON builds.id = resources.buildId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801006 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801006: 1801006_remove_resources_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1801007, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1801007_remove_job_agent_metadata_for_completed_jobs.sql');
COMMIT;


-- Change script: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql
-- This query turned out to be time consuming on bigger db instances. Commenting it out as we plan to rethink about how we want to remove data from these tables.

-- DELETE FROM jobAgentMetadata
-- WHERE jobAgentMetadata.id IN (
--   SELECT jobAgentMetadata.id
--   FROM jobAgentMetadata
--   INNER JOIN builds
--     ON
--       builds.id = jobAgentMetadata.jobId
--   WHERE
--     builds.state = 'Completed'
-- );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1801007 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1801007: 1801007_remove_job_agent_metadata_for_completed_jobs.sql ---------------


--------------- Fragment begins: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802001_clear_username_and_comment_for_dependency_materials.sql');
COMMIT;


-- Change script: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql
UPDATE
  modifications
SET
  username = null, comment = null
WHERE
    pipelineid IS NOT NULL
  AND
    username = 'Unknown'
  AND
    comment = 'Unknown';



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802001: 1802001_clear_username_and_comment_for_dependency_materials.sql ---------------


--------------- Fragment begins: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1802002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1802002_add_index_on_pipelines_name_and_id_column.sql');
COMMIT;


-- Change script: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

CREATE INDEX idx_pipeline_name_id ON pipelines( name, id );



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1802002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1802002: 1802002_add_index_on_pipelines_name_and_id_column.sql ---------------


--------------- Fragment begins: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1804001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql');
COMMIT;


-- Change script: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql
ALTER TABLE PIPELINELABELCOUNTS ADD COLUMN caseInsensitivePipelineName CITEXT;
UPDATE PIPELINELABELCOUNTS set caseInsensitivePipelineName = pipelinename;
CREATE INDEX idx_pipelinelabelcounts_caseinsensitivepipelinename ON PIPELINELABELCOUNTS(caseInsensitivePipelineName);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1804001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1804001: 1804001_add_case_insensitive_pipelinename_column_to_pipelinelabelcounts.sql ---------------


--------------- Fragment begins: #1805001: 1805001_drop_preferred_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1805001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1805001_drop_preferred_table.sql');
COMMIT;


-- Change script: #1805001: 1805001_drop_preferred_table.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- See `230006_make_user_name_case_insensitive.sql`
-- This was a temp table created to make users' login-name case-insensitive
DROP TABLE preffered;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1805001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1805001: 1805001_drop_preferred_table.sql ---------------


--------------- Fragment begins: #1807001: 1807001_data_sharing_settings_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807001_data_sharing_settings_table.sql');
COMMIT;


-- Change script: #1807001: 1807001_data_sharing_settings_table.sql
CREATE SEQUENCE datasharingsettings_id_seq START WITH 1;

CREATE TABLE DataSharingSettings (
  id             BIGINT DEFAULT nextval('datasharingsettings_id_seq') PRIMARY KEY,
  allowSharing        BOOLEAN NOT NULL,
  updatedBy    VARCHAR(255),
  updatedOn    TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807001: 1807001_data_sharing_settings_table.sql ---------------


--------------- Fragment begins: #1807002: 1807002_usage_data_reporting_table.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1807002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1807002_usage_data_reporting_table.sql');
COMMIT;


-- Change script: #1807002: 1807002_usage_data_reporting_table.sql
CREATE SEQUENCE usagedatareporting_id_seq START WITH 1;

CREATE TABLE UsageDataReporting (
  id             BIGINT DEFAULT nextval('usagedatareporting_id_seq') PRIMARY KEY,
  serverId       VARCHAR(255) NOT NULL,
  lastReportedAt TIMESTAMP
);



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1807002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1807002: 1807002_usage_data_reporting_table.sql ---------------


--------------- Fragment begins: #1808001: 1808001_remove_oauth_tables.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808001, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808001_remove_oauth_tables.sql');
COMMIT;


-- Change script: #1808001: 1808001_remove_oauth_tables.sql
DROP TABLE oauthtokens;
DROP SEQUENCE oauthtokens_id_seq;

DROP TABLE oauthauthorizations;
DROP SEQUENCE oauthauthorizations_id_seq;

DROP TABLE oauthclients;
DROP SEQUENCE oauthclients_id_seq;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808001 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808001: 1808001_remove_oauth_tables.sql ---------------


--------------- Fragment begins: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------
INSERT INTO changelog (change_number, delta_set, start_dt, applied_by, description) VALUES (1808002, 'DDL', CURRENT_TIMESTAMP, 'postgres', '1808002_add_filters_and_version_to_pipeline_selections.sql');
COMMIT;


-- Change script: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql
--
-- Copyright 2018 ThoughtWorks, Inc.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

ALTER TABLE PipelineSelections ADD COLUMN filters TEXT;
ALTER TABLE PipelineSelections ADD COLUMN version INT DEFAULT 0 NOT NULL;



UPDATE changelog SET complete_dt = CURRENT_TIMESTAMP WHERE change_number = 1808002 AND delta_set = 'DDL';
COMMIT;
--------------- Fragment ends: #1808002: 1808002_add_filters_and_version_to_pipeline_selections.sql ---------------

]; nested exception is org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:230)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:419)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:445)
	at com.thoughtworks.go.postgresql.PostgresqlDatabase.upgrade(PostgresqlDatabase.java:107)
	... 97 more
Caused by: org.postgresql.util.PSQLException: ERROR: relation "modifications" does not exist
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2157)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1886)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:255)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:555)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:403)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:395)
	at org.apache.commons.dbcp.DelegatingStatement.execute(DelegatingStatement.java:264)
	at org.apache.commons.dbcp.DelegatingStatement.execute(DelegatingStatement.java:264)
	at org.springframework.jdbc.core.JdbcTemplate$1ExecuteStatementCallback.doInStatement(JdbcTemplate.java:436)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:408)
	... 99 more
